[
    {
        "url": "https://api.github.com/repos/chrysn/aiocoap/issues/227",
        "repository_url": "https://api.github.com/repos/chrysn/aiocoap",
        "labels_url": "https://api.github.com/repos/chrysn/aiocoap/issues/227/labels{/name}",
        "comments_url": "https://api.github.com/repos/chrysn/aiocoap/issues/227/comments",
        "events_url": "https://api.github.com/repos/chrysn/aiocoap/issues/227/events",
        "html_url": "https://github.com/chrysn/aiocoap/issues/227",
        "id": 788879768,
        "node_id": "MDU6SXNzdWU3ODg4Nzk3Njg=",
        "number": 227,
        "title": "Notification sending fail",
        "user": {
            "login": "christopheronco",
            "id": 72556345,
            "node_id": "MDQ6VXNlcjcyNTU2MzQ1",
            "avatar_url": "https://avatars.githubusercontent.com/u/72556345?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/christopheronco",
            "html_url": "https://github.com/christopheronco",
            "followers_url": "https://api.github.com/users/christopheronco/followers",
            "following_url": "https://api.github.com/users/christopheronco/following{/other_user}",
            "gists_url": "https://api.github.com/users/christopheronco/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/christopheronco/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/christopheronco/subscriptions",
            "organizations_url": "https://api.github.com/users/christopheronco/orgs",
            "repos_url": "https://api.github.com/users/christopheronco/repos",
            "events_url": "https://api.github.com/users/christopheronco/events{/privacy}",
            "received_events_url": "https://api.github.com/users/christopheronco/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2021-01-19T10:00:53Z",
        "updated_at": "2021-01-19T16:35:57Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I am using aiocoap to develop a COAP server.\r\nSome resources are observable.\r\nWhen link is temporary down, if a Notify is sent to client, in logs, I have an exception like that:\r\n\r\n> Jan 18 17:45:11 klk972 coap-server An exception occurred while rendering a resource: OSError(9, 'Bad file descriptor')\r\n> Traceback (most recent call last):\r\n  File \"/home/cro/utilc/keros/aiocoap/aiocoap/protocol.py\", line 368, in _render_to_plumbing_request\r\n    await self._render_to_plumbing_request_inner(plumbing_request,\r\n  File \"/home/cro/utilc/keros/aiocoap/aiocoap/protocol.py\", line 557, in _render_to_plumbing_request_inner\r\n    response = await self.serversite.render(request)\r\n  File \"/home/cro/utilc/keros/aiocoap/aiocoap/resource.py\", line 362, in render\r\n    child, subrequest = self._find_child_and_pathstripped_message(request)\r\n  File \"/home/cro/utilc/keros/aiocoap/aiocoap/resource.py\", line 335, in _find_child_and_pathstripped_message\r\n    request.get_request_uri(local_is_server=True))\r\n  File \"/home/cro/utilc/keros/aiocoap/aiocoap/message.py\", line 443, in get_request_uri\r\n    netloc = refmsg.remote.hostinfo_local\r\n  File \"/home/cro/utilc/keros/aiocoap/aiocoap/transports/tcp.py\", line 268, in hostinfo_loca\r\n    host, port, *_ = self._transport.get_extra_info('socket').getsockname()\r\n  File \"/usr/lib/python3.8/asyncio/trsock.py\", line 88, in getsockname\r\n    return self._sock.getsockname()#012OSError: [Errno 9] Bad file descriptor\r\n\r\nThis is normal, underlying socket is dead.\r\nBut notification is definitely lost and application (above aiocoap library) is not aware that notification has not been sent successfully.\r\nWhen link comes back, this notification is not re-sent.\r\n\r\nI see two ways to handle this problem:\r\n - when calling updated_state, application gives a coroutine. It will be called by aoicoap library if notification sending fails. Maybe that's difficult if we have more than one client to notify. That's not my case but I don't know what to do if only some of the clients are notified.\r\n - aiocoap library handle retransmission of notifications by itsenf. In this case, the questions are: when should retransmissions be done? When do we stop to try to retransmit?\r\n\r\nAm I right when I say that something is missing in aiocoap library to do that or is there an existing way I didn't see?\r\nIf there is something to do in aiocoap, what is the best way to do it: callback? handle retransmissions in library? other thing?\r\n\r\nBest Regards,\r\n\r\nChristophe Ronco",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/chrysn/aiocoap/issues/226",
        "repository_url": "https://api.github.com/repos/chrysn/aiocoap",
        "labels_url": "https://api.github.com/repos/chrysn/aiocoap/issues/226/labels{/name}",
        "comments_url": "https://api.github.com/repos/chrysn/aiocoap/issues/226/comments",
        "events_url": "https://api.github.com/repos/chrysn/aiocoap/issues/226/events",
        "html_url": "https://github.com/chrysn/aiocoap/issues/226",
        "id": 783437093,
        "node_id": "MDU6SXNzdWU3ODM0MzcwOTM=",
        "number": 226,
        "title": "Consistent transport timeouts",
        "user": {
            "login": "chrysn",
            "id": 442326,
            "node_id": "MDQ6VXNlcjQ0MjMyNg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/442326?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chrysn",
            "html_url": "https://github.com/chrysn",
            "followers_url": "https://api.github.com/users/chrysn/followers",
            "following_url": "https://api.github.com/users/chrysn/following{/other_user}",
            "gists_url": "https://api.github.com/users/chrysn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chrysn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chrysn/subscriptions",
            "organizations_url": "https://api.github.com/users/chrysn/orgs",
            "repos_url": "https://api.github.com/users/chrysn/repos",
            "events_url": "https://api.github.com/users/chrysn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chrysn/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 486881321,
                "node_id": "MDU6TGFiZWw0ODY4ODEzMjE=",
                "url": "https://api.github.com/repos/chrysn/aiocoap/labels/transports",
                "name": "transports",
                "color": "fbca04",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2021-01-11T14:55:03Z",
        "updated_at": "2021-01-11T15:09:01Z",
        "closed_at": null,
        "author_association": "OWNER",
        "active_lock_reason": null,
        "body": "The DTLS sockets since #224 time out very easily (they can be refcount-dropped as soon as the response is discarded); TLS and WebSocket connections stay around indefinitely (and may still be prone to the same trouble as #224).\r\n\r\nAs part of a more consistent behavior,\r\n\r\na) all transports should be dropped as easily as the DTLS transports,\r\nb) server sides may want to have a say as well (to be decided; generally the client has the best chances of knowing whether it'll come back or not, but the server may shut them down under pressure?),\r\nc) they should all use some form of timeout+LRU cache to keep connections open by default.\r\n\r\nThe user would still have the option of making them longer (by keeping a remote around), and possibly to shut them down manually (a method of the remote?), but the default behavior should be to keep them for some time after their last use.",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/chrysn/aiocoap/issues/225",
        "repository_url": "https://api.github.com/repos/chrysn/aiocoap",
        "labels_url": "https://api.github.com/repos/chrysn/aiocoap/issues/225/labels{/name}",
        "comments_url": "https://api.github.com/repos/chrysn/aiocoap/issues/225/comments",
        "events_url": "https://api.github.com/repos/chrysn/aiocoap/issues/225/events",
        "html_url": "https://github.com/chrysn/aiocoap/issues/225",
        "id": 782581327,
        "node_id": "MDU6SXNzdWU3ODI1ODEzMjc=",
        "number": 225,
        "title": "Sharpen remote definition",
        "user": {
            "login": "chrysn",
            "id": 442326,
            "node_id": "MDQ6VXNlcjQ0MjMyNg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/442326?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chrysn",
            "html_url": "https://github.com/chrysn",
            "followers_url": "https://api.github.com/users/chrysn/followers",
            "following_url": "https://api.github.com/users/chrysn/following{/other_user}",
            "gists_url": "https://api.github.com/users/chrysn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chrysn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chrysn/subscriptions",
            "organizations_url": "https://api.github.com/users/chrysn/orgs",
            "repos_url": "https://api.github.com/users/chrysn/repos",
            "events_url": "https://api.github.com/users/chrysn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chrysn/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 147401788,
                "node_id": "MDU6TGFiZWwxNDc0MDE3ODg=",
                "url": "https://api.github.com/repos/chrysn/aiocoap/labels/documentation",
                "name": "documentation",
                "color": "fbca04",
                "default": true,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2021-01-09T10:45:21Z",
        "updated_at": "2021-01-09T12:51:24Z",
        "closed_at": null,
        "author_association": "OWNER",
        "active_lock_reason": null,
        "body": "With #224 being addressed, and the parallel work with group OSCORE, the purpose of remote seems to become a bit clearer -- but that does need to be expressed in the docs.\r\n\r\n* A remote always needs to be there, but it can be very unspecific.\r\n* The context (or the transport) may switch around the remote if they can show that it's OK. For example, the protocol will replace the maximally-unspecific UndecidedRemote with a concrete transport's remote (because \"anyone\" includes the responder), or a response to a group request will come from a pairwise remote (because that's how group OSCORE works).\r\n* On the high level, client applications should preferably pass in URIs and not bother with remotes; this makes switching over to a new TCP or DTLS connection trivial when a single request failed. (The library generally can't spare the application the handling of the high-level retransmission because the operation may not be idempotent).\r\n* An application may want to check for remote equality in some situations or even set the remote manually if the request needs to go on the very same channel (eg. in blockwise follow-ups or when using echo manually); in those cases it needs to be prepared to on its own stop using a remote that started producing errors, and backtrack to whereever it's safe to start again.",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/chrysn/aiocoap/issues/224",
        "repository_url": "https://api.github.com/repos/chrysn/aiocoap",
        "labels_url": "https://api.github.com/repos/chrysn/aiocoap/issues/224/labels{/name}",
        "comments_url": "https://api.github.com/repos/chrysn/aiocoap/issues/224/comments",
        "events_url": "https://api.github.com/repos/chrysn/aiocoap/issues/224/events",
        "html_url": "https://github.com/chrysn/aiocoap/issues/224",
        "id": 777693875,
        "node_id": "MDU6SXNzdWU3Nzc2OTM4NzU=",
        "number": 224,
        "title": "handling DTLS client reconnection after aiocoap server restart",
        "user": {
            "login": "litinoveweedle",
            "id": 15144712,
            "node_id": "MDQ6VXNlcjE1MTQ0NzEy",
            "avatar_url": "https://avatars.githubusercontent.com/u/15144712?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/litinoveweedle",
            "html_url": "https://github.com/litinoveweedle",
            "followers_url": "https://api.github.com/users/litinoveweedle/followers",
            "following_url": "https://api.github.com/users/litinoveweedle/following{/other_user}",
            "gists_url": "https://api.github.com/users/litinoveweedle/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/litinoveweedle/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/litinoveweedle/subscriptions",
            "organizations_url": "https://api.github.com/users/litinoveweedle/orgs",
            "repos_url": "https://api.github.com/users/litinoveweedle/repos",
            "events_url": "https://api.github.com/users/litinoveweedle/events{/privacy}",
            "received_events_url": "https://api.github.com/users/litinoveweedle/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 15,
        "created_at": "2021-01-03T18:41:07Z",
        "updated_at": "2021-01-11T16:12:00Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hello, as you are probably aware aiocoap is used in pytradfri API which is used in Homeassistant integration for IKEA Tradfri devices. Due to current abandon-ish state of both tradfri and pytradfri code I am trying to fix some long standing issues with its functionality. My knowledge is very limited in all aspects which are required for achieving such target so I am sorry for bothering you with something which is maybe not aiocoap issue at all.\r\n\r\n[this](https://github.com/home-assistant/core/issues/40612#issuecomment-753481529) is related issue in HA repo - due to several issues being tracked there please start reading at given comment.\r\n\r\nWe observed, that after Ikea Tradfri GW (aiocoap server) is restarted Homeassistant is unable to restore communication with it, causing both devices commands and states monitoring to fail. This was observed with HA using aicoap version 0.4b3. It seems that as no exception is raised from aicoap to pytradfri it is not able to create new connection towards rebooted Tradfri GW and to reestablish communication. (pytradfri utilize DTLS using aiocoap tinydtls transport)\r\n\r\nWe also tried to use latest aiocoap version, which made situation little bit better - at least after GW restart new command are executed successfully - but async devices states monitoring is not working. This is in my limited knowledge because in current implementation it requires exception to be raised from aiocoap -> pytradfri -> HA to restart devices observation thread. But there is no exception like that so new connection to rebooted GW is never established. It seems that GW after restart is replying to old connection requests with:\r\n\r\n`TimeoutError: [Errno 110] Operation timed out`\r\n\r\nMy question is: is there a way how pytradfri could be notified from the aiocoap (raising exception?) that current connection is not working anymore - so it can destroy it and create new one?\r\n\r\nThank you for any help.\r\n\r\n```\r\n[GCC 9.3.0]\r\naiocoap version: 0.4b3.post0\r\nModules missing for subsystems:\r\n    dtls: everything there\r\n    oscore: missing filelock\r\n    linkheader: missing LinkHeader\r\n    prettyprint: missing LinkHeader, termcolor\r\nPython platform: linux\r\nDefault server transports:  tinydtls:tcpserver:tcpclient:tlsserver:tlsclient:ws:udp6\r\nSelected server transports: tinydtls:tcpserver:tcpclient:tlsserver:tlsclient:ws:udp6\r\nDefault client transports:  tinydtls:tcpclient:tlsclient:ws:udp6\r\nSelected client transports: tinydtls:tcpclient:tlsclient:ws:udp6\r\nSO_REUSEPORT available (default, selected): True, True\r\n```\r\n\r\n",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/chrysn/aiocoap/issues/221",
        "repository_url": "https://api.github.com/repos/chrysn/aiocoap",
        "labels_url": "https://api.github.com/repos/chrysn/aiocoap/issues/221/labels{/name}",
        "comments_url": "https://api.github.com/repos/chrysn/aiocoap/issues/221/comments",
        "events_url": "https://api.github.com/repos/chrysn/aiocoap/issues/221/events",
        "html_url": "https://github.com/chrysn/aiocoap/issues/221",
        "id": 744409436,
        "node_id": "MDU6SXNzdWU3NDQ0MDk0MzY=",
        "number": 221,
        "title": "aiocoap-rd: An exception occurred while rendering a resource: KeyError(None)",
        "user": {
            "login": "2bdkid",
            "id": 6799602,
            "node_id": "MDQ6VXNlcjY3OTk2MDI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6799602?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/2bdkid",
            "html_url": "https://github.com/2bdkid",
            "followers_url": "https://api.github.com/users/2bdkid/followers",
            "following_url": "https://api.github.com/users/2bdkid/following{/other_user}",
            "gists_url": "https://api.github.com/users/2bdkid/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/2bdkid/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/2bdkid/subscriptions",
            "organizations_url": "https://api.github.com/users/2bdkid/orgs",
            "repos_url": "https://api.github.com/users/2bdkid/repos",
            "events_url": "https://api.github.com/users/2bdkid/events{/privacy}",
            "received_events_url": "https://api.github.com/users/2bdkid/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2020-11-17T04:54:08Z",
        "updated_at": "2020-11-17T08:20:28Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I'm running into an issue registering some resources with aiocoap-rd. In the first instance of my server program, I create a context and bind to a specified port, and then do the registration:\r\n\r\n```\r\n# set up root\r\nprotocol = await Context.create_server_context(root, bind=('::', args.port))  # args.port == 5648\r\nregistration = Registerer(protocol, rd=args.rd)  # args.rd == \"coap://<myip>\"\r\n```\r\n\r\nThis registration goes through just fine:\r\n\r\n```\r\naiocoap-client coap://localhost/resource-lookup/?rt=weight\r\n<coap://<my-ip>:5648/weight>; ct=60; rt=\"load weight\"; obs; title=brady-rpi; anchor=\"coap://<my-ip>:5648\"\r\n```\r\n\r\nThen, I start another instance of my server on the same host (I think this may be the problem), but bind to a different port:\r\n\r\n\r\n```\r\n# set up root\r\nprotocol = await Context.create_server_context(root, bind=('::', args.port))  # args.port == 5649\r\nregistration = Registerer(protocol, rd=args.rd)  # args.rd == \"coap://<myip>\"\r\n```\r\n\r\nAfter a second, aiocoap-rd spits this out:\r\n\r\n```\r\nERROR:coap-server:An exception occurred while rendering a resource: KeyError(None)\r\nTraceback (most recent call last):\r\n  File \"/home/brady/.local/lib/python3.8/site-packages/aiocoap/protocol.py\", line 383, in _render_to_plumbing_request\r\n    await self._render_to_plumbing_request_inner(plumbing_request,\r\n  File \"/home/brady/.local/lib/python3.8/site-packages/aiocoap/protocol.py\", line 512, in _render_to_plumbing_request_inner\r\n    response = await self.serversite.render(request)\r\n  File \"/home/brady/.local/lib/python3.8/site-packages/aiocoap/cli/rd.py\", line 620, in render\r\n    return await Site.render(self, request)\r\n  File \"/home/brady/.local/lib/python3.8/site-packages/aiocoap/resource.py\", line 366, in render\r\n    return await child.render(subrequest)\r\n  File \"/home/brady/.local/lib/python3.8/site-packages/aiocoap/resource.py\", line 114, in render\r\n    response = await m(request)\r\n  File \"/home/brady/.local/lib/python3.8/site-packages/aiocoap/cli/rd.py\", line 376, in render_post\r\n    regresource = self.common_rd.initialize_endpoint(request.remote, registration_parameters)\r\n  File \"/home/brady/.local/lib/python3.8/site-packages/aiocoap/cli/rd.py\", line 312, in initialize_endpoint\r\n    oldreg.delete()\r\n  File \"/home/brady/.local/lib/python3.8/site-packages/aiocoap/cli/rd.py\", line 198, in delete\r\n    self._delete_cb()\r\n  File \"/home/brady/.local/lib/python3.8/site-packages/aiocoap/cli/rd.py\", line 323, in delete\r\n    self.proxy_active.pop(proxy_host)\r\nKeyError: None\r\n```\r\n \r\nThen, the second server instance receives an error 500 from rd. \r\n\r\nInterestingly, if I start the second instance again, its registration goes through, but the first server instance's registration is lost. Lost as in it's no longer sent back when queried from coap://localhost/resource-lookup/.\r\n\r\n```\r\naiocoap-client coap://localhost/resource-lookup/?rt=weight\r\n<coap://<my-ip>:5649/weight>; ct=60; rt=\"load weight\"; obs; title=brady-rpi-2; anchor=\"coap://<my-ip>:5649\"\r\n```\r\n\r\nIt seems like aiocoap-rd is getting confused by having a registration from the same ip, but with different ports.",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/chrysn/aiocoap/issues/220",
        "repository_url": "https://api.github.com/repos/chrysn/aiocoap",
        "labels_url": "https://api.github.com/repos/chrysn/aiocoap/issues/220/labels{/name}",
        "comments_url": "https://api.github.com/repos/chrysn/aiocoap/issues/220/comments",
        "events_url": "https://api.github.com/repos/chrysn/aiocoap/issues/220/events",
        "html_url": "https://github.com/chrysn/aiocoap/issues/220",
        "id": 742771628,
        "node_id": "MDU6SXNzdWU3NDI3NzE2Mjg=",
        "number": 220,
        "title": "OSCORE block-wise is untested / erroneous",
        "user": {
            "login": "chrysn",
            "id": 442326,
            "node_id": "MDQ6VXNlcjQ0MjMyNg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/442326?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chrysn",
            "html_url": "https://github.com/chrysn",
            "followers_url": "https://api.github.com/users/chrysn/followers",
            "following_url": "https://api.github.com/users/chrysn/following{/other_user}",
            "gists_url": "https://api.github.com/users/chrysn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chrysn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chrysn/subscriptions",
            "organizations_url": "https://api.github.com/users/chrysn/orgs",
            "repos_url": "https://api.github.com/users/chrysn/repos",
            "events_url": "https://api.github.com/users/chrysn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chrysn/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 180339608,
                "node_id": "MDU6TGFiZWwxODAzMzk2MDg=",
                "url": "https://api.github.com/repos/chrysn/aiocoap/labels/blockwise",
                "name": "blockwise",
                "color": "e11d21",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-11-13T20:30:50Z",
        "updated_at": "2020-11-13T20:30:59Z",
        "closed_at": null,
        "author_association": "OWNER",
        "active_lock_reason": null,
        "body": "At least some part in the combination of the OSCORE transport and the oscore_sitewrapper is not handling block-wise correctly: It appears that inner block-wise is started, and then outer block-wise kicks in as the messages exceed 1024 bytes (which in itself is a bug as well, but at least shows that otherwise outer block-wise works).\r\n\r\nUp to right now that was undetected because the plug tests don't include anything block-wise; the group mode running the regular tests exposed this (and has its block-wise test disabled).",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/chrysn/aiocoap/issues/216",
        "repository_url": "https://api.github.com/repos/chrysn/aiocoap",
        "labels_url": "https://api.github.com/repos/chrysn/aiocoap/issues/216/labels{/name}",
        "comments_url": "https://api.github.com/repos/chrysn/aiocoap/issues/216/comments",
        "events_url": "https://api.github.com/repos/chrysn/aiocoap/issues/216/events",
        "html_url": "https://github.com/chrysn/aiocoap/issues/216",
        "id": 720681528,
        "node_id": "MDU6SXNzdWU3MjA2ODE1Mjg=",
        "number": 216,
        "title": "Check for IPv6 literals in Uri-Host",
        "user": {
            "login": "chrysn",
            "id": 442326,
            "node_id": "MDQ6VXNlcjQ0MjMyNg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/442326?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chrysn",
            "html_url": "https://github.com/chrysn",
            "followers_url": "https://api.github.com/users/chrysn/followers",
            "following_url": "https://api.github.com/users/chrysn/following{/other_user}",
            "gists_url": "https://api.github.com/users/chrysn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chrysn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chrysn/subscriptions",
            "organizations_url": "https://api.github.com/users/chrysn/orgs",
            "repos_url": "https://api.github.com/users/chrysn/repos",
            "events_url": "https://api.github.com/users/chrysn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chrysn/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-10-13T18:53:53Z",
        "updated_at": "2020-10-13T18:53:53Z",
        "closed_at": null,
        "author_association": "OWNER",
        "active_lock_reason": null,
        "body": "I've always assumed that Uri-Host could be a plain IPv6 literal; turns out that -- according to both the spec and [another implementation of mine](https://gitlab.com/chrysn/verdigris) -- this is not the case.\r\n\r\nThat is, the Uri-Host option should look like `[2001:db8::1]` and not like `2001:db8::1`.\r\n\r\nSteps here are:\r\n* [x] Ensure that aiocoap accepts proxy requests with bracketed IP literals.\r\n* [ ] Raise deprecation warnings when unbracketed IP literals pass through, eventually rejecting those requests.\r\n* [ ] Ensure that aiocoap does not produce any unbracketed literals in options.",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/chrysn/aiocoap/issues/215",
        "repository_url": "https://api.github.com/repos/chrysn/aiocoap",
        "labels_url": "https://api.github.com/repos/chrysn/aiocoap/issues/215/labels{/name}",
        "comments_url": "https://api.github.com/repos/chrysn/aiocoap/issues/215/comments",
        "events_url": "https://api.github.com/repos/chrysn/aiocoap/issues/215/events",
        "html_url": "https://github.com/chrysn/aiocoap/issues/215",
        "id": 720464644,
        "node_id": "MDU6SXNzdWU3MjA0NjQ2NDQ=",
        "number": 215,
        "title": "WARNING:root:Observation deleted without explicit cancellation",
        "user": {
            "login": "2bdkid",
            "id": 6799602,
            "node_id": "MDQ6VXNlcjY3OTk2MDI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6799602?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/2bdkid",
            "html_url": "https://github.com/2bdkid",
            "followers_url": "https://api.github.com/users/2bdkid/followers",
            "following_url": "https://api.github.com/users/2bdkid/following{/other_user}",
            "gists_url": "https://api.github.com/users/2bdkid/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/2bdkid/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/2bdkid/subscriptions",
            "organizations_url": "https://api.github.com/users/2bdkid/orgs",
            "repos_url": "https://api.github.com/users/2bdkid/repos",
            "events_url": "https://api.github.com/users/2bdkid/events{/privacy}",
            "received_events_url": "https://api.github.com/users/2bdkid/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 180339593,
                "node_id": "MDU6TGFiZWwxODAzMzk1OTM=",
                "url": "https://api.github.com/repos/chrysn/aiocoap/labels/observation",
                "name": "observation",
                "color": "bfe5bf",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "chrysn",
            "id": 442326,
            "node_id": "MDQ6VXNlcjQ0MjMyNg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/442326?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chrysn",
            "html_url": "https://github.com/chrysn",
            "followers_url": "https://api.github.com/users/chrysn/followers",
            "following_url": "https://api.github.com/users/chrysn/following{/other_user}",
            "gists_url": "https://api.github.com/users/chrysn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chrysn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chrysn/subscriptions",
            "organizations_url": "https://api.github.com/users/chrysn/orgs",
            "repos_url": "https://api.github.com/users/chrysn/repos",
            "events_url": "https://api.github.com/users/chrysn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chrysn/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "chrysn",
                "id": 442326,
                "node_id": "MDQ6VXNlcjQ0MjMyNg==",
                "avatar_url": "https://avatars.githubusercontent.com/u/442326?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/chrysn",
                "html_url": "https://github.com/chrysn",
                "followers_url": "https://api.github.com/users/chrysn/followers",
                "following_url": "https://api.github.com/users/chrysn/following{/other_user}",
                "gists_url": "https://api.github.com/users/chrysn/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/chrysn/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/chrysn/subscriptions",
                "organizations_url": "https://api.github.com/users/chrysn/orgs",
                "repos_url": "https://api.github.com/users/chrysn/repos",
                "events_url": "https://api.github.com/users/chrysn/events{/privacy}",
                "received_events_url": "https://api.github.com/users/chrysn/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 2,
        "created_at": "2020-10-13T15:57:33Z",
        "updated_at": "2020-10-13T19:07:37Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I'm trying to send observation requests to a server, but before the server can send notifications back I get \"WARNING:root:Observation deleted without explicit cancellation\" printed on the console. I've searched through the sources but I can't find where this message originates from. I suspect one of my Request objects is being deleted.\r\n\r\nHere's the jist of the code if anyone spots anything.\r\n\r\n```\r\nfrom asyncio.queues import Queue\r\nfrom aiocoap import Message\r\nfrom aiocoap import Context\r\nfrom aiocoap import GET\r\n\r\n\r\nasync def start_server():\r\n    protocol = await Context.create_client_context()\r\n    get_obs_req = Message(code=GET, uri='coap://localhost/temp', observe=0)\r\n    request = protocol.request(get_obs_req)\r\n\r\n    # some logic\r\n\r\n    request.observation.register_callback(handle_notification)\r\n    await request.response\r\n    # launch into websockets server\r\n\r\n\r\ndef main():\r\n    asyncio.get_event_loop().create_task(start_server())\r\n    asyncio.get_event_loop().run_forever()\r\n\r\n\r\nif __name__ == '__main__':\r\n    main()\r\n```",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/chrysn/aiocoap/issues/214",
        "repository_url": "https://api.github.com/repos/chrysn/aiocoap",
        "labels_url": "https://api.github.com/repos/chrysn/aiocoap/issues/214/labels{/name}",
        "comments_url": "https://api.github.com/repos/chrysn/aiocoap/issues/214/comments",
        "events_url": "https://api.github.com/repos/chrysn/aiocoap/issues/214/events",
        "html_url": "https://github.com/chrysn/aiocoap/issues/214",
        "id": 719197904,
        "node_id": "MDU6SXNzdWU3MTkxOTc5MDQ=",
        "number": 214,
        "title": "Websocket transport layer, remote usage",
        "user": {
            "login": "gilloud",
            "id": 343732,
            "node_id": "MDQ6VXNlcjM0MzczMg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/343732?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gilloud",
            "html_url": "https://github.com/gilloud",
            "followers_url": "https://api.github.com/users/gilloud/followers",
            "following_url": "https://api.github.com/users/gilloud/following{/other_user}",
            "gists_url": "https://api.github.com/users/gilloud/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gilloud/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gilloud/subscriptions",
            "organizations_url": "https://api.github.com/users/gilloud/orgs",
            "repos_url": "https://api.github.com/users/gilloud/repos",
            "events_url": "https://api.github.com/users/gilloud/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gilloud/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-10-12T08:53:53Z",
        "updated_at": "2020-10-13T20:38:33Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hi all,\r\nThanks a lot for this incredible work. I\u2019m currently working to be able to have a bi-directional CoAP layer between a client and a server. And, after a successful work with UDP protocol, I have issues with the websocket layer (on master branch)\r\n\r\nMy connection is successfully opened from my client, to my server, but I have doubts about the capacity to the server to send a request to the client thru the opened tunnel.\r\n\r\nWhen the request come to the `fill_or_recognize_remote` the first condition\r\nhttps://github.com/chrysn/aiocoap/blob/master/aiocoap/transports/ws.py#L273 the \u201cmessage.remote._pool() is never self\u201d and a reconnect is always requested\r\n\r\nHave you an idea about the cause of this errors ?\r\n",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/chrysn/aiocoap/issues/212",
        "repository_url": "https://api.github.com/repos/chrysn/aiocoap",
        "labels_url": "https://api.github.com/repos/chrysn/aiocoap/issues/212/labels{/name}",
        "comments_url": "https://api.github.com/repos/chrysn/aiocoap/issues/212/comments",
        "events_url": "https://api.github.com/repos/chrysn/aiocoap/issues/212/events",
        "html_url": "https://github.com/chrysn/aiocoap/issues/212",
        "id": 706254639,
        "node_id": "MDU6SXNzdWU3MDYyNTQ2Mzk=",
        "number": 212,
        "title": "AttributeError: 'RecvmsgSelectorDatagramTransport' object has no attribute '_fatal_error'",
        "user": {
            "login": "aseemjakhar",
            "id": 882058,
            "node_id": "MDQ6VXNlcjg4MjA1OA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/882058?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aseemjakhar",
            "html_url": "https://github.com/aseemjakhar",
            "followers_url": "https://api.github.com/users/aseemjakhar/followers",
            "following_url": "https://api.github.com/users/aseemjakhar/following{/other_user}",
            "gists_url": "https://api.github.com/users/aseemjakhar/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aseemjakhar/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aseemjakhar/subscriptions",
            "organizations_url": "https://api.github.com/users/aseemjakhar/orgs",
            "repos_url": "https://api.github.com/users/aseemjakhar/repos",
            "events_url": "https://api.github.com/users/aseemjakhar/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aseemjakhar/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-09-22T10:21:08Z",
        "updated_at": "2020-09-22T10:21:08Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Not able to find the definition for _fatal_error.\r\n\r\nI'm trying to run request() using a new loop in my application. I was calling shutdown() before request(request).response on the Context object which I understand is wrong. However, I am not able to find `_fatal_error` in the code.\r\n\r\nStack Trace:\r\nFile \"coap/__init__.py\", line 79, in request\r\n    response = await ctx.request(request).response\r\n  File \"python3.7/site-packages/aiocoap-0.4b3-py3.7.egg/aiocoap/protocol.py\", line 731, in _run_outer\r\n    await cls._run(app_request, response, weak_observation, protocol, log)\r\n  File \"python3.7/site-packages/aiocoap-0.4b3-py3.7.egg/aiocoap/protocol.py\", line 783, in _run\r\n    blockresponse = await blockrequest.response\r\n  File \"python3.7/site-packages/aiocoap-0.4b3-py3.7.egg/aiocoap/tokenmanager.py\", line 210, in request\r\n    send_canceller = self.token_interface.send_message(msg)\r\n  File \"python3.7/site-packages/aiocoap-0.4b3-py3.7.egg/aiocoap/messagemanager.py\", line 406, in send_message\r\n    self._send_initially(message, exchange_monitor)\r\n  File \"python3.7/site-packages/aiocoap-0.4b3-py3.7.egg/aiocoap/messagemanager.py\", line 421, in _send_initially\r\n    self._send_via_transport(message)\r\n  File \"python3.7/site-packages/aiocoap-0.4b3-py3.7.egg/aiocoap/messagemanager.py\", line 426, in _send_via_transport\r\n    self.message_interface.send(message)\r\n  File \"python3.7/site-packages/aiocoap-0.4b3-py3.7.egg/aiocoap/transports/udp6.py\", line 291, in send\r\n    self.transport.sendmsg(message.encode(), ancdata, 0, message.remote.sockaddr)\r\n  File \"python3.7/site-packages/aiocoap-0.4b3-py3.7.egg/aiocoap/util/asyncio/recvmsg.py\", line 110, in sendmsg\r\n    self._fatal_error(exc,\r\nAttributeError: 'RecvmsgSelectorDatagramTransport' object has no attribute '_fatal_error'\r\n",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/chrysn/aiocoap/issues/211",
        "repository_url": "https://api.github.com/repos/chrysn/aiocoap",
        "labels_url": "https://api.github.com/repos/chrysn/aiocoap/issues/211/labels{/name}",
        "comments_url": "https://api.github.com/repos/chrysn/aiocoap/issues/211/comments",
        "events_url": "https://api.github.com/repos/chrysn/aiocoap/issues/211/events",
        "html_url": "https://github.com/chrysn/aiocoap/issues/211",
        "id": 700676112,
        "node_id": "MDU6SXNzdWU3MDA2NzYxMTI=",
        "number": 211,
        "title": "Authentication",
        "user": {
            "login": "rogerioCesar",
            "id": 36449181,
            "node_id": "MDQ6VXNlcjM2NDQ5MTgx",
            "avatar_url": "https://avatars.githubusercontent.com/u/36449181?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rogerioCesar",
            "html_url": "https://github.com/rogerioCesar",
            "followers_url": "https://api.github.com/users/rogerioCesar/followers",
            "following_url": "https://api.github.com/users/rogerioCesar/following{/other_user}",
            "gists_url": "https://api.github.com/users/rogerioCesar/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rogerioCesar/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rogerioCesar/subscriptions",
            "organizations_url": "https://api.github.com/users/rogerioCesar/orgs",
            "repos_url": "https://api.github.com/users/rogerioCesar/repos",
            "events_url": "https://api.github.com/users/rogerioCesar/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rogerioCesar/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2020-09-14T00:07:43Z",
        "updated_at": "2020-09-18T13:34:16Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hello chrysn\r\n\r\nis it possible to use a bearer header in a request?\r\n",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/chrysn/aiocoap/issues/208",
        "repository_url": "https://api.github.com/repos/chrysn/aiocoap",
        "labels_url": "https://api.github.com/repos/chrysn/aiocoap/issues/208/labels{/name}",
        "comments_url": "https://api.github.com/repos/chrysn/aiocoap/issues/208/comments",
        "events_url": "https://api.github.com/repos/chrysn/aiocoap/issues/208/events",
        "html_url": "https://github.com/chrysn/aiocoap/issues/208",
        "id": 698116729,
        "node_id": "MDU6SXNzdWU2OTgxMTY3Mjk=",
        "number": 208,
        "title": "Websocket usage",
        "user": {
            "login": "gilloud",
            "id": 343732,
            "node_id": "MDQ6VXNlcjM0MzczMg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/343732?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gilloud",
            "html_url": "https://github.com/gilloud",
            "followers_url": "https://api.github.com/users/gilloud/followers",
            "following_url": "https://api.github.com/users/gilloud/following{/other_user}",
            "gists_url": "https://api.github.com/users/gilloud/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gilloud/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gilloud/subscriptions",
            "organizations_url": "https://api.github.com/users/gilloud/orgs",
            "repos_url": "https://api.github.com/users/gilloud/repos",
            "events_url": "https://api.github.com/users/gilloud/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gilloud/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2020-09-10T15:20:27Z",
        "updated_at": "2020-09-11T08:14:26Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hi,\r\n\r\nThanks @chrysn  for this incredible project and espacially for the websocket implementation. As I can see, it's the first websocket implementation of the RFC !\r\nI'm looking for using it, and I'm currently blocked to select the websocket protocol into the server.py example. As I can see, the client example switch automatically, based on the protocol in cli : \"./aiocoap-client coap+ws://localhost/time\"\r\n\r\nWill it be possible to provide an example of how to change the protocol and be able to switch to tcp, websockets, ...\r\n\r\nmy configuration:\r\n```\r\n\u25b8python3 -m aiocoap.cli.defaults\r\nPython version: 3.8.2 (default, Jul 16 2020, 14:00:26)\r\n[GCC 9.3.0]\r\naiocoap version: 0.4b3.post0\r\nModules missing for subsystems:\r\n    dtls: missing DTLSSocket\r\n    oscore: missing cbor2, filelock\r\n    linkheader: missing LinkHeader\r\n    prettyprint: missing LinkHeader, cbor2, termcolor, pygments\r\nPython platform: linux\r\nDefault server transports:  tcpserver:tcpclient:tlsserver:tlsclient:ws:udp6\r\nSelected server transports: tcpserver:tcpclient:tlsserver:tlsclient:ws:udp6\r\nDefault client transports:  tcpclient:tlsclient:ws:udp6\r\nSelected client transports: tcpclient:tlsclient:ws:udp6\r\nSO_REUSEPORT available (default, selected): True, True\r\n```\r\n",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/chrysn/aiocoap/issues/203",
        "repository_url": "https://api.github.com/repos/chrysn/aiocoap",
        "labels_url": "https://api.github.com/repos/chrysn/aiocoap/issues/203/labels{/name}",
        "comments_url": "https://api.github.com/repos/chrysn/aiocoap/issues/203/comments",
        "events_url": "https://api.github.com/repos/chrysn/aiocoap/issues/203/events",
        "html_url": "https://github.com/chrysn/aiocoap/issues/203",
        "id": 667656491,
        "node_id": "MDU6SXNzdWU2Njc2NTY0OTE=",
        "number": 203,
        "title": "Certificate and RPK support missing in DTLS backend",
        "user": {
            "login": "jiangliq2000",
            "id": 11609357,
            "node_id": "MDQ6VXNlcjExNjA5MzU3",
            "avatar_url": "https://avatars.githubusercontent.com/u/11609357?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jiangliq2000",
            "html_url": "https://github.com/jiangliq2000",
            "followers_url": "https://api.github.com/users/jiangliq2000/followers",
            "following_url": "https://api.github.com/users/jiangliq2000/following{/other_user}",
            "gists_url": "https://api.github.com/users/jiangliq2000/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jiangliq2000/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jiangliq2000/subscriptions",
            "organizations_url": "https://api.github.com/users/jiangliq2000/orgs",
            "repos_url": "https://api.github.com/users/jiangliq2000/repos",
            "events_url": "https://api.github.com/users/jiangliq2000/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jiangliq2000/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 104472954,
                "node_id": "MDU6TGFiZWwxMDQ0NzI5NTQ=",
                "url": "https://api.github.com/repos/chrysn/aiocoap/labels/enhancement",
                "name": "enhancement",
                "color": "84b6eb",
                "default": true,
                "description": null
            },
            {
                "id": 104472955,
                "node_id": "MDU6TGFiZWwxMDQ0NzI5NTU=",
                "url": "https://api.github.com/repos/chrysn/aiocoap/labels/help%20wanted",
                "name": "help wanted",
                "color": "159818",
                "default": true,
                "description": null
            },
            {
                "id": 486881321,
                "node_id": "MDU6TGFiZWw0ODY4ODEzMjE=",
                "url": "https://api.github.com/repos/chrysn/aiocoap/labels/transports",
                "name": "transports",
                "color": "fbca04",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "chrysn",
            "id": 442326,
            "node_id": "MDQ6VXNlcjQ0MjMyNg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/442326?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chrysn",
            "html_url": "https://github.com/chrysn",
            "followers_url": "https://api.github.com/users/chrysn/followers",
            "following_url": "https://api.github.com/users/chrysn/following{/other_user}",
            "gists_url": "https://api.github.com/users/chrysn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chrysn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chrysn/subscriptions",
            "organizations_url": "https://api.github.com/users/chrysn/orgs",
            "repos_url": "https://api.github.com/users/chrysn/repos",
            "events_url": "https://api.github.com/users/chrysn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chrysn/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "chrysn",
                "id": 442326,
                "node_id": "MDQ6VXNlcjQ0MjMyNg==",
                "avatar_url": "https://avatars.githubusercontent.com/u/442326?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/chrysn",
                "html_url": "https://github.com/chrysn",
                "followers_url": "https://api.github.com/users/chrysn/followers",
                "following_url": "https://api.github.com/users/chrysn/following{/other_user}",
                "gists_url": "https://api.github.com/users/chrysn/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/chrysn/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/chrysn/subscriptions",
                "organizations_url": "https://api.github.com/users/chrysn/orgs",
                "repos_url": "https://api.github.com/users/chrysn/repos",
                "events_url": "https://api.github.com/users/chrysn/events{/privacy}",
                "received_events_url": "https://api.github.com/users/chrysn/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-07-29T08:33:13Z",
        "updated_at": "2020-07-29T09:09:25Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "<!--\r\nPlease include the output of `python3 -m aiocoap.cli.defaults` in your report,\r\nrun in the environment in which you experienced the issues.\r\n-->\r\n\r\nHi \r\n   in my local stress test, I need dtls with cert file mode, but it looks tinydtls only support psk mode, I want to know if there is plan to support dtls with cert mode? \r\n   on the other way,   I try to use python3-dtls socket to replace tinydtls socket on the tinydtls.py,  then I did it successfully,  it works well ,   I hope it can support dtls with cert file mode. thanks",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/chrysn/aiocoap/issues/202",
        "repository_url": "https://api.github.com/repos/chrysn/aiocoap",
        "labels_url": "https://api.github.com/repos/chrysn/aiocoap/issues/202/labels{/name}",
        "comments_url": "https://api.github.com/repos/chrysn/aiocoap/issues/202/comments",
        "events_url": "https://api.github.com/repos/chrysn/aiocoap/issues/202/events",
        "html_url": "https://github.com/chrysn/aiocoap/issues/202",
        "id": 648282871,
        "node_id": "MDU6SXNzdWU2NDgyODI4NzE=",
        "number": 202,
        "title": "aiocoap-rd error using interface name as zone index",
        "user": {
            "login": "pokgak",
            "id": 20373062,
            "node_id": "MDQ6VXNlcjIwMzczMDYy",
            "avatar_url": "https://avatars.githubusercontent.com/u/20373062?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pokgak",
            "html_url": "https://github.com/pokgak",
            "followers_url": "https://api.github.com/users/pokgak/followers",
            "following_url": "https://api.github.com/users/pokgak/following{/other_user}",
            "gists_url": "https://api.github.com/users/pokgak/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pokgak/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pokgak/subscriptions",
            "organizations_url": "https://api.github.com/users/pokgak/orgs",
            "repos_url": "https://api.github.com/users/pokgak/repos",
            "events_url": "https://api.github.com/users/pokgak/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pokgak/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "chrysn",
            "id": 442326,
            "node_id": "MDQ6VXNlcjQ0MjMyNg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/442326?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chrysn",
            "html_url": "https://github.com/chrysn",
            "followers_url": "https://api.github.com/users/chrysn/followers",
            "following_url": "https://api.github.com/users/chrysn/following{/other_user}",
            "gists_url": "https://api.github.com/users/chrysn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chrysn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chrysn/subscriptions",
            "organizations_url": "https://api.github.com/users/chrysn/orgs",
            "repos_url": "https://api.github.com/users/chrysn/repos",
            "events_url": "https://api.github.com/users/chrysn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chrysn/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "chrysn",
                "id": 442326,
                "node_id": "MDQ6VXNlcjQ0MjMyNg==",
                "avatar_url": "https://avatars.githubusercontent.com/u/442326?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/chrysn",
                "html_url": "https://github.com/chrysn",
                "followers_url": "https://api.github.com/users/chrysn/followers",
                "following_url": "https://api.github.com/users/chrysn/following{/other_user}",
                "gists_url": "https://api.github.com/users/chrysn/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/chrysn/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/chrysn/subscriptions",
                "organizations_url": "https://api.github.com/users/chrysn/orgs",
                "repos_url": "https://api.github.com/users/chrysn/repos",
                "events_url": "https://api.github.com/users/chrysn/events{/privacy}",
                "received_events_url": "https://api.github.com/users/chrysn/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-06-30T15:42:33Z",
        "updated_at": "2020-06-30T20:07:22Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "I'm testing `cord_ep` of RIOT-OS with `aiocoap-rd`. Using the latest master (bd9faf757b0ae24fdd155b1ef711ca12ea85ddaf), I got the following error. This doesn't happen with using release `0.4b3`, so I figure there might be a change in aiocoap that causes this and not only caused by RIOT.\r\n\r\n```\r\nuser@riot-vm:~$ aiocoap-rd\r\nERROR:coap-server:An exception occurred while rendering a resource: AddressValueError(\"Only hex digits permitted in 'f476%tapbr0' in 'fe80::c8f4:f2ff:feb2:f476%tapbr0'\",)\r\nTraceback (most recent call last):\r\n  File \"/home/user/.local/lib/python3.6/site-packages/aiocoap/protocol.py\", line 368, in _render_to_plumbing_request\r\n    cancellation_future)\r\n  File \"/home/user/.local/lib/python3.6/site-packages/aiocoap/protocol.py\", line 496, in _render_to_plumbing_request_inner\r\n    response = await self.serversite.render(request)\r\n  File \"/home/user/.local/lib/python3.6/site-packages/aiocoap/resource.py\", line 366, in render\r\n    return await child.render(subrequest)\r\n  File \"/home/user/.local/lib/python3.6/site-packages/aiocoap/resource.py\", line 114, in render\r\n    response = await m(request)\r\n  File \"/home/user/.local/lib/python3.6/site-packages/aiocoap/cli/rd.py\", line 274, in render_post\r\n    regresource = self.common_rd.initialize_endpoint(request.remote, registration_parameters)\r\n  File \"/home/user/.local/lib/python3.6/site-packages/aiocoap/cli/rd.py\", line 234, in initialize_endpoint\r\n    self._updated_state, registration_parameters)\r\n  File \"/home/user/.local/lib/python3.6/site-packages/aiocoap/cli/rd.py\", line 77, in __init__\r\n    self.update_params(network_remote, registration_parameters, is_initial=True)\r\n  File \"/home/user/.local/lib/python3.6/site-packages/aiocoap/cli/rd.py\", line 91, in update_params\r\n    network_base = network_remote.uri\r\n  File \"/home/user/.local/lib/python3.6/site-packages/aiocoap/interfaces.py\", line 102, in uri\r\n    return self.uri_base\r\n  File \"/home/user/.local/lib/python3.6/site-packages/aiocoap/transports/udp6.py\", line 198, in uri_base\r\n    return 'coap://' + self.hostinfo\r\n  File \"/home/user/.local/lib/python3.6/site-packages/aiocoap/transports/udp6.py\", line 184, in hostinfo\r\n    return hostportjoin(self._plainaddress(), port)\r\n  File \"/home/user/.local/lib/python3.6/site-packages/aiocoap/transports/udp6.py\", line 146, in _plainaddress\r\n    return self._strip_v4mapped(self.sockaddr[0]) + scopepart\r\n  File \"/home/user/.local/lib/python3.6/site-packages/aiocoap/transports/udp6.py\", line 127, in _strip_v4mapped\r\n    address = ipaddress.IPv6Address(address)\r\n  File \"/usr/lib/python3.6/ipaddress.py\", line 1900, in __init__\r\n    self._ip = self._ip_int_from_string(addr_str)\r\n  File \"/usr/lib/python3.6/ipaddress.py\", line 1716, in _ip_int_from_string\r\n    raise AddressValueError(\"%s in %r\" % (exc, ip_str)) from None\r\nipaddress.AddressValueError: Only hex digits permitted in 'f476%tapbr0' in 'fe80::c8f4:f2ff:feb2:f476%tapbr0'\r\n```\r\n\r\n`python3 -m aiocoap.cli.defaults`:\r\n\r\n```\r\nuser@riot-vm:~$ python3 -m aiocoap.cli.defaults\r\nPython version: 3.6.9 (default, Nov  7 2019, 10:44:02)\r\n[GCC 8.3.0]\r\naiocoap version: 0.4b3.post0\r\nModules missing for subsystems:\r\n    dtls: everything there\r\n    oscore: everything there\r\n    linkheader: everything there\r\n    prettyprint: everything there\r\nPython platform: linux\r\nDefault server transports:  oscore:tinydtls:tcpserver:tcpclient:tlsserver:tlsclient:udp6\r\nSelected server transports: oscore:tinydtls:tcpserver:tcpclient:tlsserver:tlsclient:udp6\r\nDefault client transports:  oscore:tinydtls:tcpclient:tlsclient:udp6\r\nSelected client transports: oscore:tinydtls:tcpclient:tlsclient:udp6\r\nSO_REUSEPORT available (default, selected): True, True\r\n```\r\n",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/chrysn/aiocoap/issues/201",
        "repository_url": "https://api.github.com/repos/chrysn/aiocoap",
        "labels_url": "https://api.github.com/repos/chrysn/aiocoap/issues/201/labels{/name}",
        "comments_url": "https://api.github.com/repos/chrysn/aiocoap/issues/201/comments",
        "events_url": "https://api.github.com/repos/chrysn/aiocoap/issues/201/events",
        "html_url": "https://github.com/chrysn/aiocoap/issues/201",
        "id": 646206514,
        "node_id": "MDU6SXNzdWU2NDYyMDY1MTQ=",
        "number": 201,
        "title": "Support Android by emulating AI_V4MAPPED",
        "user": {
            "login": "chrysn",
            "id": 442326,
            "node_id": "MDQ6VXNlcjQ0MjMyNg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/442326?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chrysn",
            "html_url": "https://github.com/chrysn",
            "followers_url": "https://api.github.com/users/chrysn/followers",
            "following_url": "https://api.github.com/users/chrysn/following{/other_user}",
            "gists_url": "https://api.github.com/users/chrysn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chrysn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chrysn/subscriptions",
            "organizations_url": "https://api.github.com/users/chrysn/orgs",
            "repos_url": "https://api.github.com/users/chrysn/repos",
            "events_url": "https://api.github.com/users/chrysn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chrysn/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 2147883202,
                "node_id": "MDU6TGFiZWwyMTQ3ODgzMjAy",
                "url": "https://api.github.com/repos/chrysn/aiocoap/labels/not%20now",
                "name": "not now",
                "color": "444444",
                "default": false,
                "description": "An issue that will stay unresolved unless there is good reason to continue on it."
            },
            {
                "id": 261205694,
                "node_id": "MDU6TGFiZWwyNjEyMDU2OTQ=",
                "url": "https://api.github.com/repos/chrysn/aiocoap/labels/platform%20support",
                "name": "platform support",
                "color": "fad8c7",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "chrysn",
            "id": 442326,
            "node_id": "MDQ6VXNlcjQ0MjMyNg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/442326?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chrysn",
            "html_url": "https://github.com/chrysn",
            "followers_url": "https://api.github.com/users/chrysn/followers",
            "following_url": "https://api.github.com/users/chrysn/following{/other_user}",
            "gists_url": "https://api.github.com/users/chrysn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chrysn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chrysn/subscriptions",
            "organizations_url": "https://api.github.com/users/chrysn/orgs",
            "repos_url": "https://api.github.com/users/chrysn/repos",
            "events_url": "https://api.github.com/users/chrysn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chrysn/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "chrysn",
                "id": 442326,
                "node_id": "MDQ6VXNlcjQ0MjMyNg==",
                "avatar_url": "https://avatars.githubusercontent.com/u/442326?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/chrysn",
                "html_url": "https://github.com/chrysn",
                "followers_url": "https://api.github.com/users/chrysn/followers",
                "following_url": "https://api.github.com/users/chrysn/following{/other_user}",
                "gists_url": "https://api.github.com/users/chrysn/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/chrysn/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/chrysn/subscriptions",
                "organizations_url": "https://api.github.com/users/chrysn/orgs",
                "repos_url": "https://api.github.com/users/chrysn/repos",
                "events_url": "https://api.github.com/users/chrysn/events{/privacy}",
                "received_events_url": "https://api.github.com/users/chrysn/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-06-26T11:44:54Z",
        "updated_at": "2020-06-26T11:44:54Z",
        "closed_at": null,
        "author_association": "OWNER",
        "active_lock_reason": null,
        "body": "It appears that Android has a working dual-stack support (ie. can use `::ffff:192.168.0.1` style IP addresses in the IPv6 stack), but its bionic libc errs out when getaddrinfo is used with AI_V4MAPPED. (This was tested with the Python from termux, and observed earlier in kivy/python-for-android based tests as well).\r\n\r\nSo while one could just rip out all V4MAPPED for Android, that would lead to a situation where the user gets the solid impression that they're working on a V6-only device, while actually incoming V4 connections are accepted, and then V6ONLY=0 actually is dangerous for once.\r\n\r\nI have a concrete plan on how to address this (detour getaddrinfo calls into a function that, on affected devices, does a V4 and V6 getaddrinfo separately and merges them into a valid result -- a polyfill, if you so like), but that'd need quite some development time and thorough testing (possibly with a switch that'd run both mechanisms during CI and assert that the emulated V4MAPPED gives the same results).\r\n\r\nThus, Android is currently effectively unsupported. If you have use cases for aiocoap support on Android, please add them to this issue.",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/chrysn/aiocoap/issues/199",
        "repository_url": "https://api.github.com/repos/chrysn/aiocoap",
        "labels_url": "https://api.github.com/repos/chrysn/aiocoap/issues/199/labels{/name}",
        "comments_url": "https://api.github.com/repos/chrysn/aiocoap/issues/199/comments",
        "events_url": "https://api.github.com/repos/chrysn/aiocoap/issues/199/events",
        "html_url": "https://github.com/chrysn/aiocoap/issues/199",
        "id": 644360881,
        "node_id": "MDU6SXNzdWU2NDQzNjA4ODE=",
        "number": 199,
        "title": "multicast: Bind to all interfaces",
        "user": {
            "login": "chrysn",
            "id": 442326,
            "node_id": "MDQ6VXNlcjQ0MjMyNg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/442326?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chrysn",
            "html_url": "https://github.com/chrysn",
            "followers_url": "https://api.github.com/users/chrysn/followers",
            "following_url": "https://api.github.com/users/chrysn/following{/other_user}",
            "gists_url": "https://api.github.com/users/chrysn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chrysn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chrysn/subscriptions",
            "organizations_url": "https://api.github.com/users/chrysn/orgs",
            "repos_url": "https://api.github.com/users/chrysn/repos",
            "events_url": "https://api.github.com/users/chrysn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chrysn/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "chrysn",
            "id": 442326,
            "node_id": "MDQ6VXNlcjQ0MjMyNg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/442326?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chrysn",
            "html_url": "https://github.com/chrysn",
            "followers_url": "https://api.github.com/users/chrysn/followers",
            "following_url": "https://api.github.com/users/chrysn/following{/other_user}",
            "gists_url": "https://api.github.com/users/chrysn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chrysn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chrysn/subscriptions",
            "organizations_url": "https://api.github.com/users/chrysn/orgs",
            "repos_url": "https://api.github.com/users/chrysn/repos",
            "events_url": "https://api.github.com/users/chrysn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chrysn/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "chrysn",
                "id": 442326,
                "node_id": "MDQ6VXNlcjQ0MjMyNg==",
                "avatar_url": "https://avatars.githubusercontent.com/u/442326?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/chrysn",
                "html_url": "https://github.com/chrysn",
                "followers_url": "https://api.github.com/users/chrysn/followers",
                "following_url": "https://api.github.com/users/chrysn/following{/other_user}",
                "gists_url": "https://api.github.com/users/chrysn/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/chrysn/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/chrysn/subscriptions",
                "organizations_url": "https://api.github.com/users/chrysn/orgs",
                "repos_url": "https://api.github.com/users/chrysn/repos",
                "events_url": "https://api.github.com/users/chrysn/events{/privacy}",
                "received_events_url": "https://api.github.com/users/chrysn/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-06-24T06:40:47Z",
        "updated_at": "2020-06-24T06:40:47Z",
        "closed_at": null,
        "author_association": "OWNER",
        "active_lock_reason": null,
        "body": "Conceptually, [`socket.if_nameindex`](https://docs.python.org/3/library/socket.html#socket.if_nameindex) could be used to join multicast groups on all interfaces.\r\n\r\nOne downside of this is that that would be evaluated on startup only, whereas the expected behavior of binding to '::' is that once started, a server can run forever and will be usable both with hot-plugged interfaces and new addresses. (Though granted, new interfaces being created is a much rarer situation than new addresses being added).",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/chrysn/aiocoap/issues/197",
        "repository_url": "https://api.github.com/repos/chrysn/aiocoap",
        "labels_url": "https://api.github.com/repos/chrysn/aiocoap/issues/197/labels{/name}",
        "comments_url": "https://api.github.com/repos/chrysn/aiocoap/issues/197/comments",
        "events_url": "https://api.github.com/repos/chrysn/aiocoap/issues/197/events",
        "html_url": "https://github.com/chrysn/aiocoap/issues/197",
        "id": 643935722,
        "node_id": "MDU6SXNzdWU2NDM5MzU3MjI=",
        "number": 197,
        "title": "Multicast accepted even when disabled",
        "user": {
            "login": "chrysn",
            "id": 442326,
            "node_id": "MDQ6VXNlcjQ0MjMyNg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/442326?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chrysn",
            "html_url": "https://github.com/chrysn",
            "followers_url": "https://api.github.com/users/chrysn/followers",
            "following_url": "https://api.github.com/users/chrysn/following{/other_user}",
            "gists_url": "https://api.github.com/users/chrysn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chrysn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chrysn/subscriptions",
            "organizations_url": "https://api.github.com/users/chrysn/orgs",
            "repos_url": "https://api.github.com/users/chrysn/repos",
            "events_url": "https://api.github.com/users/chrysn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chrysn/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "chrysn",
            "id": 442326,
            "node_id": "MDQ6VXNlcjQ0MjMyNg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/442326?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chrysn",
            "html_url": "https://github.com/chrysn",
            "followers_url": "https://api.github.com/users/chrysn/followers",
            "following_url": "https://api.github.com/users/chrysn/following{/other_user}",
            "gists_url": "https://api.github.com/users/chrysn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chrysn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chrysn/subscriptions",
            "organizations_url": "https://api.github.com/users/chrysn/orgs",
            "repos_url": "https://api.github.com/users/chrysn/repos",
            "events_url": "https://api.github.com/users/chrysn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chrysn/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "chrysn",
                "id": 442326,
                "node_id": "MDQ6VXNlcjQ0MjMyNg==",
                "avatar_url": "https://avatars.githubusercontent.com/u/442326?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/chrysn",
                "html_url": "https://github.com/chrysn",
                "followers_url": "https://api.github.com/users/chrysn/followers",
                "following_url": "https://api.github.com/users/chrysn/following{/other_user}",
                "gists_url": "https://api.github.com/users/chrysn/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/chrysn/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/chrysn/subscriptions",
                "organizations_url": "https://api.github.com/users/chrysn/orgs",
                "repos_url": "https://api.github.com/users/chrysn/repos",
                "events_url": "https://api.github.com/users/chrysn/events{/privacy}",
                "received_events_url": "https://api.github.com/users/chrysn/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-06-23T15:25:26Z",
        "updated_at": "2020-06-23T15:25:30Z",
        "closed_at": null,
        "author_association": "OWNER",
        "active_lock_reason": null,
        "body": "The current treatment of multicast relies on the operating system to filter by the joint multicast groups. At least Linux does not do that, though. Consequently, a server will respond to multicast requests even when not configured to do so, at least for groups the interface is in (eg. \"all nodes\").\r\n\r\nMitigation can be two-phased:\r\n* Ignore requests to multicast on servers where it is not enabled\r\n* Ask resources to opt in to multicast groups (which I think I remember should be default but I didn't find the reference any more).",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/chrysn/aiocoap/issues/196",
        "repository_url": "https://api.github.com/repos/chrysn/aiocoap",
        "labels_url": "https://api.github.com/repos/chrysn/aiocoap/issues/196/labels{/name}",
        "comments_url": "https://api.github.com/repos/chrysn/aiocoap/issues/196/comments",
        "events_url": "https://api.github.com/repos/chrysn/aiocoap/issues/196/events",
        "html_url": "https://github.com/chrysn/aiocoap/issues/196",
        "id": 643856860,
        "node_id": "MDU6SXNzdWU2NDM4NTY4NjA=",
        "number": 196,
        "title": "Normalize HAS_* style configuration",
        "user": {
            "login": "chrysn",
            "id": 442326,
            "node_id": "MDQ6VXNlcjQ0MjMyNg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/442326?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chrysn",
            "html_url": "https://github.com/chrysn",
            "followers_url": "https://api.github.com/users/chrysn/followers",
            "following_url": "https://api.github.com/users/chrysn/following{/other_user}",
            "gists_url": "https://api.github.com/users/chrysn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chrysn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chrysn/subscriptions",
            "organizations_url": "https://api.github.com/users/chrysn/orgs",
            "repos_url": "https://api.github.com/users/chrysn/repos",
            "events_url": "https://api.github.com/users/chrysn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chrysn/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1315896198,
                "node_id": "MDU6TGFiZWwxMzE1ODk2MTk4",
                "url": "https://api.github.com/repos/chrysn/aiocoap/labels/easy%20first%20step",
                "name": "easy first step",
                "color": "29c673",
                "default": false,
                "description": "An issue that newcomers could easily fix"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "chrysn",
            "id": 442326,
            "node_id": "MDQ6VXNlcjQ0MjMyNg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/442326?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chrysn",
            "html_url": "https://github.com/chrysn",
            "followers_url": "https://api.github.com/users/chrysn/followers",
            "following_url": "https://api.github.com/users/chrysn/following{/other_user}",
            "gists_url": "https://api.github.com/users/chrysn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chrysn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chrysn/subscriptions",
            "organizations_url": "https://api.github.com/users/chrysn/orgs",
            "repos_url": "https://api.github.com/users/chrysn/repos",
            "events_url": "https://api.github.com/users/chrysn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chrysn/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "chrysn",
                "id": 442326,
                "node_id": "MDQ6VXNlcjQ0MjMyNg==",
                "avatar_url": "https://avatars.githubusercontent.com/u/442326?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/chrysn",
                "html_url": "https://github.com/chrysn",
                "followers_url": "https://api.github.com/users/chrysn/followers",
                "following_url": "https://api.github.com/users/chrysn/following{/other_user}",
                "gists_url": "https://api.github.com/users/chrysn/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/chrysn/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/chrysn/subscriptions",
                "organizations_url": "https://api.github.com/users/chrysn/orgs",
                "repos_url": "https://api.github.com/users/chrysn/repos",
                "events_url": "https://api.github.com/users/chrysn/events{/privacy}",
                "received_events_url": "https://api.github.com/users/chrysn/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-06-23T13:47:48Z",
        "updated_at": "2020-06-23T13:48:04Z",
        "closed_at": null,
        "author_association": "OWNER",
        "active_lock_reason": null,
        "body": "* HAS_RECVERR sits in socknumbers\r\n* has_reuse_port sits in defaults\r\n\r\nBoth should be in defaults.\r\n\r\nGranted, for has_reuse_port there may be a case for overriding it while there is none of HAS_RECVERR, but still there should be consistency. The detection method can stay or be replaced by `sys.platform == 'linux'`, given that this *is* a custom Linux extension.",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/chrysn/aiocoap/issues/195",
        "repository_url": "https://api.github.com/repos/chrysn/aiocoap",
        "labels_url": "https://api.github.com/repos/chrysn/aiocoap/issues/195/labels{/name}",
        "comments_url": "https://api.github.com/repos/chrysn/aiocoap/issues/195/comments",
        "events_url": "https://api.github.com/repos/chrysn/aiocoap/issues/195/events",
        "html_url": "https://github.com/chrysn/aiocoap/issues/195",
        "id": 641959979,
        "node_id": "MDU6SXNzdWU2NDE5NTk5Nzk=",
        "number": 195,
        "title": "Evaluate the necessity for MSG_CONFIRM",
        "user": {
            "login": "chrysn",
            "id": 442326,
            "node_id": "MDQ6VXNlcjQ0MjMyNg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/442326?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chrysn",
            "html_url": "https://github.com/chrysn",
            "followers_url": "https://api.github.com/users/chrysn/followers",
            "following_url": "https://api.github.com/users/chrysn/following{/other_user}",
            "gists_url": "https://api.github.com/users/chrysn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chrysn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chrysn/subscriptions",
            "organizations_url": "https://api.github.com/users/chrysn/orgs",
            "repos_url": "https://api.github.com/users/chrysn/repos",
            "events_url": "https://api.github.com/users/chrysn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chrysn/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 180339150,
                "node_id": "MDU6TGFiZWwxODAzMzkxNTA=",
                "url": "https://api.github.com/repos/chrysn/aiocoap/labels/low-level%20networking",
                "name": "low-level networking",
                "color": "5319e7",
                "default": false,
                "description": ""
            },
            {
                "id": 2147883202,
                "node_id": "MDU6TGFiZWwyMTQ3ODgzMjAy",
                "url": "https://api.github.com/repos/chrysn/aiocoap/labels/not%20now",
                "name": "not now",
                "color": "444444",
                "default": false,
                "description": "An issue that will stay unresolved unless there is good reason to continue on it."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-06-19T13:14:14Z",
        "updated_at": "2020-06-19T13:14:14Z",
        "closed_at": null,
        "author_association": "OWNER",
        "active_lock_reason": null,
        "body": "While doing research for multicast I stumbled upon [MSG_CONFIRM](https://manpages.debian.org/buster/manpages-dev/send.2.en.html), which reads like it'd help reduce traffic. It's not fully clear how this would work, but given that we do have some application layer information, this might be possible.\r\n\r\nPossibly, this could be set on messages that are let out of the buffer as a result of a successful response to a previous request, ie. an ACK or a response. For the server side, it's unclear yet as to whether to set it (\"Kernel, you just got a message from there, so it's in your cache -- don't try to validate the MAC address for the response and just send it whence it came from\", possibly eating an ARP spoofing but who's relying on those anyway) or not (because we don't have confirmation of a round-trip).",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/chrysn/aiocoap/issues/193",
        "repository_url": "https://api.github.com/repos/chrysn/aiocoap",
        "labels_url": "https://api.github.com/repos/chrysn/aiocoap/issues/193/labels{/name}",
        "comments_url": "https://api.github.com/repos/chrysn/aiocoap/issues/193/comments",
        "events_url": "https://api.github.com/repos/chrysn/aiocoap/issues/193/events",
        "html_url": "https://github.com/chrysn/aiocoap/issues/193",
        "id": 637046723,
        "node_id": "MDU6SXNzdWU2MzcwNDY3MjM=",
        "number": 193,
        "title": "Tests don't run on full matrix",
        "user": {
            "login": "chrysn",
            "id": 442326,
            "node_id": "MDQ6VXNlcjQ0MjMyNg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/442326?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chrysn",
            "html_url": "https://github.com/chrysn",
            "followers_url": "https://api.github.com/users/chrysn/followers",
            "following_url": "https://api.github.com/users/chrysn/following{/other_user}",
            "gists_url": "https://api.github.com/users/chrysn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chrysn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chrysn/subscriptions",
            "organizations_url": "https://api.github.com/users/chrysn/orgs",
            "repos_url": "https://api.github.com/users/chrysn/repos",
            "events_url": "https://api.github.com/users/chrysn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chrysn/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 104472955,
                "node_id": "MDU6TGFiZWwxMDQ0NzI5NTU=",
                "url": "https://api.github.com/repos/chrysn/aiocoap/labels/help%20wanted",
                "name": "help wanted",
                "color": "159818",
                "default": true,
                "description": null
            },
            {
                "id": 486880949,
                "node_id": "MDU6TGFiZWw0ODY4ODA5NDk=",
                "url": "https://api.github.com/repos/chrysn/aiocoap/labels/test%20suite",
                "name": "test suite",
                "color": "0052cc",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-06-11T14:08:11Z",
        "updated_at": "2020-06-11T14:15:32Z",
        "closed_at": null,
        "author_association": "OWNER",
        "active_lock_reason": null,
        "body": "With the `setup.py` tests breaking down and the migration to tox, not all scenarios can be easily tested any more. Possibly due to https://bugs.debian.org/962654 (where the workaround is some help but doesn't solve everything), testing pypy in combination with uvloop currently does not work and is removed from the test suite.\r\n\r\nHelp in getting all variations covered (py37, py38, pypy against various loops and sets of installed extras) would be appreciated, and is expected to require good understanding of which the components involved in venv setups.",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/chrysn/aiocoap/issues/192",
        "repository_url": "https://api.github.com/repos/chrysn/aiocoap",
        "labels_url": "https://api.github.com/repos/chrysn/aiocoap/issues/192/labels{/name}",
        "comments_url": "https://api.github.com/repos/chrysn/aiocoap/issues/192/comments",
        "events_url": "https://api.github.com/repos/chrysn/aiocoap/issues/192/events",
        "html_url": "https://github.com/chrysn/aiocoap/issues/192",
        "id": 636178551,
        "node_id": "MDU6SXNzdWU2MzYxNzg1NTE=",
        "number": 192,
        "title": "Migrate from gbulb to asyncio-glib",
        "user": {
            "login": "chrysn",
            "id": 442326,
            "node_id": "MDQ6VXNlcjQ0MjMyNg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/442326?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chrysn",
            "html_url": "https://github.com/chrysn",
            "followers_url": "https://api.github.com/users/chrysn/followers",
            "following_url": "https://api.github.com/users/chrysn/following{/other_user}",
            "gists_url": "https://api.github.com/users/chrysn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chrysn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chrysn/subscriptions",
            "organizations_url": "https://api.github.com/users/chrysn/orgs",
            "repos_url": "https://api.github.com/users/chrysn/repos",
            "events_url": "https://api.github.com/users/chrysn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chrysn/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 486880949,
                "node_id": "MDU6TGFiZWw0ODY4ODA5NDk=",
                "url": "https://api.github.com/repos/chrysn/aiocoap/labels/test%20suite",
                "name": "test suite",
                "color": "0052cc",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "chrysn",
            "id": 442326,
            "node_id": "MDQ6VXNlcjQ0MjMyNg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/442326?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chrysn",
            "html_url": "https://github.com/chrysn",
            "followers_url": "https://api.github.com/users/chrysn/followers",
            "following_url": "https://api.github.com/users/chrysn/following{/other_user}",
            "gists_url": "https://api.github.com/users/chrysn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chrysn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chrysn/subscriptions",
            "organizations_url": "https://api.github.com/users/chrysn/orgs",
            "repos_url": "https://api.github.com/users/chrysn/repos",
            "events_url": "https://api.github.com/users/chrysn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chrysn/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "chrysn",
                "id": 442326,
                "node_id": "MDQ6VXNlcjQ0MjMyNg==",
                "avatar_url": "https://avatars.githubusercontent.com/u/442326?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/chrysn",
                "html_url": "https://github.com/chrysn",
                "followers_url": "https://api.github.com/users/chrysn/followers",
                "following_url": "https://api.github.com/users/chrysn/following{/other_user}",
                "gists_url": "https://api.github.com/users/chrysn/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/chrysn/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/chrysn/subscriptions",
                "organizations_url": "https://api.github.com/users/chrysn/orgs",
                "repos_url": "https://api.github.com/users/chrysn/repos",
                "events_url": "https://api.github.com/users/chrysn/events{/privacy}",
                "received_events_url": "https://api.github.com/users/chrysn/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 2,
        "created_at": "2020-06-10T11:44:03Z",
        "updated_at": "2020-06-26T16:42:42Z",
        "closed_at": null,
        "author_association": "OWNER",
        "active_lock_reason": null,
        "body": "As gbulb is abandoned, https://github.com/jhenstridge/asyncio-glib/ seems to be the most direct successor.\r\n\r\nThis will not actually require code changes to aiocoap itself, but to examples, documentation and the test suite.",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/chrysn/aiocoap/issues/190",
        "repository_url": "https://api.github.com/repos/chrysn/aiocoap",
        "labels_url": "https://api.github.com/repos/chrysn/aiocoap/issues/190/labels{/name}",
        "comments_url": "https://api.github.com/repos/chrysn/aiocoap/issues/190/comments",
        "events_url": "https://api.github.com/repos/chrysn/aiocoap/issues/190/events",
        "html_url": "https://github.com/chrysn/aiocoap/pull/190",
        "id": 587649806,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzkzNTUwMTc2",
        "number": 190,
        "title": "Add 1 second timeout for plumbing of no-response requests",
        "user": {
            "login": "HRogge",
            "id": 7280823,
            "node_id": "MDQ6VXNlcjcyODA4MjM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7280823?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/HRogge",
            "html_url": "https://github.com/HRogge",
            "followers_url": "https://api.github.com/users/HRogge/followers",
            "following_url": "https://api.github.com/users/HRogge/following{/other_user}",
            "gists_url": "https://api.github.com/users/HRogge/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/HRogge/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/HRogge/subscriptions",
            "organizations_url": "https://api.github.com/users/HRogge/orgs",
            "repos_url": "https://api.github.com/users/HRogge/repos",
            "events_url": "https://api.github.com/users/HRogge/events{/privacy}",
            "received_events_url": "https://api.github.com/users/HRogge/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-03-25T12:07:45Z",
        "updated_at": "2020-06-18T09:54:49Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "pull_request": {
            "url": "https://api.github.com/repos/chrysn/aiocoap/pulls/190",
            "html_url": "https://github.com/chrysn/aiocoap/pull/190",
            "diff_url": "https://github.com/chrysn/aiocoap/pull/190.diff",
            "patch_url": "https://github.com/chrysn/aiocoap/pull/190.patch"
        },
        "body": "Add a fixed timeout of 1 second for resolving plumbing events for no-response messages.",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/chrysn/aiocoap/issues/189",
        "repository_url": "https://api.github.com/repos/chrysn/aiocoap",
        "labels_url": "https://api.github.com/repos/chrysn/aiocoap/issues/189/labels{/name}",
        "comments_url": "https://api.github.com/repos/chrysn/aiocoap/issues/189/comments",
        "events_url": "https://api.github.com/repos/chrysn/aiocoap/issues/189/events",
        "html_url": "https://github.com/chrysn/aiocoap/issues/189",
        "id": 586882581,
        "node_id": "MDU6SXNzdWU1ODY4ODI1ODE=",
        "number": 189,
        "title": "Follow multicast amplification mitigation guidance",
        "user": {
            "login": "chrysn",
            "id": 442326,
            "node_id": "MDQ6VXNlcjQ0MjMyNg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/442326?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chrysn",
            "html_url": "https://github.com/chrysn",
            "followers_url": "https://api.github.com/users/chrysn/followers",
            "following_url": "https://api.github.com/users/chrysn/following{/other_user}",
            "gists_url": "https://api.github.com/users/chrysn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chrysn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chrysn/subscriptions",
            "organizations_url": "https://api.github.com/users/chrysn/orgs",
            "repos_url": "https://api.github.com/users/chrysn/repos",
            "events_url": "https://api.github.com/users/chrysn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chrysn/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1550738935,
                "node_id": "MDU6TGFiZWwxNTUwNzM4OTM1",
                "url": "https://api.github.com/repos/chrysn/aiocoap/labels/security",
                "name": "security",
                "color": "d93f0b",
                "default": false,
                "description": ""
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "chrysn",
            "id": 442326,
            "node_id": "MDQ6VXNlcjQ0MjMyNg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/442326?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chrysn",
            "html_url": "https://github.com/chrysn",
            "followers_url": "https://api.github.com/users/chrysn/followers",
            "following_url": "https://api.github.com/users/chrysn/following{/other_user}",
            "gists_url": "https://api.github.com/users/chrysn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chrysn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chrysn/subscriptions",
            "organizations_url": "https://api.github.com/users/chrysn/orgs",
            "repos_url": "https://api.github.com/users/chrysn/repos",
            "events_url": "https://api.github.com/users/chrysn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chrysn/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "chrysn",
                "id": 442326,
                "node_id": "MDQ6VXNlcjQ0MjMyNg==",
                "avatar_url": "https://avatars.githubusercontent.com/u/442326?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/chrysn",
                "html_url": "https://github.com/chrysn",
                "followers_url": "https://api.github.com/users/chrysn/followers",
                "following_url": "https://api.github.com/users/chrysn/following{/other_user}",
                "gists_url": "https://api.github.com/users/chrysn/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/chrysn/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/chrysn/subscriptions",
                "organizations_url": "https://api.github.com/users/chrysn/orgs",
                "repos_url": "https://api.github.com/users/chrysn/repos",
                "events_url": "https://api.github.com/users/chrysn/events{/privacy}",
                "received_events_url": "https://api.github.com/users/chrysn/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-03-24T11:15:55Z",
        "updated_at": "2020-03-25T07:34:24Z",
        "closed_at": null,
        "author_association": "OWNER",
        "active_lock_reason": null,
        "body": "Currently, aiocoap answers to way too many requests sent over multicast (even pings, which is not addressed separately as a `GET /` has the same effect). The default options for multicast should be turned down (making it more opt-in).\r\n\r\nSee https://tools.ietf.org/html/rfc7252#section-11.3",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/chrysn/aiocoap/issues/187",
        "repository_url": "https://api.github.com/repos/chrysn/aiocoap",
        "labels_url": "https://api.github.com/repos/chrysn/aiocoap/issues/187/labels{/name}",
        "comments_url": "https://api.github.com/repos/chrysn/aiocoap/issues/187/comments",
        "events_url": "https://api.github.com/repos/chrysn/aiocoap/issues/187/events",
        "html_url": "https://github.com/chrysn/aiocoap/issues/187",
        "id": 579930345,
        "node_id": "MDU6SXNzdWU1Nzk5MzAzNDU=",
        "number": 187,
        "title": "observation iteration does not terminate on cancellation",
        "user": {
            "login": "chrysn",
            "id": 442326,
            "node_id": "MDQ6VXNlcjQ0MjMyNg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/442326?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chrysn",
            "html_url": "https://github.com/chrysn",
            "followers_url": "https://api.github.com/users/chrysn/followers",
            "following_url": "https://api.github.com/users/chrysn/following{/other_user}",
            "gists_url": "https://api.github.com/users/chrysn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chrysn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chrysn/subscriptions",
            "organizations_url": "https://api.github.com/users/chrysn/orgs",
            "repos_url": "https://api.github.com/users/chrysn/repos",
            "events_url": "https://api.github.com/users/chrysn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chrysn/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 180339593,
                "node_id": "MDU6TGFiZWwxODAzMzk1OTM=",
                "url": "https://api.github.com/repos/chrysn/aiocoap/labels/observation",
                "name": "observation",
                "color": "bfe5bf",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-03-12T13:14:37Z",
        "updated_at": "2020-03-12T13:14:37Z",
        "closed_at": null,
        "author_association": "OWNER",
        "active_lock_reason": null,
        "body": "When iterating asynchronously over observation results, it appears (from code review due to #186, not direct testing) that cancelling the request/observation will keep the `async for` loop stuck indefinitely.\r\n\r\nIt should either terminate regularly or raise something, and fixing this will primarily consist of deciding which behavior is better here.",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/chrysn/aiocoap/issues/186",
        "repository_url": "https://api.github.com/repos/chrysn/aiocoap",
        "labels_url": "https://api.github.com/repos/chrysn/aiocoap/issues/186/labels{/name}",
        "comments_url": "https://api.github.com/repos/chrysn/aiocoap/issues/186/comments",
        "events_url": "https://api.github.com/repos/chrysn/aiocoap/issues/186/events",
        "html_url": "https://github.com/chrysn/aiocoap/issues/186",
        "id": 579912778,
        "node_id": "MDU6SXNzdWU1Nzk5MTI3Nzg=",
        "number": 186,
        "title": "Process of observer cancellation",
        "user": {
            "login": "pauluap",
            "id": 573966,
            "node_id": "MDQ6VXNlcjU3Mzk2Ng==",
            "avatar_url": "https://avatars.githubusercontent.com/u/573966?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pauluap",
            "html_url": "https://github.com/pauluap",
            "followers_url": "https://api.github.com/users/pauluap/followers",
            "following_url": "https://api.github.com/users/pauluap/following{/other_user}",
            "gists_url": "https://api.github.com/users/pauluap/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pauluap/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pauluap/subscriptions",
            "organizations_url": "https://api.github.com/users/pauluap/orgs",
            "repos_url": "https://api.github.com/users/pauluap/repos",
            "events_url": "https://api.github.com/users/pauluap/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pauluap/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 180339593,
                "node_id": "MDU6TGFiZWwxODAzMzk1OTM=",
                "url": "https://api.github.com/repos/chrysn/aiocoap/labels/observation",
                "name": "observation",
                "color": "bfe5bf",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2020-03-12T12:43:18Z",
        "updated_at": "2020-03-12T20:58:35Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I'm trying to understand what is supposed to happen during an observer cancellation.\r\n\r\nLet's say I have the following code:\r\n\r\n```\r\nasync def make_observer(self, key, callback):\r\n        message = aiocoap.Message(mtype=aiocoap.NON, code=aiocoap.GET, uri=f'coap://{self.address}/model?id={key}')\r\n        message.opt.observe = 0\r\n        observation_is_over = asyncio.Future()\r\n        requester = self.context.request(message)\r\n\r\n        self.requesters.append(requester)\r\n        requester.observation.register_errback(observation_is_over.set_result)\r\n        requester.observation.register_callback(lambda data, key=key: callback(key, data))\r\n\r\n        response_data = await requester.response\r\n        callback(key, response_data)\r\n        \r\n       await observation_is_over\r\n```\r\n\r\nThings are moving fine and dandy, and some time later, I want to cancel the observation.  I do this:\r\n\r\n```\r\n   requester.observation.cancel()\r\n```\r\n\r\nAt this point, what is supposed to happen?  I rather thought that the client would transmit a GET request with the observe option set to 1, but that doesn't appear to happen.  Is the client waiting for a new update from the server so that it can reply with a RST? \r\n\r\nI had been collecting the observation tasks and gathering them at the end like so\r\n\r\n```\r\ntasks = [asyncio.create_task(self.make_observer(k, v) for k, v in obs.items()]\r\n...\r\n# cancel all observers\r\n...\r\nawait asyncio.gather(*tasks, return_exceptions=True)\r\n```\r\n\r\nThe gathering seems to never complete, the run methods of Request don't seem to be returned to so that it can check the cancellation state and call `self._plumbing_request.stop_interest()` - that is if that's what's supposed to eventually happen",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/chrysn/aiocoap/issues/184",
        "repository_url": "https://api.github.com/repos/chrysn/aiocoap",
        "labels_url": "https://api.github.com/repos/chrysn/aiocoap/issues/184/labels{/name}",
        "comments_url": "https://api.github.com/repos/chrysn/aiocoap/issues/184/comments",
        "events_url": "https://api.github.com/repos/chrysn/aiocoap/issues/184/events",
        "html_url": "https://github.com/chrysn/aiocoap/issues/184",
        "id": 563104551,
        "node_id": "MDU6SXNzdWU1NjMxMDQ1NTE=",
        "number": 184,
        "title": "OSCORE example",
        "user": {
            "login": "StefanHri",
            "id": 28925966,
            "node_id": "MDQ6VXNlcjI4OTI1OTY2",
            "avatar_url": "https://avatars.githubusercontent.com/u/28925966?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/StefanHri",
            "html_url": "https://github.com/StefanHri",
            "followers_url": "https://api.github.com/users/StefanHri/followers",
            "following_url": "https://api.github.com/users/StefanHri/following{/other_user}",
            "gists_url": "https://api.github.com/users/StefanHri/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/StefanHri/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/StefanHri/subscriptions",
            "organizations_url": "https://api.github.com/users/StefanHri/orgs",
            "repos_url": "https://api.github.com/users/StefanHri/repos",
            "events_url": "https://api.github.com/users/StefanHri/events{/privacy}",
            "received_events_url": "https://api.github.com/users/StefanHri/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 147401788,
                "node_id": "MDU6TGFiZWwxNDc0MDE3ODg=",
                "url": "https://api.github.com/repos/chrysn/aiocoap/labels/documentation",
                "name": "documentation",
                "color": "fbca04",
                "default": true,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "chrysn",
            "id": 442326,
            "node_id": "MDQ6VXNlcjQ0MjMyNg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/442326?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chrysn",
            "html_url": "https://github.com/chrysn",
            "followers_url": "https://api.github.com/users/chrysn/followers",
            "following_url": "https://api.github.com/users/chrysn/following{/other_user}",
            "gists_url": "https://api.github.com/users/chrysn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chrysn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chrysn/subscriptions",
            "organizations_url": "https://api.github.com/users/chrysn/orgs",
            "repos_url": "https://api.github.com/users/chrysn/repos",
            "events_url": "https://api.github.com/users/chrysn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chrysn/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "chrysn",
                "id": 442326,
                "node_id": "MDQ6VXNlcjQ0MjMyNg==",
                "avatar_url": "https://avatars.githubusercontent.com/u/442326?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/chrysn",
                "html_url": "https://github.com/chrysn",
                "followers_url": "https://api.github.com/users/chrysn/followers",
                "following_url": "https://api.github.com/users/chrysn/following{/other_user}",
                "gists_url": "https://api.github.com/users/chrysn/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/chrysn/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/chrysn/subscriptions",
                "organizations_url": "https://api.github.com/users/chrysn/orgs",
                "repos_url": "https://api.github.com/users/chrysn/repos",
                "events_url": "https://api.github.com/users/chrysn/events{/privacy}",
                "received_events_url": "https://api.github.com/users/chrysn/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-02-11T10:23:32Z",
        "updated_at": "2020-02-11T10:44:18Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Is there an usage example for OSCORE clien/server similar to the standard CoAP client/server examples here: https://aiocoap.readthedocs.io/en/latest/examples.html ",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/chrysn/aiocoap/issues/183",
        "repository_url": "https://api.github.com/repos/chrysn/aiocoap",
        "labels_url": "https://api.github.com/repos/chrysn/aiocoap/issues/183/labels{/name}",
        "comments_url": "https://api.github.com/repos/chrysn/aiocoap/issues/183/comments",
        "events_url": "https://api.github.com/repos/chrysn/aiocoap/issues/183/events",
        "html_url": "https://github.com/chrysn/aiocoap/issues/183",
        "id": 562471615,
        "node_id": "MDU6SXNzdWU1NjI0NzE2MTU=",
        "number": 183,
        "title": "Implement deduplication relaxations and limit deduplication memory",
        "user": {
            "login": "chrysn",
            "id": 442326,
            "node_id": "MDQ6VXNlcjQ0MjMyNg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/442326?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chrysn",
            "html_url": "https://github.com/chrysn",
            "followers_url": "https://api.github.com/users/chrysn/followers",
            "following_url": "https://api.github.com/users/chrysn/following{/other_user}",
            "gists_url": "https://api.github.com/users/chrysn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chrysn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chrysn/subscriptions",
            "organizations_url": "https://api.github.com/users/chrysn/orgs",
            "repos_url": "https://api.github.com/users/chrysn/repos",
            "events_url": "https://api.github.com/users/chrysn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chrysn/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 104472954,
                "node_id": "MDU6TGFiZWwxMDQ0NzI5NTQ=",
                "url": "https://api.github.com/repos/chrysn/aiocoap/labels/enhancement",
                "name": "enhancement",
                "color": "84b6eb",
                "default": true,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-02-10T10:39:17Z",
        "updated_at": "2020-02-10T10:39:33Z",
        "closed_at": null,
        "author_association": "OWNER",
        "active_lock_reason": null,
        "body": "The current strategy of aiocoap to deduplicate everything can lead to memory requirements of around bandwidth times EXCHANGE_LIFETIME; even a 10MBit Ethernet link makes that peak at 300MB plus overheads.\r\n\r\nTo mitigate that, aiocoap should\r\n* understand codes that are idempotent, and/or[1] allow handlers to advertise that they are idempotent, and then not cache those, or\r\n* cache them for a limited time, possibly depending on their cost, and at any rate\r\n* allow the total deduplication memory to be limited, and throttle bandwidth if it is exceeded by 5.03 Sorry Out Of Memory.\r\n\r\nThis was inspired y #182, but right now it seems that something is worse than just the to-be-expected inefficiencies, if it regressed vs version 0.3.\r\n\r\n[1]: \"and\" would be correct, but would break applications that don't tolerate that correct behavior because they do non-idempotent stuff in safe handlers. Not sure whether to cater for that or to just put in a note in the changelog.",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/chrysn/aiocoap/issues/180",
        "repository_url": "https://api.github.com/repos/chrysn/aiocoap",
        "labels_url": "https://api.github.com/repos/chrysn/aiocoap/issues/180/labels{/name}",
        "comments_url": "https://api.github.com/repos/chrysn/aiocoap/issues/180/comments",
        "events_url": "https://api.github.com/repos/chrysn/aiocoap/issues/180/events",
        "html_url": "https://github.com/chrysn/aiocoap/issues/180",
        "id": 556101899,
        "node_id": "MDU6SXNzdWU1NTYxMDE4OTk=",
        "number": 180,
        "title": "Client observations that get restarted in an OSCORE server recovery process leak tasks",
        "user": {
            "login": "chrysn",
            "id": 442326,
            "node_id": "MDQ6VXNlcjQ0MjMyNg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/442326?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chrysn",
            "html_url": "https://github.com/chrysn",
            "followers_url": "https://api.github.com/users/chrysn/followers",
            "following_url": "https://api.github.com/users/chrysn/following{/other_user}",
            "gists_url": "https://api.github.com/users/chrysn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chrysn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chrysn/subscriptions",
            "organizations_url": "https://api.github.com/users/chrysn/orgs",
            "repos_url": "https://api.github.com/users/chrysn/repos",
            "events_url": "https://api.github.com/users/chrysn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chrysn/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "chrysn",
            "id": 442326,
            "node_id": "MDQ6VXNlcjQ0MjMyNg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/442326?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chrysn",
            "html_url": "https://github.com/chrysn",
            "followers_url": "https://api.github.com/users/chrysn/followers",
            "following_url": "https://api.github.com/users/chrysn/following{/other_user}",
            "gists_url": "https://api.github.com/users/chrysn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chrysn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chrysn/subscriptions",
            "organizations_url": "https://api.github.com/users/chrysn/orgs",
            "repos_url": "https://api.github.com/users/chrysn/repos",
            "events_url": "https://api.github.com/users/chrysn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chrysn/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "chrysn",
                "id": 442326,
                "node_id": "MDQ6VXNlcjQ0MjMyNg==",
                "avatar_url": "https://avatars.githubusercontent.com/u/442326?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/chrysn",
                "html_url": "https://github.com/chrysn",
                "followers_url": "https://api.github.com/users/chrysn/followers",
                "following_url": "https://api.github.com/users/chrysn/following{/other_user}",
                "gists_url": "https://api.github.com/users/chrysn/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/chrysn/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/chrysn/subscriptions",
                "organizations_url": "https://api.github.com/users/chrysn/orgs",
                "repos_url": "https://api.github.com/users/chrysn/repos",
                "events_url": "https://api.github.com/users/chrysn/events{/privacy}",
                "received_events_url": "https://api.github.com/users/chrysn/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 2,
        "created_at": "2020-01-28T10:04:29Z",
        "updated_at": "2020-01-28T11:16:33Z",
        "closed_at": null,
        "author_association": "OWNER",
        "active_lock_reason": null,
        "body": "This causes tests failures when running OSCORE plugtests 5 and 6 against a server that is just recovering its replay window.\r\n\r\nThis is rather tricky to debug as the backtrace shown of the task's creation (in `PYTHONASYNCIODEBUG=1` mode) does not actually touch the OSCORE path, so it needs more investigation into which task that actually is.",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/chrysn/aiocoap/issues/178",
        "repository_url": "https://api.github.com/repos/chrysn/aiocoap",
        "labels_url": "https://api.github.com/repos/chrysn/aiocoap/issues/178/labels{/name}",
        "comments_url": "https://api.github.com/repos/chrysn/aiocoap/issues/178/comments",
        "events_url": "https://api.github.com/repos/chrysn/aiocoap/issues/178/events",
        "html_url": "https://github.com/chrysn/aiocoap/issues/178",
        "id": 554705284,
        "node_id": "MDU6SXNzdWU1NTQ3MDUyODQ=",
        "number": 178,
        "title": "Asynchronous OSCORE B.1.1 operation",
        "user": {
            "login": "chrysn",
            "id": 442326,
            "node_id": "MDQ6VXNlcjQ0MjMyNg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/442326?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chrysn",
            "html_url": "https://github.com/chrysn",
            "followers_url": "https://api.github.com/users/chrysn/followers",
            "following_url": "https://api.github.com/users/chrysn/following{/other_user}",
            "gists_url": "https://api.github.com/users/chrysn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chrysn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chrysn/subscriptions",
            "organizations_url": "https://api.github.com/users/chrysn/orgs",
            "repos_url": "https://api.github.com/users/chrysn/repos",
            "events_url": "https://api.github.com/users/chrysn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chrysn/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 104472954,
                "node_id": "MDU6TGFiZWwxMDQ0NzI5NTQ=",
                "url": "https://api.github.com/repos/chrysn/aiocoap/labels/enhancement",
                "name": "enhancement",
                "color": "84b6eb",
                "default": true,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-01-24T12:18:54Z",
        "updated_at": "2020-01-24T12:18:54Z",
        "closed_at": null,
        "author_association": "OWNER",
        "active_lock_reason": null,
        "body": "The WIP implementation of OSCORE B.1.1 (incrementing persisted sequence numbers in jumps of `k`) currently blocks while persisting sequence numbers. This only happens every `k` received packages, but should still not happen.\r\n\r\nThe planned solution is to start flushing at a high-water mark (say, 90%), note it as pending in the security context, and the network outruns the file system, raise ContextUnavailable into a 5.03 Max-Age:max(time-spent-in-fsync-so-far, 1).\r\n\r\nUntil then, blocking at the exhaustion point is probably good enough for practical use.",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/chrysn/aiocoap/issues/177",
        "repository_url": "https://api.github.com/repos/chrysn/aiocoap",
        "labels_url": "https://api.github.com/repos/chrysn/aiocoap/issues/177/labels{/name}",
        "comments_url": "https://api.github.com/repos/chrysn/aiocoap/issues/177/comments",
        "events_url": "https://api.github.com/repos/chrysn/aiocoap/issues/177/events",
        "html_url": "https://github.com/chrysn/aiocoap/issues/177",
        "id": 518520622,
        "node_id": "MDU6SXNzdWU1MTg1MjA2MjI=",
        "number": 177,
        "title": "Notifications exceed default block size",
        "user": {
            "login": "chrysn",
            "id": 442326,
            "node_id": "MDQ6VXNlcjQ0MjMyNg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/442326?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chrysn",
            "html_url": "https://github.com/chrysn",
            "followers_url": "https://api.github.com/users/chrysn/followers",
            "following_url": "https://api.github.com/users/chrysn/following{/other_user}",
            "gists_url": "https://api.github.com/users/chrysn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chrysn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chrysn/subscriptions",
            "organizations_url": "https://api.github.com/users/chrysn/orgs",
            "repos_url": "https://api.github.com/users/chrysn/repos",
            "events_url": "https://api.github.com/users/chrysn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chrysn/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 180339608,
                "node_id": "MDU6TGFiZWwxODAzMzk2MDg=",
                "url": "https://api.github.com/repos/chrysn/aiocoap/labels/blockwise",
                "name": "blockwise",
                "color": "e11d21",
                "default": false,
                "description": null
            },
            {
                "id": 180339593,
                "node_id": "MDU6TGFiZWwxODAzMzk1OTM=",
                "url": "https://api.github.com/repos/chrysn/aiocoap/labels/observation",
                "name": "observation",
                "color": "bfe5bf",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "chrysn",
            "id": 442326,
            "node_id": "MDQ6VXNlcjQ0MjMyNg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/442326?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chrysn",
            "html_url": "https://github.com/chrysn",
            "followers_url": "https://api.github.com/users/chrysn/followers",
            "following_url": "https://api.github.com/users/chrysn/following{/other_user}",
            "gists_url": "https://api.github.com/users/chrysn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chrysn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chrysn/subscriptions",
            "organizations_url": "https://api.github.com/users/chrysn/orgs",
            "repos_url": "https://api.github.com/users/chrysn/repos",
            "events_url": "https://api.github.com/users/chrysn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chrysn/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "chrysn",
                "id": 442326,
                "node_id": "MDQ6VXNlcjQ0MjMyNg==",
                "avatar_url": "https://avatars.githubusercontent.com/u/442326?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/chrysn",
                "html_url": "https://github.com/chrysn",
                "followers_url": "https://api.github.com/users/chrysn/followers",
                "following_url": "https://api.github.com/users/chrysn/following{/other_user}",
                "gists_url": "https://api.github.com/users/chrysn/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/chrysn/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/chrysn/subscriptions",
                "organizations_url": "https://api.github.com/users/chrysn/orgs",
                "repos_url": "https://api.github.com/users/chrysn/repos",
                "events_url": "https://api.github.com/users/chrysn/events{/privacy}",
                "received_events_url": "https://api.github.com/users/chrysn/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-11-06T14:49:25Z",
        "updated_at": "2019-11-06T14:49:36Z",
        "closed_at": null,
        "author_association": "OWNER",
        "active_lock_reason": null,
        "body": "At least when no block size is negotiated, notifications produce updates exceeding the default datagram size, possibly getting lost in transmission.\r\n\r\nSteps to reproduce:\r\n* Sniff on loopback interface\r\n* Make the time resource of the demo server output something large\r\n* aiocoap-client observe coap://localhost/time\r\n\r\nThe network dumps show that while the first requests are properly block-wised, the notifications arrive in a single overly large coap message.",
        "performed_via_github_app": null
    }
]