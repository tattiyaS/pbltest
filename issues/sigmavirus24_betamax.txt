[
    {
        "url": "https://api.github.com/repos/betamaxpy/betamax/issues/188",
        "repository_url": "https://api.github.com/repos/betamaxpy/betamax",
        "labels_url": "https://api.github.com/repos/betamaxpy/betamax/issues/188/labels{/name}",
        "comments_url": "https://api.github.com/repos/betamaxpy/betamax/issues/188/comments",
        "events_url": "https://api.github.com/repos/betamaxpy/betamax/issues/188/events",
        "html_url": "https://github.com/betamaxpy/betamax/pull/188",
        "id": 674710364,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDY0MzUzMDQw",
        "number": 188,
        "title": "Tiny fix to example code",
        "user": {
            "login": "marksomething",
            "id": 3917974,
            "node_id": "MDQ6VXNlcjM5MTc5NzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3917974?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/marksomething",
            "html_url": "https://github.com/marksomething",
            "followers_url": "https://api.github.com/users/marksomething/followers",
            "following_url": "https://api.github.com/users/marksomething/following{/other_user}",
            "gists_url": "https://api.github.com/users/marksomething/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/marksomething/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/marksomething/subscriptions",
            "organizations_url": "https://api.github.com/users/marksomething/orgs",
            "repos_url": "https://api.github.com/users/marksomething/repos",
            "events_url": "https://api.github.com/users/marksomething/events{/privacy}",
            "received_events_url": "https://api.github.com/users/marksomething/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-08-07T02:26:11Z",
        "updated_at": "2020-09-03T11:04:23Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "pull_request": {
            "url": "https://api.github.com/repos/betamaxpy/betamax/pulls/188",
            "html_url": "https://github.com/betamaxpy/betamax/pull/188",
            "diff_url": "https://github.com/betamaxpy/betamax/pull/188.diff",
            "patch_url": "https://github.com/betamaxpy/betamax/pull/188.patch"
        },
        "body": "",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/betamaxpy/betamax/issues/187",
        "repository_url": "https://api.github.com/repos/betamaxpy/betamax",
        "labels_url": "https://api.github.com/repos/betamaxpy/betamax/issues/187/labels{/name}",
        "comments_url": "https://api.github.com/repos/betamaxpy/betamax/issues/187/comments",
        "events_url": "https://api.github.com/repos/betamaxpy/betamax/issues/187/events",
        "html_url": "https://github.com/betamaxpy/betamax/issues/187",
        "id": 648922851,
        "node_id": "MDU6SXNzdWU2NDg5MjI4NTE=",
        "number": 187,
        "title": "Large cassettes cause memory errors",
        "user": {
            "login": "kratsg",
            "id": 761483,
            "node_id": "MDQ6VXNlcjc2MTQ4Mw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/761483?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kratsg",
            "html_url": "https://github.com/kratsg",
            "followers_url": "https://api.github.com/users/kratsg/followers",
            "following_url": "https://api.github.com/users/kratsg/following{/other_user}",
            "gists_url": "https://api.github.com/users/kratsg/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kratsg/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kratsg/subscriptions",
            "organizations_url": "https://api.github.com/users/kratsg/orgs",
            "repos_url": "https://api.github.com/users/kratsg/repos",
            "events_url": "https://api.github.com/users/kratsg/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kratsg/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2020-07-01T11:55:33Z",
        "updated_at": "2020-07-01T14:42:54Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "```\r\n _____________________________ test_get_image_model _____________________________\r\n auth_client = <itkdb.client.Client object at 0x7fc9cba70970>\r\n tmpdir = local('/tmp/pytest-of-root/pytest-0/test_get_image_model0')\r\n     def test_get_image_model(auth_client, tmpdir):\r\n         with betamax.Betamax(\r\n             auth_client, cassette_library_dir=itkdb.settings.ITKDB_CASSETTE_LIBRARY_DIR\r\n         ) as recorder:\r\n             recorder.use_cassette('test_images.test_get_image', record='none')\r\n             image = auth_client.get(\r\n                 'uu-app-binarystore/getBinaryData',\r\n                 json={\r\n                     'code': 'bc2eccc58366655352582970d3f81bf46f15a48cf0cb98d74e21463f1dc4dcb9'\r\n                 },\r\n             )\r\n             assert isinstance(image, itkdb.models.Image)\r\n             assert image.filename == 'PB6.CR2'\r\n             assert image.format == 'cr2'\r\n             temp = tmpdir.join(\"saved_image.cr2\")\r\n             nbytes = image.save(filename=temp.strpath)\r\n >           assert nbytes == 64603006\r\n tests/integration/test_image.py:34: \r\n _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n /usr/local/lib/python3.8/site-packages/betamax/recorder.py:72: in __exit__\r\n     self.stop()\r\n /usr/local/lib/python3.8/site-packages/betamax/recorder.py:131: in stop\r\n     self.betamax_adapter.eject_cassette()\r\n /usr/local/lib/python3.8/site-packages/betamax/adapter.py:50: in eject_cassette\r\n     self.cassette.eject()\r\n /usr/local/lib/python3.8/site-packages/betamax/cassette/cassette.py:110: in eject\r\n     self._save_cassette()\r\n /usr/local/lib/python3.8/site-packages/betamax/cassette/cassette.py:205: in _save_cassette\r\n     self.sanitize_interactions()\r\n /usr/local/lib/python3.8/site-packages/betamax/cassette/cassette.py:179: in sanitize_interactions\r\n     i.replace_all(self.placeholders, True)\r\n /usr/local/lib/python3.8/site-packages/betamax/cassette/interaction.py:69: in replace_all\r\n     self.replace(*placeholder.unpack(serializing))\r\n /usr/local/lib/python3.8/site-packages/betamax/cassette/interaction.py:63: in replace\r\n     self.replace_in_body(text_to_replace, placeholder)\r\n _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n self = <betamax.cassette.interaction.Interaction object at 0x7fc9cbc0dee0>\r\n text_to_replace = '', placeholder = '<ACCESSCODE2>'\r\n     def replace_in_body(self, text_to_replace, placeholder):\r\n         for obj in ('request', 'response'):\r\n             body = self.data[obj]['body']\r\n             old_style = hasattr(body, 'replace')\r\n             if not old_style:\r\n                 body = body.get('string', '')\r\n     \r\n             if text_to_replace in body:\r\n >               body = body.replace(text_to_replace, placeholder)\r\n E               MemoryError\r\n /usr/local/lib/python3.8/site-packages/betamax/cassette/interaction.py:89: MemoryError\r\n```\r\n\r\nWhen a previously recorded cassette is very large, trying to replace causes an error. Any ideas how to get around this?",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/betamaxpy/betamax/issues/186",
        "repository_url": "https://api.github.com/repos/betamaxpy/betamax",
        "labels_url": "https://api.github.com/repos/betamaxpy/betamax/issues/186/labels{/name}",
        "comments_url": "https://api.github.com/repos/betamaxpy/betamax/issues/186/comments",
        "events_url": "https://api.github.com/repos/betamaxpy/betamax/issues/186/events",
        "html_url": "https://github.com/betamaxpy/betamax/issues/186",
        "id": 625391700,
        "node_id": "MDU6SXNzdWU2MjUzOTE3MDA=",
        "number": 186,
        "title": "Please make it possible to skip tests requiring Internet access",
        "user": {
            "login": "mgorny",
            "id": 110765,
            "node_id": "MDQ6VXNlcjExMDc2NQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/110765?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mgorny",
            "html_url": "https://github.com/mgorny",
            "followers_url": "https://api.github.com/users/mgorny/followers",
            "following_url": "https://api.github.com/users/mgorny/following{/other_user}",
            "gists_url": "https://api.github.com/users/mgorny/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mgorny/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mgorny/subscriptions",
            "organizations_url": "https://api.github.com/users/mgorny/orgs",
            "repos_url": "https://api.github.com/users/mgorny/repos",
            "events_url": "https://api.github.com/users/mgorny/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mgorny/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-05-27T05:34:00Z",
        "updated_at": "2020-05-27T05:39:39Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "When run in Internet-less environment, a number of tests fail currently. We would find it very helpful if tests requiring Internet access were marked somehow, so that we could cleanly skip them.",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/betamaxpy/betamax/issues/185",
        "repository_url": "https://api.github.com/repos/betamaxpy/betamax",
        "labels_url": "https://api.github.com/repos/betamaxpy/betamax/issues/185/labels{/name}",
        "comments_url": "https://api.github.com/repos/betamaxpy/betamax/issues/185/comments",
        "events_url": "https://api.github.com/repos/betamaxpy/betamax/issues/185/events",
        "html_url": "https://github.com/betamaxpy/betamax/issues/185",
        "id": 619604469,
        "node_id": "MDU6SXNzdWU2MTk2MDQ0Njk=",
        "number": 185,
        "title": "DeprecationWarning in decorators docstring",
        "user": {
            "login": "jayvdb",
            "id": 15092,
            "node_id": "MDQ6VXNlcjE1MDky",
            "avatar_url": "https://avatars.githubusercontent.com/u/15092?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jayvdb",
            "html_url": "https://github.com/jayvdb",
            "followers_url": "https://api.github.com/users/jayvdb/followers",
            "following_url": "https://api.github.com/users/jayvdb/following{/other_user}",
            "gists_url": "https://api.github.com/users/jayvdb/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jayvdb/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jayvdb/subscriptions",
            "organizations_url": "https://api.github.com/users/jayvdb/orgs",
            "repos_url": "https://api.github.com/users/jayvdb/repos",
            "events_url": "https://api.github.com/users/jayvdb/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jayvdb/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-05-17T04:09:13Z",
        "updated_at": "2020-05-17T07:29:56Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "```\r\n/usr/lib/python3.8/site-packages/betamax/decorator.py:11: DeprecationWarning:\r\n\r\ninvalid escape sequence \\*\r\n```\r\n\r\nSeems to be triggered by\r\n\r\n`:param \\*\\*use_cassette_kwargs:`\r\n\r\nThe docstring could be changed to be r'..', but does that then break Sphinx?",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/betamaxpy/betamax/issues/184",
        "repository_url": "https://api.github.com/repos/betamaxpy/betamax",
        "labels_url": "https://api.github.com/repos/betamaxpy/betamax/issues/184/labels{/name}",
        "comments_url": "https://api.github.com/repos/betamaxpy/betamax/issues/184/comments",
        "events_url": "https://api.github.com/repos/betamaxpy/betamax/issues/184/events",
        "html_url": "https://github.com/betamaxpy/betamax/issues/184",
        "id": 598296312,
        "node_id": "MDU6SXNzdWU1OTgyOTYzMTI=",
        "number": 184,
        "title": "test_replays_response_from_cassette fails because of X-Amzn-Trace-Id",
        "user": {
            "login": "FelixSchwarz",
            "id": 212753,
            "node_id": "MDQ6VXNlcjIxMjc1Mw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/212753?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/FelixSchwarz",
            "html_url": "https://github.com/FelixSchwarz",
            "followers_url": "https://api.github.com/users/FelixSchwarz/followers",
            "following_url": "https://api.github.com/users/FelixSchwarz/following{/other_user}",
            "gists_url": "https://api.github.com/users/FelixSchwarz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/FelixSchwarz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/FelixSchwarz/subscriptions",
            "organizations_url": "https://api.github.com/users/FelixSchwarz/orgs",
            "repos_url": "https://api.github.com/users/FelixSchwarz/repos",
            "events_url": "https://api.github.com/users/FelixSchwarz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/FelixSchwarz/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-04-11T15:59:25Z",
        "updated_at": "2020-04-12T15:22:11Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "    $ pytest tests/integration/test_record_modes.py\r\n    .F......                                                                [100%]\r\n    ================================== FAILURES ===================================\r\n    _____________ TestRecordOnce.test_replays_response_from_cassette ______________\r\n\r\n                assert r0_headers == r1_headers\r\n    >           assert r0.content == r1.content\r\n    E           assert b'{\\n  \"args\"...org/get\"\\n}\\n' == b'{\\n  \"args\"...org/get\"\\n}\\n'\r\n    E             At index 208 diff: b'd' != b'e'\r\n    E             Full diff:\r\n    E               (\r\n    E                b'{\\n  \"args\": {}, \\n  \"headers\": {\\n    \"Accept\": \"*/*\", \\n    \"Accept-Encodi'\r\n    E                b'ng\": \"gzip, deflate\", \\n    \"Host\": \"httpbin.org\", \\n    \"User-Agent\": \"py'\r\n    E             -  b'thon-requests/2.23.0\", \\n    \"X-Amzn-Trace-Id\": \"Root=1-5e91e8b3-e94687be'\r\n    E             ?                                                                     ^^^^ ^^^...\r\n    E             \r\n    E             ...Full output truncated (9 lines hidden), use '-vv' to show\r\n\r\n    tests/integration/test_record_modes.py:43: AssertionError\r\n\r\nThe test code already removes some headers which may differ between requests but the difference shown above is in r1.content and I don't know what the best way is to ignore `X-Amzn-Trace-Id` there.\r\n\r\nIt seems as if httpbin.org uses Amazon's Elastic Load Balancing which adds a unique `X-Amzn-Trace-Id` header. That header is different for each request.",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/betamaxpy/betamax/issues/183",
        "repository_url": "https://api.github.com/repos/betamaxpy/betamax",
        "labels_url": "https://api.github.com/repos/betamaxpy/betamax/issues/183/labels{/name}",
        "comments_url": "https://api.github.com/repos/betamaxpy/betamax/issues/183/comments",
        "events_url": "https://api.github.com/repos/betamaxpy/betamax/issues/183/events",
        "html_url": "https://github.com/betamaxpy/betamax/issues/183",
        "id": 577444011,
        "node_id": "MDU6SXNzdWU1Nzc0NDQwMTE=",
        "number": 183,
        "title": "TypeError: unhashable type: 'list'",
        "user": {
            "login": "demospace",
            "id": 39886696,
            "node_id": "MDQ6VXNlcjM5ODg2Njk2",
            "avatar_url": "https://avatars.githubusercontent.com/u/39886696?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/demospace",
            "html_url": "https://github.com/demospace",
            "followers_url": "https://api.github.com/users/demospace/followers",
            "following_url": "https://api.github.com/users/demospace/following{/other_user}",
            "gists_url": "https://api.github.com/users/demospace/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/demospace/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/demospace/subscriptions",
            "organizations_url": "https://api.github.com/users/demospace/orgs",
            "repos_url": "https://api.github.com/users/demospace/repos",
            "events_url": "https://api.github.com/users/demospace/events{/privacy}",
            "received_events_url": "https://api.github.com/users/demospace/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2020-03-08T04:37:11Z",
        "updated_at": "2020-03-09T15:29:18Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "https://github.com/betamaxpy/betamax/blob/77e61d785114a261570ff0cbf7f9834e8e4f96ff/src/betamax/adapter.py#L99\r\n\r\nWhen I use a default cassette configuration with a modified match_on (running via pytest), I get an unhashable type at the line referenced above.\r\n\r\nIt looks to me like it's trying to update a dict from a list? Per the comment, I tried changing \r\n\r\n`config.default_cassette_options['match_requests_on'] = ['method', 'uri', 'jsonbody'],`\r\nto\r\n`config.default_cassette_options['match_requests_on'] = set(['method', 'uri', 'jsonbody']),`\r\n\r\nwith no effect.",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/betamaxpy/betamax/issues/182",
        "repository_url": "https://api.github.com/repos/betamaxpy/betamax",
        "labels_url": "https://api.github.com/repos/betamaxpy/betamax/issues/182/labels{/name}",
        "comments_url": "https://api.github.com/repos/betamaxpy/betamax/issues/182/comments",
        "events_url": "https://api.github.com/repos/betamaxpy/betamax/issues/182/events",
        "html_url": "https://github.com/betamaxpy/betamax/pull/182",
        "id": 570814672,
        "node_id": "MDExOlB1bGxSZXF1ZXN0Mzc5Nzg2MTI3",
        "number": 182,
        "title": "Fix minor typo in api.rst",
        "user": {
            "login": "ilyakamens",
            "id": 3293811,
            "node_id": "MDQ6VXNlcjMyOTM4MTE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3293811?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ilyakamens",
            "html_url": "https://github.com/ilyakamens",
            "followers_url": "https://api.github.com/users/ilyakamens/followers",
            "following_url": "https://api.github.com/users/ilyakamens/following{/other_user}",
            "gists_url": "https://api.github.com/users/ilyakamens/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ilyakamens/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ilyakamens/subscriptions",
            "organizations_url": "https://api.github.com/users/ilyakamens/orgs",
            "repos_url": "https://api.github.com/users/ilyakamens/repos",
            "events_url": "https://api.github.com/users/ilyakamens/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ilyakamens/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-02-25T20:32:52Z",
        "updated_at": "2020-02-25T20:32:52Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "pull_request": {
            "url": "https://api.github.com/repos/betamaxpy/betamax/pulls/182",
            "html_url": "https://github.com/betamaxpy/betamax/pull/182",
            "diff_url": "https://github.com/betamaxpy/betamax/pull/182.diff",
            "patch_url": "https://github.com/betamaxpy/betamax/pull/182.patch"
        },
        "body": "",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/betamaxpy/betamax/issues/176",
        "repository_url": "https://api.github.com/repos/betamaxpy/betamax",
        "labels_url": "https://api.github.com/repos/betamaxpy/betamax/issues/176/labels{/name}",
        "comments_url": "https://api.github.com/repos/betamaxpy/betamax/issues/176/comments",
        "events_url": "https://api.github.com/repos/betamaxpy/betamax/issues/176/events",
        "html_url": "https://github.com/betamaxpy/betamax/pull/176",
        "id": 523764377,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzQxNzAzODQz",
        "number": 176,
        "title": "Minor doc fixes",
        "user": {
            "login": "tomkins",
            "id": 177332,
            "node_id": "MDQ6VXNlcjE3NzMzMg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/177332?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tomkins",
            "html_url": "https://github.com/tomkins",
            "followers_url": "https://api.github.com/users/tomkins/followers",
            "following_url": "https://api.github.com/users/tomkins/following{/other_user}",
            "gists_url": "https://api.github.com/users/tomkins/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tomkins/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tomkins/subscriptions",
            "organizations_url": "https://api.github.com/users/tomkins/orgs",
            "repos_url": "https://api.github.com/users/tomkins/repos",
            "events_url": "https://api.github.com/users/tomkins/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tomkins/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-11-16T00:58:42Z",
        "updated_at": "2020-10-02T13:00:14Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "pull_request": {
            "url": "https://api.github.com/repos/betamaxpy/betamax/pulls/176",
            "html_url": "https://github.com/betamaxpy/betamax/pull/176",
            "diff_url": "https://github.com/betamaxpy/betamax/pull/176.diff",
            "patch_url": "https://github.com/betamaxpy/betamax/pull/176.patch"
        },
        "body": "Old requests autodoc URL currently redirects to https://2.python-requests.org//en/latest - which isn't configured correctly for SSL. https://github.com/psf/requests/pull/5236 changed the official documentation URL also.\r\n\r\nAnd the decorators.py tweak fixes:\r\n\r\n```\r\n<unknown>:35: DeprecationWarning: invalid escape sequence \\*\r\n```\r\n\r\nWhich is deprecated as of Python 3.6: https://docs.python.org/3/whatsnew/3.6.html#deprecated-python-behavior",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/betamaxpy/betamax/issues/175",
        "repository_url": "https://api.github.com/repos/betamaxpy/betamax",
        "labels_url": "https://api.github.com/repos/betamaxpy/betamax/issues/175/labels{/name}",
        "comments_url": "https://api.github.com/repos/betamaxpy/betamax/issues/175/comments",
        "events_url": "https://api.github.com/repos/betamaxpy/betamax/issues/175/events",
        "html_url": "https://github.com/betamaxpy/betamax/issues/175",
        "id": 491540259,
        "node_id": "MDU6SXNzdWU0OTE1NDAyNTk=",
        "number": 175,
        "title": "Make _cassette_name a part of API",
        "user": {
            "login": "jirikuncar",
            "id": 189798,
            "node_id": "MDQ6VXNlcjE4OTc5OA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/189798?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jirikuncar",
            "html_url": "https://github.com/jirikuncar",
            "followers_url": "https://api.github.com/users/jirikuncar/followers",
            "following_url": "https://api.github.com/users/jirikuncar/following{/other_user}",
            "gists_url": "https://api.github.com/users/jirikuncar/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jirikuncar/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jirikuncar/subscriptions",
            "organizations_url": "https://api.github.com/users/jirikuncar/orgs",
            "repos_url": "https://api.github.com/users/jirikuncar/repos",
            "events_url": "https://api.github.com/users/jirikuncar/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jirikuncar/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2019-09-10T08:56:51Z",
        "updated_at": "2019-11-19T11:56:25Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "Rename `_ca(s)sette_name` helper function to `cassette_name` to be a part of the API.",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/betamaxpy/betamax/issues/168",
        "repository_url": "https://api.github.com/repos/betamaxpy/betamax",
        "labels_url": "https://api.github.com/repos/betamaxpy/betamax/issues/168/labels{/name}",
        "comments_url": "https://api.github.com/repos/betamaxpy/betamax/issues/168/comments",
        "events_url": "https://api.github.com/repos/betamaxpy/betamax/issues/168/events",
        "html_url": "https://github.com/betamaxpy/betamax/issues/168",
        "id": 449011998,
        "node_id": "MDU6SXNzdWU0NDkwMTE5OTg=",
        "number": 168,
        "title": "Excluding recorded_at",
        "user": {
            "login": "aiguofer",
            "id": 780934,
            "node_id": "MDQ6VXNlcjc4MDkzNA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/780934?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aiguofer",
            "html_url": "https://github.com/aiguofer",
            "followers_url": "https://api.github.com/users/aiguofer/followers",
            "following_url": "https://api.github.com/users/aiguofer/following{/other_user}",
            "gists_url": "https://api.github.com/users/aiguofer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aiguofer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aiguofer/subscriptions",
            "organizations_url": "https://api.github.com/users/aiguofer/orgs",
            "repos_url": "https://api.github.com/users/aiguofer/repos",
            "events_url": "https://api.github.com/users/aiguofer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aiguofer/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-05-27T23:37:01Z",
        "updated_at": "2019-05-27T23:37:01Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Since cassettes tend to get checked in to VC, it would make sense to have an option to remove the `recorded_at` key from each interaction. This would make the diffs smaller when tests are re-recorded.\r\n\r\nLooking at the code, the only reference I can see for this property is in `Cassette.earliest_recorded_date`, which seems to be used to determine whether a cassette needs to be re-recorded. Would it make sense to just add a timestamp indicating the beginning of the recording to the cassette itself?\r\n\r\n",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/betamaxpy/betamax/issues/164",
        "repository_url": "https://api.github.com/repos/betamaxpy/betamax",
        "labels_url": "https://api.github.com/repos/betamaxpy/betamax/issues/164/labels{/name}",
        "comments_url": "https://api.github.com/repos/betamaxpy/betamax/issues/164/comments",
        "events_url": "https://api.github.com/repos/betamaxpy/betamax/issues/164/events",
        "html_url": "https://github.com/betamaxpy/betamax/issues/164",
        "id": 380604633,
        "node_id": "MDU6SXNzdWUzODA2MDQ2MzM=",
        "number": 164,
        "title": "No obvious way to react to parametrized fixtures deprecation warning",
        "user": {
            "login": "khardix",
            "id": 2243379,
            "node_id": "MDQ6VXNlcjIyNDMzNzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2243379?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/khardix",
            "html_url": "https://github.com/khardix",
            "followers_url": "https://api.github.com/users/khardix/followers",
            "following_url": "https://api.github.com/users/khardix/following{/other_user}",
            "gists_url": "https://api.github.com/users/khardix/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/khardix/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/khardix/subscriptions",
            "organizations_url": "https://api.github.com/users/khardix/orgs",
            "repos_url": "https://api.github.com/users/khardix/repos",
            "events_url": "https://api.github.com/users/khardix/events{/privacy}",
            "received_events_url": "https://api.github.com/users/khardix/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2018-11-14T09:21:22Z",
        "updated_at": "2018-11-14T12:53:27Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Each time I use the `betamax_parametrized_session` fixture, I'm getting a DeprecationWarning about their behaviour becoming default in 1.0. However, there is no straightforward way to react to those warnings -- switching to the `betamax_session` breaks the parametrization support (and gives me another warning about it).\r\n\r\nMy current workaround involves filtering these warnings to not clutter my test outputs. If this is the \"correct\" way to handle those, I think it should at least be documented as such (and I volunteer for writing that piece). Otherwise, there should be (ideally future-proof) way of getting parametrized fixtures without warning.\r\n\r\nOne suggestion I can think of is getting rid of the warning for now, until 1.0 comes. At that point, make the switch of `betamax_session` to parametrized, and provide `betamax_parametrized_session` as deprecated alias (in other words, add a reworded warning back). Apply the same process to `*_recorder`. In further future version (2.0? 1.x?), drop the aliases.",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/betamaxpy/betamax/issues/148",
        "repository_url": "https://api.github.com/repos/betamaxpy/betamax",
        "labels_url": "https://api.github.com/repos/betamaxpy/betamax/issues/148/labels{/name}",
        "comments_url": "https://api.github.com/repos/betamaxpy/betamax/issues/148/comments",
        "events_url": "https://api.github.com/repos/betamaxpy/betamax/issues/148/events",
        "html_url": "https://github.com/betamaxpy/betamax/issues/148",
        "id": 266827910,
        "node_id": "MDU6SXNzdWUyNjY4Mjc5MTA=",
        "number": 148,
        "title": "Collaboration Guidelines",
        "user": {
            "login": "sigmavirus24",
            "id": 240830,
            "node_id": "MDQ6VXNlcjI0MDgzMA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/240830?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sigmavirus24",
            "html_url": "https://github.com/sigmavirus24",
            "followers_url": "https://api.github.com/users/sigmavirus24/followers",
            "following_url": "https://api.github.com/users/sigmavirus24/following{/other_user}",
            "gists_url": "https://api.github.com/users/sigmavirus24/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sigmavirus24/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sigmavirus24/subscriptions",
            "organizations_url": "https://api.github.com/users/sigmavirus24/orgs",
            "repos_url": "https://api.github.com/users/sigmavirus24/repos",
            "events_url": "https://api.github.com/users/sigmavirus24/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sigmavirus24/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 725655202,
                "node_id": "MDU6TGFiZWw3MjU2NTUyMDI=",
                "url": "https://api.github.com/repos/betamaxpy/betamax/labels/workflow",
                "name": "workflow",
                "color": "fdffaf",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "sigmavirus24",
            "id": 240830,
            "node_id": "MDQ6VXNlcjI0MDgzMA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/240830?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sigmavirus24",
            "html_url": "https://github.com/sigmavirus24",
            "followers_url": "https://api.github.com/users/sigmavirus24/followers",
            "following_url": "https://api.github.com/users/sigmavirus24/following{/other_user}",
            "gists_url": "https://api.github.com/users/sigmavirus24/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sigmavirus24/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sigmavirus24/subscriptions",
            "organizations_url": "https://api.github.com/users/sigmavirus24/orgs",
            "repos_url": "https://api.github.com/users/sigmavirus24/repos",
            "events_url": "https://api.github.com/users/sigmavirus24/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sigmavirus24/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "sigmavirus24",
                "id": 240830,
                "node_id": "MDQ6VXNlcjI0MDgzMA==",
                "avatar_url": "https://avatars.githubusercontent.com/u/240830?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/sigmavirus24",
                "html_url": "https://github.com/sigmavirus24",
                "followers_url": "https://api.github.com/users/sigmavirus24/followers",
                "following_url": "https://api.github.com/users/sigmavirus24/following{/other_user}",
                "gists_url": "https://api.github.com/users/sigmavirus24/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/sigmavirus24/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/sigmavirus24/subscriptions",
                "organizations_url": "https://api.github.com/users/sigmavirus24/orgs",
                "repos_url": "https://api.github.com/users/sigmavirus24/repos",
                "events_url": "https://api.github.com/users/sigmavirus24/events{/privacy}",
                "received_events_url": "https://api.github.com/users/sigmavirus24/received_events",
                "type": "User",
                "site_admin": false
            },
            {
                "login": "hroncok",
                "id": 2401856,
                "node_id": "MDQ6VXNlcjI0MDE4NTY=",
                "avatar_url": "https://avatars.githubusercontent.com/u/2401856?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/hroncok",
                "html_url": "https://github.com/hroncok",
                "followers_url": "https://api.github.com/users/hroncok/followers",
                "following_url": "https://api.github.com/users/hroncok/following{/other_user}",
                "gists_url": "https://api.github.com/users/hroncok/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/hroncok/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/hroncok/subscriptions",
                "organizations_url": "https://api.github.com/users/hroncok/orgs",
                "repos_url": "https://api.github.com/users/hroncok/repos",
                "events_url": "https://api.github.com/users/hroncok/events{/privacy}",
                "received_events_url": "https://api.github.com/users/hroncok/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 6,
        "created_at": "2017-10-19T12:40:31Z",
        "updated_at": "2017-10-23T12:26:53Z",
        "closed_at": null,
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "Let's chat collaboration guidelines.\r\n\r\nPersonally, I'd like everything to have at least one review from someone before it's merged but at the current time it's not entirely practical to block everything on my review.\r\n\r\nHow can we enable this going forward?\r\n\r\nI think growing the team would be a good way of doing this. So that begs the question, how do we effectively grow the team?",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/betamaxpy/betamax/issues/145",
        "repository_url": "https://api.github.com/repos/betamaxpy/betamax",
        "labels_url": "https://api.github.com/repos/betamaxpy/betamax/issues/145/labels{/name}",
        "comments_url": "https://api.github.com/repos/betamaxpy/betamax/issues/145/comments",
        "events_url": "https://api.github.com/repos/betamaxpy/betamax/issues/145/events",
        "html_url": "https://github.com/betamaxpy/betamax/issues/145",
        "id": 265573976,
        "node_id": "MDU6SXNzdWUyNjU1NzM5NzY=",
        "number": 145,
        "title": "Use pytest-httpbin",
        "user": {
            "login": "sigmavirus24",
            "id": 240830,
            "node_id": "MDQ6VXNlcjI0MDgzMA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/240830?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sigmavirus24",
            "html_url": "https://github.com/sigmavirus24",
            "followers_url": "https://api.github.com/users/sigmavirus24/followers",
            "following_url": "https://api.github.com/users/sigmavirus24/following{/other_user}",
            "gists_url": "https://api.github.com/users/sigmavirus24/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sigmavirus24/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sigmavirus24/subscriptions",
            "organizations_url": "https://api.github.com/users/sigmavirus24/orgs",
            "repos_url": "https://api.github.com/users/sigmavirus24/repos",
            "events_url": "https://api.github.com/users/sigmavirus24/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sigmavirus24/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 47994247,
                "node_id": "MDU6TGFiZWw0Nzk5NDI0Nw==",
                "url": "https://api.github.com/repos/betamaxpy/betamax/labels/Enhancement",
                "name": "Enhancement",
                "color": "84b6eb",
                "default": false,
                "description": null
            },
            {
                "id": 723380855,
                "node_id": "MDU6TGFiZWw3MjMzODA4NTU=",
                "url": "https://api.github.com/repos/betamaxpy/betamax/labels/Tests",
                "name": "Tests",
                "color": "89db41",
                "default": false,
                "description": null
            },
            {
                "id": 720481124,
                "node_id": "MDU6TGFiZWw3MjA0ODExMjQ=",
                "url": "https://api.github.com/repos/betamaxpy/betamax/labels/good%20first%20issue",
                "name": "good first issue",
                "color": "5319e7",
                "default": true,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2017-10-15T13:57:42Z",
        "updated_at": "2017-10-29T12:24:47Z",
        "closed_at": null,
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "Ideally, this will get rid of some of our spurious test failures that occur from relying on httpbin.org and will make the test suite faster as we won't be going over the network, we'll just be using localhost (which is still slow but less slow than actually going over the network).",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/betamaxpy/betamax/issues/137",
        "repository_url": "https://api.github.com/repos/betamaxpy/betamax",
        "labels_url": "https://api.github.com/repos/betamaxpy/betamax/issues/137/labels{/name}",
        "comments_url": "https://api.github.com/repos/betamaxpy/betamax/issues/137/comments",
        "events_url": "https://api.github.com/repos/betamaxpy/betamax/issues/137/events",
        "html_url": "https://github.com/betamaxpy/betamax/issues/137",
        "id": 227112324,
        "node_id": "MDU6SXNzdWUyMjcxMTIzMjQ=",
        "number": 137,
        "title": "Content-Length header leaks original length of placeholder values",
        "user": {
            "login": "smallnamespace",
            "id": 15881001,
            "node_id": "MDQ6VXNlcjE1ODgxMDAx",
            "avatar_url": "https://avatars.githubusercontent.com/u/15881001?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/smallnamespace",
            "html_url": "https://github.com/smallnamespace",
            "followers_url": "https://api.github.com/users/smallnamespace/followers",
            "following_url": "https://api.github.com/users/smallnamespace/following{/other_user}",
            "gists_url": "https://api.github.com/users/smallnamespace/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/smallnamespace/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/smallnamespace/subscriptions",
            "organizations_url": "https://api.github.com/users/smallnamespace/orgs",
            "repos_url": "https://api.github.com/users/smallnamespace/repos",
            "events_url": "https://api.github.com/users/smallnamespace/events{/privacy}",
            "received_events_url": "https://api.github.com/users/smallnamespace/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 733844751,
                "node_id": "MDU6TGFiZWw3MzM4NDQ3NTE=",
                "url": "https://api.github.com/repos/betamaxpy/betamax/labels/Docs",
                "name": "Docs",
                "color": "fcfa94",
                "default": false,
                "description": null
            },
            {
                "id": 720481124,
                "node_id": "MDU6TGFiZWw3MjA0ODExMjQ=",
                "url": "https://api.github.com/repos/betamaxpy/betamax/labels/good%20first%20issue",
                "name": "good first issue",
                "color": "5319e7",
                "default": true,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "smallnamespace",
            "id": 15881001,
            "node_id": "MDQ6VXNlcjE1ODgxMDAx",
            "avatar_url": "https://avatars.githubusercontent.com/u/15881001?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/smallnamespace",
            "html_url": "https://github.com/smallnamespace",
            "followers_url": "https://api.github.com/users/smallnamespace/followers",
            "following_url": "https://api.github.com/users/smallnamespace/following{/other_user}",
            "gists_url": "https://api.github.com/users/smallnamespace/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/smallnamespace/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/smallnamespace/subscriptions",
            "organizations_url": "https://api.github.com/users/smallnamespace/orgs",
            "repos_url": "https://api.github.com/users/smallnamespace/repos",
            "events_url": "https://api.github.com/users/smallnamespace/events{/privacy}",
            "received_events_url": "https://api.github.com/users/smallnamespace/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "smallnamespace",
                "id": 15881001,
                "node_id": "MDQ6VXNlcjE1ODgxMDAx",
                "avatar_url": "https://avatars.githubusercontent.com/u/15881001?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/smallnamespace",
                "html_url": "https://github.com/smallnamespace",
                "followers_url": "https://api.github.com/users/smallnamespace/followers",
                "following_url": "https://api.github.com/users/smallnamespace/following{/other_user}",
                "gists_url": "https://api.github.com/users/smallnamespace/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/smallnamespace/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/smallnamespace/subscriptions",
                "organizations_url": "https://api.github.com/users/smallnamespace/orgs",
                "repos_url": "https://api.github.com/users/smallnamespace/repos",
                "events_url": "https://api.github.com/users/smallnamespace/events{/privacy}",
                "received_events_url": "https://api.github.com/users/smallnamespace/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 5,
        "created_at": "2017-05-08T17:10:50Z",
        "updated_at": "2017-11-25T14:43:28Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Since we record all the headers, even when we replace sensitive tokens with their placeholders, the original total length of all tokens is preserved.\r\n\r\nA few possible options:\r\n\r\n1. Fake the content-length by incrementing by `placeholder length - original length` when using placeholders bidirectionally\r\n2. Simply drop `Content-Length` when placeholders are used?\r\n3. Keep current behavior but note the risk in the docs\r\n\r\n\r\n<bountysource-plugin>\r\n\r\n---\r\nWant to back this issue? **[Post a bounty on it!](https://www.bountysource.com/issues/44967906-content-length-header-leaks-original-length-of-placeholder-values?utm_campaign=plugin&utm_content=tracker%2F198445&utm_medium=issues&utm_source=github)** We accept bounties via [Bountysource](https://www.bountysource.com/?utm_campaign=plugin&utm_content=tracker%2F198445&utm_medium=issues&utm_source=github).\r\n</bountysource-plugin>",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/betamaxpy/betamax/issues/131",
        "repository_url": "https://api.github.com/repos/betamaxpy/betamax",
        "labels_url": "https://api.github.com/repos/betamaxpy/betamax/issues/131/labels{/name}",
        "comments_url": "https://api.github.com/repos/betamaxpy/betamax/issues/131/comments",
        "events_url": "https://api.github.com/repos/betamaxpy/betamax/issues/131/events",
        "html_url": "https://github.com/betamaxpy/betamax/issues/131",
        "id": 204412216,
        "node_id": "MDU6SXNzdWUyMDQ0MTIyMTY=",
        "number": 131,
        "title": "Issue with betamax not recording requests within unconsumed generators",
        "user": {
            "login": "guyzmo",
            "id": 254441,
            "node_id": "MDQ6VXNlcjI1NDQ0MQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/254441?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/guyzmo",
            "html_url": "https://github.com/guyzmo",
            "followers_url": "https://api.github.com/users/guyzmo/followers",
            "following_url": "https://api.github.com/users/guyzmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/guyzmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/guyzmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/guyzmo/subscriptions",
            "organizations_url": "https://api.github.com/users/guyzmo/orgs",
            "repos_url": "https://api.github.com/users/guyzmo/repos",
            "events_url": "https://api.github.com/users/guyzmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/guyzmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 733844751,
                "node_id": "MDU6TGFiZWw3MzM4NDQ3NTE=",
                "url": "https://api.github.com/repos/betamaxpy/betamax/labels/Docs",
                "name": "Docs",
                "color": "fcfa94",
                "default": false,
                "description": null
            },
            {
                "id": 47994247,
                "node_id": "MDU6TGFiZWw0Nzk5NDI0Nw==",
                "url": "https://api.github.com/repos/betamaxpy/betamax/labels/Enhancement",
                "name": "Enhancement",
                "color": "84b6eb",
                "default": false,
                "description": null
            },
            {
                "id": 720481124,
                "node_id": "MDU6TGFiZWw3MjA0ODExMjQ=",
                "url": "https://api.github.com/repos/betamaxpy/betamax/labels/good%20first%20issue",
                "name": "good first issue",
                "color": "5319e7",
                "default": true,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "guyzmo",
            "id": 254441,
            "node_id": "MDQ6VXNlcjI1NDQ0MQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/254441?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/guyzmo",
            "html_url": "https://github.com/guyzmo",
            "followers_url": "https://api.github.com/users/guyzmo/followers",
            "following_url": "https://api.github.com/users/guyzmo/following{/other_user}",
            "gists_url": "https://api.github.com/users/guyzmo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/guyzmo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/guyzmo/subscriptions",
            "organizations_url": "https://api.github.com/users/guyzmo/orgs",
            "repos_url": "https://api.github.com/users/guyzmo/repos",
            "events_url": "https://api.github.com/users/guyzmo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/guyzmo/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "guyzmo",
                "id": 254441,
                "node_id": "MDQ6VXNlcjI1NDQ0MQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/254441?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/guyzmo",
                "html_url": "https://github.com/guyzmo",
                "followers_url": "https://api.github.com/users/guyzmo/followers",
                "following_url": "https://api.github.com/users/guyzmo/following{/other_user}",
                "gists_url": "https://api.github.com/users/guyzmo/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/guyzmo/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/guyzmo/subscriptions",
                "organizations_url": "https://api.github.com/users/guyzmo/orgs",
                "repos_url": "https://api.github.com/users/guyzmo/repos",
                "events_url": "https://api.github.com/users/guyzmo/events{/privacy}",
                "received_events_url": "https://api.github.com/users/guyzmo/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 6,
        "created_at": "2017-01-31T20:18:26Z",
        "updated_at": "2017-10-30T12:59:29Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "cf sigmavirus24/github3.py#679\r\n\r\n## tl;dr\r\n\r\nI have setup tests with helpers such as:\r\n\r\n``` python\r\nclass TestTheThing:\r\n    def helper_method(self, arg1, arg2, arg3):\r\n        with self.recorder.use_cassette(\"cassette_name\"):\r\n            thing_to_test = self.thing_containing_what_to_test(arg1)\r\n            return self.thing_to_test.iter_items(arg2, arg3)\r\n\r\n    def test_with_some_options(self):\r\n        contents = self.helper_method(\"a\", \"b\", \"c\")\r\n        assert list(contents) == ['foobar']\r\n```\r\n\r\nin the example above, I'm returning a generator from the helper method. So when in the test I'm transforming it into a list, the iterator runs the generator **AFTER** the `with statement` has been exited.\r\n\r\nThe fix is simply to run the generator *within* the `with` block context.\r\n\r\n## possible actions\r\n\r\n* keep it as is for future readers\r\n* make it as part of a \"stupid mistake\" FAQ?\r\n* add some parameter to betamax to help debug that class of mistakes faster\r\n\r\n<bountysource-plugin>\r\n---\r\nWant to back this issue? **[Post a bounty on it!](https://www.bountysource.com/issues/41524048-issue-with-betamax-not-recording-requests-within-unconsumed-generators?utm_campaign=plugin&utm_content=tracker%2F198445&utm_medium=issues&utm_source=github)** We accept bounties via [Bountysource](https://www.bountysource.com/?utm_campaign=plugin&utm_content=tracker%2F198445&utm_medium=issues&utm_source=github).\r\n</bountysource-plugin>",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/betamaxpy/betamax/issues/125",
        "repository_url": "https://api.github.com/repos/betamaxpy/betamax",
        "labels_url": "https://api.github.com/repos/betamaxpy/betamax/issues/125/labels{/name}",
        "comments_url": "https://api.github.com/repos/betamaxpy/betamax/issues/125/comments",
        "events_url": "https://api.github.com/repos/betamaxpy/betamax/issues/125/events",
        "html_url": "https://github.com/betamaxpy/betamax/issues/125",
        "id": 191830111,
        "node_id": "MDU6SXNzdWUxOTE4MzAxMTE=",
        "number": 125,
        "title": "Why should we use this instead of VCR?",
        "user": {
            "login": "mlissner",
            "id": 236970,
            "node_id": "MDQ6VXNlcjIzNjk3MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/236970?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mlissner",
            "html_url": "https://github.com/mlissner",
            "followers_url": "https://api.github.com/users/mlissner/followers",
            "following_url": "https://api.github.com/users/mlissner/following{/other_user}",
            "gists_url": "https://api.github.com/users/mlissner/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mlissner/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mlissner/subscriptions",
            "organizations_url": "https://api.github.com/users/mlissner/orgs",
            "repos_url": "https://api.github.com/users/mlissner/repos",
            "events_url": "https://api.github.com/users/mlissner/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mlissner/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 733844751,
                "node_id": "MDU6TGFiZWw3MzM4NDQ3NTE=",
                "url": "https://api.github.com/repos/betamaxpy/betamax/labels/Docs",
                "name": "Docs",
                "color": "fcfa94",
                "default": false,
                "description": null
            },
            {
                "id": 47994247,
                "node_id": "MDU6TGFiZWw0Nzk5NDI0Nw==",
                "url": "https://api.github.com/repos/betamaxpy/betamax/labels/Enhancement",
                "name": "Enhancement",
                "color": "84b6eb",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 9,
        "created_at": "2016-11-26T22:27:09Z",
        "updated_at": "2017-10-28T19:04:27Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I'm evaluating VCR and was ready to use it when I discovered this library. I read the readme, and some of the documentation, but I haven't found any explanation of why I would choose this over VCR. \r\n\r\nThe closest thing I've found is that this is VCR for python requests. But...VCR supports requests...so...where does that leave me? \r\n\r\nCan this be clarified and added to the documentation? \r\n\r\n<bountysource-plugin>\r\n---\r\nWant to back this issue? **[Post a bounty on it!](https://www.bountysource.com/issues/39549676-why-should-we-use-this-instead-of-vcr?utm_campaign=plugin&utm_content=tracker%2F198445&utm_medium=issues&utm_source=github)** We accept bounties via [Bountysource](https://www.bountysource.com/?utm_campaign=plugin&utm_content=tracker%2F198445&utm_medium=issues&utm_source=github).\r\n</bountysource-plugin>",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/betamaxpy/betamax/issues/124",
        "repository_url": "https://api.github.com/repos/betamaxpy/betamax",
        "labels_url": "https://api.github.com/repos/betamaxpy/betamax/issues/124/labels{/name}",
        "comments_url": "https://api.github.com/repos/betamaxpy/betamax/issues/124/comments",
        "events_url": "https://api.github.com/repos/betamaxpy/betamax/issues/124/events",
        "html_url": "https://github.com/betamaxpy/betamax/issues/124",
        "id": 186386496,
        "node_id": "MDU6SXNzdWUxODYzODY0OTY=",
        "number": 124,
        "title": "Gzip Content-Encoding workaround",
        "user": {
            "login": "hroncok",
            "id": 2401856,
            "node_id": "MDQ6VXNlcjI0MDE4NTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2401856?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hroncok",
            "html_url": "https://github.com/hroncok",
            "followers_url": "https://api.github.com/users/hroncok/followers",
            "following_url": "https://api.github.com/users/hroncok/following{/other_user}",
            "gists_url": "https://api.github.com/users/hroncok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hroncok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hroncok/subscriptions",
            "organizations_url": "https://api.github.com/users/hroncok/orgs",
            "repos_url": "https://api.github.com/users/hroncok/repos",
            "events_url": "https://api.github.com/users/hroncok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hroncok/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 733844751,
                "node_id": "MDU6TGFiZWw3MzM4NDQ3NTE=",
                "url": "https://api.github.com/repos/betamaxpy/betamax/labels/Docs",
                "name": "Docs",
                "color": "fcfa94",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2016-10-31T20:17:38Z",
        "updated_at": "2017-10-28T18:58:47Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "Hi,\r\n@MarekSuchanek was recently hit by the fact that some content is recorded Gziped and base64 encoded. It is hard to parse the response in a hook to hide sensitive data, if the sensitive data is hidden in a binary blob.\r\n\r\nIn [the docs](https://betamax.readthedocs.io/en/latest/implementation_details.html#gzip-content-encoding), it says:\r\n\r\n> There is, at the present moment, no way to configure this so that this does not happen and because of the way that Betamax works, you can not remove the Content-Encoding header to prevent this from happening.\r\n\r\nHowever (with pytest fixture) simply doing:\r\n\r\n```python\r\nbetemax_session.headers.update({'accept-encoding': 'identity'})\r\n```\r\n\r\nWill bypass the problem.\r\n\r\nI was about to propose a PR to the docs, but I better discuss it first with you before making a patch. The text at the end of the section might go like this:\r\n\r\nYou may, however, modify the request headers to indicate that you don't accept gzipped content:\r\n\r\n```python\r\nsession = requests.Session()\r\nsession.headers.update({'accept-encoding': 'identity'})\r\nrecorder = betamax.Betamax(session, ...)\r\n...\r\n```\r\n\r\nComments?\r\n\r\n<bountysource-plugin>\r\n---\r\nWant to back this issue? **[Post a bounty on it!](https://www.bountysource.com/issues/38829043-gzip-content-encoding-workaround?utm_campaign=plugin&utm_content=tracker%2F198445&utm_medium=issues&utm_source=github)** We accept bounties via [Bountysource](https://www.bountysource.com/?utm_campaign=plugin&utm_content=tracker%2F198445&utm_medium=issues&utm_source=github).\r\n</bountysource-plugin>",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/betamaxpy/betamax/issues/122",
        "repository_url": "https://api.github.com/repos/betamaxpy/betamax",
        "labels_url": "https://api.github.com/repos/betamaxpy/betamax/issues/122/labels{/name}",
        "comments_url": "https://api.github.com/repos/betamaxpy/betamax/issues/122/comments",
        "events_url": "https://api.github.com/repos/betamaxpy/betamax/issues/122/events",
        "html_url": "https://github.com/betamaxpy/betamax/issues/122",
        "id": 180416736,
        "node_id": "MDU6SXNzdWUxODA0MTY3MzY=",
        "number": 122,
        "title": "Discrepancy in original headers and playback headers (bytes vs. strs)",
        "user": {
            "login": "wimglenn",
            "id": 6615374,
            "node_id": "MDQ6VXNlcjY2MTUzNzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6615374?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wimglenn",
            "html_url": "https://github.com/wimglenn",
            "followers_url": "https://api.github.com/users/wimglenn/followers",
            "following_url": "https://api.github.com/users/wimglenn/following{/other_user}",
            "gists_url": "https://api.github.com/users/wimglenn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wimglenn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wimglenn/subscriptions",
            "organizations_url": "https://api.github.com/users/wimglenn/orgs",
            "repos_url": "https://api.github.com/users/wimglenn/repos",
            "events_url": "https://api.github.com/users/wimglenn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wimglenn/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 733843925,
                "node_id": "MDU6TGFiZWw3MzM4NDM5MjU=",
                "url": "https://api.github.com/repos/betamaxpy/betamax/labels/PR%20exists",
                "name": "PR exists",
                "color": "bb80e5",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2016-09-30T22:40:07Z",
        "updated_at": "2018-10-19T17:44:30Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I think there is something whack in the way non-ascii data is handled.  I'm getting discrepancies in the response objects from live server and playback, and this is causing some issues in my app.  I've tried to make a minimal example to reproduce the bug in a script below:\n\n```\n# coding: utf-8\nfrom __future__ import unicode_literals\n\nimport os\n\nimport betamax, requests\n\nheaders = {'Beer': '\ud83c\udf7a'.encode('punycode')}\nurl = 'http://www.example.com/'\nsession = requests.Session()\nrecorder = betamax.Betamax(session, cassette_library_dir='./example')\n\n# I'm assuming subdir ./example exists and is empty at this point\n#os.remove('./example/dump.json')   # <-- uncomment if you don't want to delete it manually\nif os.path.exists('./example/dump.json'):\n    raise Exception('not clean state')\n\nwith recorder.use_cassette('dump'):\n    response1 = session.get(url, headers=headers)\n\nwith recorder.use_cassette('dump'):\n    response2 = session.get(url, headers=headers)\n\nh1 = response1.request.headers['Beer']\nh2 = response2.request.headers['Beer']\n\nif type(h1) != type(h2):\n    print('not ok :(')\n    print('header from recording: {!r}\\nheader from playback: {!r}'.format(h1, h2))\nelse:\n    print('ok :)')\n\n```\n\nIt fails in both python2 and python3, but with different failure modes.  \nIn python2 it fails because the response1 and response2 have mutated.  \nIn python3 it fails earlier, during the recording, whilst attempting to serialise a bytestring - an action which is a `TypeError` in python3 (and this gives a big hint at why the python2 version fails).  \n## \n\r\n\r\n<bountysource-plugin>\r\n---\r\nWant to back this issue? **[Post a bounty on it!](https://www.bountysource.com/issues/38125389-discrepancy-in-original-headers-and-playback-headers?utm_campaign=plugin&utm_content=tracker%2F198445&utm_medium=issues&utm_source=github)** We accept bounties via [Bountysource](https://www.bountysource.com/?utm_campaign=plugin&utm_content=tracker%2F198445&utm_medium=issues&utm_source=github).\r\n</bountysource-plugin>",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/betamaxpy/betamax/issues/52",
        "repository_url": "https://api.github.com/repos/betamaxpy/betamax",
        "labels_url": "https://api.github.com/repos/betamaxpy/betamax/issues/52/labels{/name}",
        "comments_url": "https://api.github.com/repos/betamaxpy/betamax/issues/52/comments",
        "events_url": "https://api.github.com/repos/betamaxpy/betamax/issues/52/events",
        "html_url": "https://github.com/betamaxpy/betamax/issues/52",
        "id": 60131878,
        "node_id": "MDU6SXNzdWU2MDEzMTg3OA==",
        "number": 52,
        "title": "Make cassettes thread-safe",
        "user": {
            "login": "sigmavirus24",
            "id": 240830,
            "node_id": "MDQ6VXNlcjI0MDgzMA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/240830?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sigmavirus24",
            "html_url": "https://github.com/sigmavirus24",
            "followers_url": "https://api.github.com/users/sigmavirus24/followers",
            "following_url": "https://api.github.com/users/sigmavirus24/following{/other_user}",
            "gists_url": "https://api.github.com/users/sigmavirus24/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sigmavirus24/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sigmavirus24/subscriptions",
            "organizations_url": "https://api.github.com/users/sigmavirus24/orgs",
            "repos_url": "https://api.github.com/users/sigmavirus24/repos",
            "events_url": "https://api.github.com/users/sigmavirus24/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sigmavirus24/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 47994247,
                "node_id": "MDU6TGFiZWw0Nzk5NDI0Nw==",
                "url": "https://api.github.com/repos/betamaxpy/betamax/labels/Enhancement",
                "name": "Enhancement",
                "color": "84b6eb",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": {
            "url": "https://api.github.com/repos/betamaxpy/betamax/milestones/3",
            "html_url": "https://github.com/betamaxpy/betamax/milestone/3",
            "labels_url": "https://api.github.com/repos/betamaxpy/betamax/milestones/3/labels",
            "id": 1211755,
            "node_id": "MDk6TWlsZXN0b25lMTIxMTc1NQ==",
            "number": 3,
            "title": "1.0.0",
            "description": "",
            "creator": {
                "login": "sigmavirus24",
                "id": 240830,
                "node_id": "MDQ6VXNlcjI0MDgzMA==",
                "avatar_url": "https://avatars.githubusercontent.com/u/240830?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/sigmavirus24",
                "html_url": "https://github.com/sigmavirus24",
                "followers_url": "https://api.github.com/users/sigmavirus24/followers",
                "following_url": "https://api.github.com/users/sigmavirus24/following{/other_user}",
                "gists_url": "https://api.github.com/users/sigmavirus24/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/sigmavirus24/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/sigmavirus24/subscriptions",
                "organizations_url": "https://api.github.com/users/sigmavirus24/orgs",
                "repos_url": "https://api.github.com/users/sigmavirus24/repos",
                "events_url": "https://api.github.com/users/sigmavirus24/events{/privacy}",
                "received_events_url": "https://api.github.com/users/sigmavirus24/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 2,
            "closed_issues": 0,
            "state": "open",
            "created_at": "2015-07-16T19:02:00Z",
            "updated_at": "2015-07-16T19:02:42Z",
            "due_on": null,
            "closed_at": null
        },
        "comments": 1,
        "created_at": "2015-03-06T17:24:02Z",
        "updated_at": "2016-12-08T00:06:32Z",
        "closed_at": null,
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "I'm wondering if there's a need to test items using requests in thread-safe manner and how that would work with betamax. Currently the access to cassette files is not threadsafe and I'm wondering what would be necessary to ensure thread-safety.\n## \n\r\n\r\n<bountysource-plugin>\r\n---\r\nWant to back this issue? **[Post a bounty on it!](https://www.bountysource.com/issues/9271963-make-cassettes-thread-safe?utm_campaign=plugin&utm_content=tracker%2F198445&utm_medium=issues&utm_source=github)** We accept bounties via [Bountysource](https://www.bountysource.com/?utm_campaign=plugin&utm_content=tracker%2F198445&utm_medium=issues&utm_source=github).\r\n</bountysource-plugin>",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/betamaxpy/betamax/issues/46",
        "repository_url": "https://api.github.com/repos/betamaxpy/betamax",
        "labels_url": "https://api.github.com/repos/betamaxpy/betamax/issues/46/labels{/name}",
        "comments_url": "https://api.github.com/repos/betamaxpy/betamax/issues/46/comments",
        "events_url": "https://api.github.com/repos/betamaxpy/betamax/issues/46/events",
        "html_url": "https://github.com/betamaxpy/betamax/issues/46",
        "id": 47796413,
        "node_id": "MDU6SXNzdWU0Nzc5NjQxMw==",
        "number": 46,
        "title": "Fix flake8-docstrings failures",
        "user": {
            "login": "sigmavirus24",
            "id": 240830,
            "node_id": "MDQ6VXNlcjI0MDgzMA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/240830?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sigmavirus24",
            "html_url": "https://github.com/sigmavirus24",
            "followers_url": "https://api.github.com/users/sigmavirus24/followers",
            "following_url": "https://api.github.com/users/sigmavirus24/following{/other_user}",
            "gists_url": "https://api.github.com/users/sigmavirus24/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sigmavirus24/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sigmavirus24/subscriptions",
            "organizations_url": "https://api.github.com/users/sigmavirus24/orgs",
            "repos_url": "https://api.github.com/users/sigmavirus24/repos",
            "events_url": "https://api.github.com/users/sigmavirus24/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sigmavirus24/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 47994247,
                "node_id": "MDU6TGFiZWw0Nzk5NDI0Nw==",
                "url": "https://api.github.com/repos/betamaxpy/betamax/labels/Enhancement",
                "name": "Enhancement",
                "color": "84b6eb",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2014-11-05T03:42:04Z",
        "updated_at": "2017-10-28T18:57:47Z",
        "closed_at": null,
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "Currently, we run flake8 and flake8-docstrings against the project on [Travis CI](https://travis-ci.org/sigmavirus24/betamax). If you have the spare time and care to address some of these, I'll be immensely grateful.\n## \n\r\n\r\n<bountysource-plugin>\r\n---\r\nWant to back this issue? **[Post a bounty on it!](https://www.bountysource.com/issues/5774399-fix-flake8-docstrings-failures?utm_campaign=plugin&utm_content=tracker%2F198445&utm_medium=issues&utm_source=github)** We accept bounties via [Bountysource](https://www.bountysource.com/?utm_campaign=plugin&utm_content=tracker%2F198445&utm_medium=issues&utm_source=github).\r\n</bountysource-plugin>",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/betamaxpy/betamax/issues/40",
        "repository_url": "https://api.github.com/repos/betamaxpy/betamax",
        "labels_url": "https://api.github.com/repos/betamaxpy/betamax/issues/40/labels{/name}",
        "comments_url": "https://api.github.com/repos/betamaxpy/betamax/issues/40/comments",
        "events_url": "https://api.github.com/repos/betamaxpy/betamax/issues/40/events",
        "html_url": "https://github.com/betamaxpy/betamax/issues/40",
        "id": 43123401,
        "node_id": "MDU6SXNzdWU0MzEyMzQwMQ==",
        "number": 40,
        "title": "Betamax objects share global configuration",
        "user": {
            "login": "jerith",
            "id": 43731,
            "node_id": "MDQ6VXNlcjQzNzMx",
            "avatar_url": "https://avatars.githubusercontent.com/u/43731?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerith",
            "html_url": "https://github.com/jerith",
            "followers_url": "https://api.github.com/users/jerith/followers",
            "following_url": "https://api.github.com/users/jerith/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerith/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerith/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerith/subscriptions",
            "organizations_url": "https://api.github.com/users/jerith/orgs",
            "repos_url": "https://api.github.com/users/jerith/repos",
            "events_url": "https://api.github.com/users/jerith/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerith/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 47994245,
                "node_id": "MDU6TGFiZWw0Nzk5NDI0NQ==",
                "url": "https://api.github.com/repos/betamaxpy/betamax/labels/Bug",
                "name": "Bug",
                "color": "fc2929",
                "default": false,
                "description": null
            },
            {
                "id": 47994247,
                "node_id": "MDU6TGFiZWw0Nzk5NDI0Nw==",
                "url": "https://api.github.com/repos/betamaxpy/betamax/labels/Enhancement",
                "name": "Enhancement",
                "color": "84b6eb",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": {
            "url": "https://api.github.com/repos/betamaxpy/betamax/milestones/3",
            "html_url": "https://github.com/betamaxpy/betamax/milestone/3",
            "labels_url": "https://api.github.com/repos/betamaxpy/betamax/milestones/3/labels",
            "id": 1211755,
            "node_id": "MDk6TWlsZXN0b25lMTIxMTc1NQ==",
            "number": 3,
            "title": "1.0.0",
            "description": "",
            "creator": {
                "login": "sigmavirus24",
                "id": 240830,
                "node_id": "MDQ6VXNlcjI0MDgzMA==",
                "avatar_url": "https://avatars.githubusercontent.com/u/240830?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/sigmavirus24",
                "html_url": "https://github.com/sigmavirus24",
                "followers_url": "https://api.github.com/users/sigmavirus24/followers",
                "following_url": "https://api.github.com/users/sigmavirus24/following{/other_user}",
                "gists_url": "https://api.github.com/users/sigmavirus24/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/sigmavirus24/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/sigmavirus24/subscriptions",
                "organizations_url": "https://api.github.com/users/sigmavirus24/orgs",
                "repos_url": "https://api.github.com/users/sigmavirus24/repos",
                "events_url": "https://api.github.com/users/sigmavirus24/events{/privacy}",
                "received_events_url": "https://api.github.com/users/sigmavirus24/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 2,
            "closed_issues": 0,
            "state": "open",
            "created_at": "2015-07-16T19:02:00Z",
            "updated_at": "2015-07-16T19:02:42Z",
            "due_on": null,
            "closed_at": null
        },
        "comments": 4,
        "created_at": "2014-09-18T11:42:44Z",
        "updated_at": "2016-12-28T17:13:20Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "All configuration information seems to be shared between all `Betamax` objects, which means that creating a new instance changes the behaviour of existing objects:\n\n```\n>>> from betamax import Betamax\n>>> from requests import Session\n>>> bm = Betamax(Session(), cassette_library_dir=\"1\", default_cassette_options={\"record_mode\": \"none\"})\n>>> print bm.config.cassette_library_dir, bm.config.default_cassette_options[\"record_mode\"]\n1 none\n>>> bm2 = Betamax(Session(), cassette_library_dir=\"2\", default_cassette_options={\"record_mode\": \"all\"})\n>>> print bm2.config.cassette_library_dir, bm2.config.default_cassette_options[\"record_mode\"]\n2 all\n>>> print bm.config.cassette_library_dir, bm.config.default_cassette_options[\"record_mode\"]\n2 all\n```\n\nThis is both surprising and problematic when one wants to use different recorders for different requests within the same test.\n## \n\r\n\r\n<bountysource-plugin>\r\n---\r\nWant to back this issue? **[Post a bounty on it!](https://www.bountysource.com/issues/4462489-betamax-objects-share-global-configuration?utm_campaign=plugin&utm_content=tracker%2F198445&utm_medium=issues&utm_source=github)** We accept bounties via [Bountysource](https://www.bountysource.com/?utm_campaign=plugin&utm_content=tracker%2F198445&utm_medium=issues&utm_source=github).\r\n</bountysource-plugin>",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/betamaxpy/betamax/issues/6",
        "repository_url": "https://api.github.com/repos/betamaxpy/betamax",
        "labels_url": "https://api.github.com/repos/betamaxpy/betamax/issues/6/labels{/name}",
        "comments_url": "https://api.github.com/repos/betamaxpy/betamax/issues/6/comments",
        "events_url": "https://api.github.com/repos/betamaxpy/betamax/issues/6/events",
        "html_url": "https://github.com/betamaxpy/betamax/issues/6",
        "id": 19298081,
        "node_id": "MDU6SXNzdWUxOTI5ODA4MQ==",
        "number": 6,
        "title": "Hooks",
        "user": {
            "login": "sigmavirus24",
            "id": 240830,
            "node_id": "MDQ6VXNlcjI0MDgzMA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/240830?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sigmavirus24",
            "html_url": "https://github.com/sigmavirus24",
            "followers_url": "https://api.github.com/users/sigmavirus24/followers",
            "following_url": "https://api.github.com/users/sigmavirus24/following{/other_user}",
            "gists_url": "https://api.github.com/users/sigmavirus24/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sigmavirus24/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sigmavirus24/subscriptions",
            "organizations_url": "https://api.github.com/users/sigmavirus24/orgs",
            "repos_url": "https://api.github.com/users/sigmavirus24/repos",
            "events_url": "https://api.github.com/users/sigmavirus24/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sigmavirus24/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 47994247,
                "node_id": "MDU6TGFiZWw0Nzk5NDI0Nw==",
                "url": "https://api.github.com/repos/betamaxpy/betamax/labels/Enhancement",
                "name": "Enhancement",
                "color": "84b6eb",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2013-09-11T03:43:56Z",
        "updated_at": "2016-12-28T17:13:20Z",
        "closed_at": null,
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "~~https://www.relishapp.com/vcr/vcr/v/2-5-0/docs/hooks~~\nhttps://www.relishapp.com/vcr/vcr/v/2-8-0/docs/hooks\n### Planned to implement for 0.7.0\n- [x] Before record\n- [x] Before playback\n### Postponing implementation until later\n- [ ] Before http request\n- [ ] After http request\n- [ ] Around http request\n## \n\r\n\r\n<bountysource-plugin>\r\n---\r\nWant to back this issue? **[Post a bounty on it!](https://www.bountysource.com/issues/33207096-hooks?utm_campaign=plugin&utm_content=tracker%2F198445&utm_medium=issues&utm_source=github)** We accept bounties via [Bountysource](https://www.bountysource.com/?utm_campaign=plugin&utm_content=tracker%2F198445&utm_medium=issues&utm_source=github).\r\n</bountysource-plugin>",
        "performed_via_github_app": null
    }
]