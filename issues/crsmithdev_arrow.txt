[
    {
        "url": "https://api.github.com/repos/arrow-py/arrow/issues/913",
        "repository_url": "https://api.github.com/repos/arrow-py/arrow",
        "labels_url": "https://api.github.com/repos/arrow-py/arrow/issues/913/labels{/name}",
        "comments_url": "https://api.github.com/repos/arrow-py/arrow/issues/913/comments",
        "events_url": "https://api.github.com/repos/arrow-py/arrow/issues/913/events",
        "html_url": "https://github.com/arrow-py/arrow/issues/913",
        "id": 783233272,
        "node_id": "MDU6SXNzdWU3ODMyMzMyNzI=",
        "number": 913,
        "title": "Holiday support for Arrow",
        "user": {
            "login": "b10011",
            "id": 5436065,
            "node_id": "MDQ6VXNlcjU0MzYwNjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5436065?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/b10011",
            "html_url": "https://github.com/b10011",
            "followers_url": "https://api.github.com/users/b10011/followers",
            "following_url": "https://api.github.com/users/b10011/following{/other_user}",
            "gists_url": "https://api.github.com/users/b10011/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/b10011/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/b10011/subscriptions",
            "organizations_url": "https://api.github.com/users/b10011/orgs",
            "repos_url": "https://api.github.com/users/b10011/repos",
            "events_url": "https://api.github.com/users/b10011/events{/privacy}",
            "received_events_url": "https://api.github.com/users/b10011/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 19660347,
                "node_id": "MDU6TGFiZWwxOTY2MDM0Nw==",
                "url": "https://api.github.com/repos/arrow-py/arrow/labels/enhancement",
                "name": "enhancement",
                "color": "84b6eb",
                "default": true,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2021-01-11T10:05:23Z",
        "updated_at": "2021-01-11T10:05:23Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## Feature Request\r\n\r\nIt would be nice to be able to call the following methods on an arrow object:\r\n- `.is_holiday(locale=\"FI\")` to get boolean telling whether the date is a holiday or not\r\n- `.holiday(locale=\"FI\")` to get the name of the holiday (or None if it's not a holiday)\r\n\r\nThis would be easy to implement using [python-holidays](https://github.com/dr-prodigy/python-holidays). The library includes lots of countries. I would suggest making the dependency optional so that the installation size doesn't increase a lot.\r\n\r\nThe default value for locale could be read using the current locale of the system. Below is a rough idea translated into code.\r\n\r\n```python\r\ntry:\r\n    import holidays\r\nexcept ModuleNotFoundError:\r\n    holidays = None\r\nimport locale\r\n\r\ndefault_locale = locale.getdefaultlocale()[0].split(\"_\")[1]\r\n\r\ndef is_holiday(arrowobj, locale=None, **kwargs):\r\n    if holidays is None:\r\n        raise ModuleNotFoundError('Arrow .is_holiday() requires installation of \"holidays\" package (PyPI holidays)')\r\n    holidays_country = getattr(holidays, locale or default_locale)(**kwargs)\r\n    return arrowobj.date() in holidays_country\r\n\r\ndef holiday(arrowobj, locale=None, **kwargs):\r\n    if holidays is None:\r\n        raise ModuleNotFoundError('Arrow .holiday() requires installation of \"holidays\" package (PyPI holidays)')\r\n    holidays_country = getattr(holidays, locale or default_locale)(**kwargs)\r\n    date_ = arrowobj.date()\r\n    if date_ in holidays_country:\r\n        return holidays_country[date_]\r\n    else:\r\n        return None\r\n```\r\n\r\nIn case this feature request gets support, I am willing to code the implementation, so this wouldn't be a burden on the active dev team.",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/arrow-py/arrow/issues/912",
        "repository_url": "https://api.github.com/repos/arrow-py/arrow",
        "labels_url": "https://api.github.com/repos/arrow-py/arrow/issues/912/labels{/name}",
        "comments_url": "https://api.github.com/repos/arrow-py/arrow/issues/912/comments",
        "events_url": "https://api.github.com/repos/arrow-py/arrow/issues/912/events",
        "html_url": "https://github.com/arrow-py/arrow/issues/912",
        "id": 781475596,
        "node_id": "MDU6SXNzdWU3ODE0NzU1OTY=",
        "number": 912,
        "title": "Create arrow timezone interface and wrapper",
        "user": {
            "login": "jadchaar",
            "id": 7388203,
            "node_id": "MDQ6VXNlcjczODgyMDM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7388203?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jadchaar",
            "html_url": "https://github.com/jadchaar",
            "followers_url": "https://api.github.com/users/jadchaar/followers",
            "following_url": "https://api.github.com/users/jadchaar/following{/other_user}",
            "gists_url": "https://api.github.com/users/jadchaar/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jadchaar/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jadchaar/subscriptions",
            "organizations_url": "https://api.github.com/users/jadchaar/orgs",
            "repos_url": "https://api.github.com/users/jadchaar/repos",
            "events_url": "https://api.github.com/users/jadchaar/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jadchaar/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 19660347,
                "node_id": "MDU6TGFiZWwxOTY2MDM0Nw==",
                "url": "https://api.github.com/repos/arrow-py/arrow/labels/enhancement",
                "name": "enhancement",
                "color": "84b6eb",
                "default": true,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2021-01-07T17:19:44Z",
        "updated_at": "2021-01-10T17:50:45Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "<!--\r\nThanks for taking the time to submit this feature request.\r\n\r\nPlease provide us with a detailed description of the potential improvement.\r\n-->\r\n\r\n## Feature Request\r\n\r\nIt would be useful for users to directly import an arrow timezone object and create Arrow timezones rather than having to use `datetime.timezone`, `ZoneInfo`, or `dateutil.tz.gettz`. This will allow for full feature encapsulation within Arrow, so users can create timezones like this:\r\n\r\n```python\r\nimport arrow\r\narrow.now(tz=arrow.timezone(\"US/Pacific\"))\r\n```\r\n\r\nThis `arrow.timezone` wrapper can simply wrap the `TzinfoParser` and `dateutil.tz.gettz` logic and expose an easy-to-use interface for users.\r\n\r\n<!-- Replace this comment block with a description of the potential improvement. -->\r\n",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/arrow-py/arrow/issues/910",
        "repository_url": "https://api.github.com/repos/arrow-py/arrow",
        "labels_url": "https://api.github.com/repos/arrow-py/arrow/issues/910/labels{/name}",
        "comments_url": "https://api.github.com/repos/arrow-py/arrow/issues/910/comments",
        "events_url": "https://api.github.com/repos/arrow-py/arrow/issues/910/events",
        "html_url": "https://github.com/arrow-py/arrow/pull/910",
        "id": 777521967,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NTQ3Nzk2MDQ2",
        "number": 910,
        "title": "Document ZoneInfo and update tzinfo formatting/parsing tests to use ZoneInfo",
        "user": {
            "login": "jadchaar",
            "id": 7388203,
            "node_id": "MDQ6VXNlcjczODgyMDM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7388203?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jadchaar",
            "html_url": "https://github.com/jadchaar",
            "followers_url": "https://api.github.com/users/jadchaar/followers",
            "following_url": "https://api.github.com/users/jadchaar/following{/other_user}",
            "gists_url": "https://api.github.com/users/jadchaar/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jadchaar/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jadchaar/subscriptions",
            "organizations_url": "https://api.github.com/users/jadchaar/orgs",
            "repos_url": "https://api.github.com/users/jadchaar/repos",
            "events_url": "https://api.github.com/users/jadchaar/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jadchaar/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2021-01-02T20:41:15Z",
        "updated_at": "2021-01-07T16:56:07Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "pull_request": {
            "url": "https://api.github.com/repos/arrow-py/arrow/pulls/910",
            "html_url": "https://github.com/arrow-py/arrow/pull/910",
            "diff_url": "https://github.com/arrow-py/arrow/pull/910.diff",
            "patch_url": "https://github.com/arrow-py/arrow/pull/910.patch"
        },
        "body": "## Pull Request Checklist\r\n\r\nThank you for taking the time to improve Arrow! Before submitting your pull request, please check all *appropriate* boxes:\r\n\r\n<!-- Check boxes by placing an x in the brackets like this: [x] -->\r\n- [ ] \ud83e\uddea  Added **tests** for changed code.\r\n- [x] \ud83d\udee0\ufe0f  All tests **pass** when run locally (run `tox` or `make test` to find out!).\r\n- [x] \ud83e\uddf9  All linting checks **pass** when run locally (run `tox -e lint` or `make lint` to find out!).\r\n- [x] \ud83d\udcda  Updated **documentation** for changed code.\r\n- [x] \u23e9  Code is **up-to-date** with the `master` branch.\r\n\r\nIf you have *any* questions about your code changes or any of the points above, please submit your questions along with the pull request and we will try our best to help!\r\n\r\n## Description of Changes\r\n\r\nCloses: https://github.com/arrow-py/arrow/issues/825\r\nCloses: https://github.com/arrow-py/arrow/issues/866\r\n<!--\r\nReplace this commented text block with a description of your code changes.\r\n\r\nIf your PR has an associated issue, insert the issue number (e.g. #703) or directly link to the GitHub issue (e.g. https://github.com/arrow-py/arrow/issues/703).\r\n\r\nPro-tip: writing \"Closes: #703\" in the PR body will automatically close issue #703 when the PR is merged.\r\n-->\r\n",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/arrow-py/arrow/issues/907",
        "repository_url": "https://api.github.com/repos/arrow-py/arrow",
        "labels_url": "https://api.github.com/repos/arrow-py/arrow/issues/907/labels{/name}",
        "comments_url": "https://api.github.com/repos/arrow-py/arrow/issues/907/comments",
        "events_url": "https://api.github.com/repos/arrow-py/arrow/issues/907/events",
        "html_url": "https://github.com/arrow-py/arrow/pull/907",
        "id": 776740718,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NTQ3MTczOTkw",
        "number": 907,
        "title": "Adding locale validation for timeframes, meridians and and_word.",
        "user": {
            "login": "krisfremen",
            "id": 1108071,
            "node_id": "MDQ6VXNlcjExMDgwNzE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1108071?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/krisfremen",
            "html_url": "https://github.com/krisfremen",
            "followers_url": "https://api.github.com/users/krisfremen/followers",
            "following_url": "https://api.github.com/users/krisfremen/following{/other_user}",
            "gists_url": "https://api.github.com/users/krisfremen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/krisfremen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/krisfremen/subscriptions",
            "organizations_url": "https://api.github.com/users/krisfremen/orgs",
            "repos_url": "https://api.github.com/users/krisfremen/repos",
            "events_url": "https://api.github.com/users/krisfremen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/krisfremen/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2020-12-31T03:14:35Z",
        "updated_at": "2020-12-31T05:20:56Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "pull_request": {
            "url": "https://api.github.com/repos/arrow-py/arrow/pulls/907",
            "html_url": "https://github.com/arrow-py/arrow/pull/907",
            "diff_url": "https://github.com/arrow-py/arrow/pull/907.diff",
            "patch_url": "https://github.com/arrow-py/arrow/pull/907.patch"
        },
        "body": "## Pull Request Checklist\r\n\r\nThank you for taking the time to improve Arrow! Before submitting your pull request, please check all *appropriate* boxes:\r\n\r\n<!-- Check boxes by placing an x in the brackets like this: [x] -->\r\n- [ ] \ud83e\uddea  Added **tests** for changed code.\r\n- [x] \ud83d\udee0\ufe0f  All tests **pass** when run locally (run `tox` or `make test` to find out!).\r\n- [ ] \ud83e\uddf9  All linting checks **pass** when run locally (run `tox -e lint` or `make lint` to find out!).\r\n- [ ] \ud83d\udcda  Updated **documentation** for changed code.\r\n- [ ] \u23e9  Code is **up-to-date** with the `master` branch.\r\n\r\nIf you have *any* questions about your code changes or any of the points above, please submit your questions along with the pull request and we will try our best to help!\r\n\r\n## Description of Changes\r\n\r\nUpdating the locale validation test to check for the newly added timeframes that have been added, as well as meridians and and_word.\r\n\r\nIt would be nice to have this.. as it would give some indication of locales that aren't in compliance or usable even with the latest version, but it would break the tests.\r\n\r\nSo up for debate, do we add an xfail in this or try to get all the locales up to par?",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/arrow-py/arrow/issues/899",
        "repository_url": "https://api.github.com/repos/arrow-py/arrow",
        "labels_url": "https://api.github.com/repos/arrow-py/arrow/issues/899/labels{/name}",
        "comments_url": "https://api.github.com/repos/arrow-py/arrow/issues/899/comments",
        "events_url": "https://api.github.com/repos/arrow-py/arrow/issues/899/events",
        "html_url": "https://github.com/arrow-py/arrow/issues/899",
        "id": 771679639,
        "node_id": "MDU6SXNzdWU3NzE2Nzk2Mzk=",
        "number": 899,
        "title": "Add docs support for type annotations",
        "user": {
            "login": "jadchaar",
            "id": 7388203,
            "node_id": "MDQ6VXNlcjczODgyMDM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7388203?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jadchaar",
            "html_url": "https://github.com/jadchaar",
            "followers_url": "https://api.github.com/users/jadchaar/followers",
            "following_url": "https://api.github.com/users/jadchaar/following{/other_user}",
            "gists_url": "https://api.github.com/users/jadchaar/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jadchaar/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jadchaar/subscriptions",
            "organizations_url": "https://api.github.com/users/jadchaar/orgs",
            "repos_url": "https://api.github.com/users/jadchaar/repos",
            "events_url": "https://api.github.com/users/jadchaar/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jadchaar/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1167159350,
                "node_id": "MDU6TGFiZWwxMTY3MTU5MzUw",
                "url": "https://api.github.com/repos/arrow-py/arrow/labels/documentation",
                "name": "documentation",
                "color": "747af2",
                "default": true,
                "description": ""
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": {
            "url": "https://api.github.com/repos/arrow-py/arrow/milestones/2",
            "html_url": "https://github.com/arrow-py/arrow/milestone/2",
            "labels_url": "https://api.github.com/repos/arrow-py/arrow/milestones/2/labels",
            "id": 5598812,
            "node_id": "MDk6TWlsZXN0b25lNTU5ODgxMg==",
            "number": 2,
            "title": "v1.0.0",
            "description": "Issues and PRs targeting a v1.0.0 release and move to full semantic versioning.",
            "creator": {
                "login": "jadchaar",
                "id": 7388203,
                "node_id": "MDQ6VXNlcjczODgyMDM=",
                "avatar_url": "https://avatars.githubusercontent.com/u/7388203?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/jadchaar",
                "html_url": "https://github.com/jadchaar",
                "followers_url": "https://api.github.com/users/jadchaar/followers",
                "following_url": "https://api.github.com/users/jadchaar/following{/other_user}",
                "gists_url": "https://api.github.com/users/jadchaar/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/jadchaar/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jadchaar/subscriptions",
                "organizations_url": "https://api.github.com/users/jadchaar/orgs",
                "repos_url": "https://api.github.com/users/jadchaar/repos",
                "events_url": "https://api.github.com/users/jadchaar/events{/privacy}",
                "received_events_url": "https://api.github.com/users/jadchaar/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 3,
            "closed_issues": 6,
            "state": "open",
            "created_at": "2020-06-30T04:05:23Z",
            "updated_at": "2020-12-20T20:41:49Z",
            "due_on": "2020-09-30T07:00:00Z",
            "closed_at": null
        },
        "comments": 1,
        "created_at": "2020-12-20T19:34:06Z",
        "updated_at": "2020-12-20T20:56:16Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "Once #883 is merged, we need to add support for types to docs using this plugin: https://pypi.org/project/sphinx-autodoc-typehints/.",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/arrow-py/arrow/issues/897",
        "repository_url": "https://api.github.com/repos/arrow-py/arrow",
        "labels_url": "https://api.github.com/repos/arrow-py/arrow/issues/897/labels{/name}",
        "comments_url": "https://api.github.com/repos/arrow-py/arrow/issues/897/comments",
        "events_url": "https://api.github.com/repos/arrow-py/arrow/issues/897/events",
        "html_url": "https://github.com/arrow-py/arrow/issues/897",
        "id": 769112424,
        "node_id": "MDU6SXNzdWU3NjkxMTI0MjQ=",
        "number": 897,
        "title": "Return matched string after successful parsing",
        "user": {
            "login": "mredaelli",
            "id": 3073833,
            "node_id": "MDQ6VXNlcjMwNzM4MzM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3073833?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mredaelli",
            "html_url": "https://github.com/mredaelli",
            "followers_url": "https://api.github.com/users/mredaelli/followers",
            "following_url": "https://api.github.com/users/mredaelli/following{/other_user}",
            "gists_url": "https://api.github.com/users/mredaelli/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mredaelli/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mredaelli/subscriptions",
            "organizations_url": "https://api.github.com/users/mredaelli/orgs",
            "repos_url": "https://api.github.com/users/mredaelli/repos",
            "events_url": "https://api.github.com/users/mredaelli/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mredaelli/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 19660347,
                "node_id": "MDU6TGFiZWwxOTY2MDM0Nw==",
                "url": "https://api.github.com/repos/arrow-py/arrow/labels/enhancement",
                "name": "enhancement",
                "color": "84b6eb",
                "default": true,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2020-12-16T17:08:26Z",
        "updated_at": "2020-12-24T19:30:05Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## Feature Request\r\n\r\nDesiderata: have a way to retrieve the part of the string that `arrow` matched to the format in a successful parse.\r\n\r\nI see at least two use cases.\r\n\r\n### Get the \"rest\"\r\n\r\nIt is not an uncommon need, at least in the domain of web scraping, to extract a date from a string **and** to store the remaining information from that string somewhere else.\r\n\r\nGetting the date with `arrow` is awesomely easy, but once I have that I don't know of a good way to \"remove the date I extracted and get the rest of the string\", other than formatting the date with all the formats and replacing it in the string.\r\n\r\nEven that is not bulletproof, though, because\r\n\r\n### Multiple matches\r\n\r\nSuppose I want **all** the dates that match a certain format in a string? As it is now, I only get the result from the first match. \r\n\r\nIf I had the information of where the result was matched, I could at least call `get` again on the substring right after the match.",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/arrow-py/arrow/issues/894",
        "repository_url": "https://api.github.com/repos/arrow-py/arrow",
        "labels_url": "https://api.github.com/repos/arrow-py/arrow/issues/894/labels{/name}",
        "comments_url": "https://api.github.com/repos/arrow-py/arrow/issues/894/comments",
        "events_url": "https://api.github.com/repos/arrow-py/arrow/issues/894/events",
        "html_url": "https://github.com/arrow-py/arrow/pull/894",
        "id": 760908434,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NTM1NjU2Mzc3",
        "number": 894,
        "title": "fix edge case for humanize month",
        "user": {
            "login": "yiransii",
            "id": 44989609,
            "node_id": "MDQ6VXNlcjQ0OTg5NjA5",
            "avatar_url": "https://avatars.githubusercontent.com/u/44989609?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yiransii",
            "html_url": "https://github.com/yiransii",
            "followers_url": "https://api.github.com/users/yiransii/followers",
            "following_url": "https://api.github.com/users/yiransii/following{/other_user}",
            "gists_url": "https://api.github.com/users/yiransii/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yiransii/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yiransii/subscriptions",
            "organizations_url": "https://api.github.com/users/yiransii/orgs",
            "repos_url": "https://api.github.com/users/yiransii/repos",
            "events_url": "https://api.github.com/users/yiransii/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yiransii/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-12-10T05:17:18Z",
        "updated_at": "2020-12-15T19:46:42Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "pull_request": {
            "url": "https://api.github.com/repos/arrow-py/arrow/pulls/894",
            "html_url": "https://github.com/arrow-py/arrow/pull/894",
            "diff_url": "https://github.com/arrow-py/arrow/pull/894.diff",
            "patch_url": "https://github.com/arrow-py/arrow/pull/894.patch"
        },
        "body": "## Pull Request Checklist\r\n\r\nThank you for taking the time to improve Arrow! Before submitting your pull request, please check all *appropriate* boxes:\r\n\r\n<!-- Check boxes by placing an x in the brackets like this: [x] -->\r\n- [x] \ud83e\uddea  Added **tests** for changed code.\r\n- [x] \ud83d\udee0\ufe0f  All tests **pass** when run locally (run `tox` or `make test` to find out!).\r\n- [x] \ud83e\uddf9  All linting checks **pass** when run locally (run `tox -e lint` or `make lint` to find out!).\r\n- [ ] \ud83d\udcda  Updated **documentation** for changed code.\r\n- [x] \u23e9  Code is **up-to-date** with the `master` branch.\r\n\r\n## Description of Changes\r\n\r\n<!--\r\nReplace this commented text block with a description of your code changes.\r\n\r\nIf your PR has an associated issue, insert the issue number (e.g. #703) or directly link to the GitHub issue (e.g. https://github.com/arrow-py/arrow/issues/703).\r\n\r\nPro-tip: writing \"Closes: #703\" in the PR body will automatically close issue #703 when the PR is merged.\r\n-->\r\n\r\nAdded edge case handling for the ```humanize``` method to describe the delta of both 30 days and 31 days as \"1 month\". \r\n\r\nFor instance, \r\n```\r\ndt=arrow.get(\"2020-11-08T15:12:18.911919+00:00\")\r\nlater=dt.shift(months=+1)\r\nprint(dt.humanize(later))\r\nprint(later.humanize(dt))\r\n```\r\nshould print\r\n```\r\na month ago\r\nin a month\r\n```\r\n\r\n\r\nCloses: #749",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/arrow-py/arrow/issues/885",
        "repository_url": "https://api.github.com/repos/arrow-py/arrow",
        "labels_url": "https://api.github.com/repos/arrow-py/arrow/issues/885/labels{/name}",
        "comments_url": "https://api.github.com/repos/arrow-py/arrow/issues/885/comments",
        "events_url": "https://api.github.com/repos/arrow-py/arrow/issues/885/events",
        "html_url": "https://github.com/arrow-py/arrow/issues/885",
        "id": 748689064,
        "node_id": "MDU6SXNzdWU3NDg2ODkwNjQ=",
        "number": 885,
        "title": "range and span_range behave different if explicit tz is provided",
        "user": {
            "login": "areyal",
            "id": 5336586,
            "node_id": "MDQ6VXNlcjUzMzY1ODY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5336586?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/areyal",
            "html_url": "https://github.com/areyal",
            "followers_url": "https://api.github.com/users/areyal/followers",
            "following_url": "https://api.github.com/users/areyal/following{/other_user}",
            "gists_url": "https://api.github.com/users/areyal/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/areyal/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/areyal/subscriptions",
            "organizations_url": "https://api.github.com/users/areyal/orgs",
            "repos_url": "https://api.github.com/users/areyal/repos",
            "events_url": "https://api.github.com/users/areyal/events{/privacy}",
            "received_events_url": "https://api.github.com/users/areyal/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 19660345,
                "node_id": "MDU6TGFiZWwxOTY2MDM0NQ==",
                "url": "https://api.github.com/repos/arrow-py/arrow/labels/bug",
                "name": "bug",
                "color": "fc2929",
                "default": true,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2020-11-23T10:47:51Z",
        "updated_at": "2020-12-24T16:44:06Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "The functions range and span_range behave different if explicit tz is provided, being tz the same of the provided start and end datetimes.\r\nThey provide an unexpected additional interval at the end of the range.\r\n\r\n## Issue Description\r\n\r\nSetup:\r\n```\r\nfrom arrow import Arrow\r\nimport pytz\r\n\r\ntz = pytz.timezone(\"Europe/Madrid\")\r\n\r\nstart = Arrow(2000,1,1,1).replace(tzinfo=tz)\r\nend = Arrow(2000,2,1).replace(tzinfo=tz)\r\n```\r\n\r\nTest without explicit tz:\r\n```\r\n\r\nIn [29]: result = list(Arrow.span_range('hour',start,end))\r\n\r\nIn [30]: len(result)\r\nOut[30]: 745\r\n\r\nIn [31]: result[:2]\r\nOut[31]:\r\n[(<Arrow [2000-01-01T00:00:00+01:00]>,\r\n  <Arrow [2000-01-01T00:59:59.999999+01:00]>),\r\n (<Arrow [2000-01-01T01:00:00+01:00]>,\r\n  <Arrow [2000-01-01T01:59:59.999999+01:00]>)]\r\n\r\nIn [32]: result[-2:]\r\nOut[32]:\r\n[(<Arrow [2000-01-31T23:00:00+01:00]>,\r\n  <Arrow [2000-01-31T23:59:59.999999+01:00]>),\r\n (<Arrow [2000-02-01T00:00:00+01:00]>,\r\n  <Arrow [2000-02-01T00:59:59.999999+01:00]>)]\r\n\r\n```\r\n\r\nTest with explicit tz:\r\n```\r\n\r\nIn [33]: result = list(Arrow.span_range('hour',start,end,tz=tz))\r\n\r\nIn [34]: len(result)\r\nOut[34]: 746\r\n\r\nIn [35]: result[:2]\r\nOut[35]:\r\n[(<Arrow [2000-01-01T00:00:00+01:00]>,\r\n  <Arrow [2000-01-01T00:59:59.999999+01:00]>),\r\n (<Arrow [2000-01-01T01:00:00+01:00]>,\r\n  <Arrow [2000-01-01T01:59:59.999999+01:00]>)]\r\n\r\nIn [36]: result[-2:]\r\nOut[36]:\r\n[(<Arrow [2000-02-01T00:00:00+01:00]>,\r\n  <Arrow [2000-02-01T00:59:59.999999+01:00]>),\r\n (<Arrow [2000-02-01T01:00:00+01:00]>,\r\n  <Arrow [2000-02-01T01:59:59.999999+01:00]>)]\r\n\r\n\r\n```\r\n\r\nTest with naive datetimes and explicit tz\r\n\r\n```\r\nIn [43]: start = Arrow(2000,1,1)\r\n\r\nIn [44]: end = Arrow(2000,2,1)\r\n\r\nIn [45]: result = list(Arrow.span_range('hour',start,end,tz=tz))\r\n\r\nIn [46]: len(result)\r\nOut[46]: 746\r\n\r\nIn [47]: result[:2]\r\nOut[47]:\r\n[(<Arrow [2000-01-01T00:00:00+01:00]>,\r\n  <Arrow [2000-01-01T00:59:59.999999+01:00]>),\r\n (<Arrow [2000-01-01T01:00:00+01:00]>,\r\n  <Arrow [2000-01-01T01:59:59.999999+01:00]>)]\r\n\r\nIn [48]: result[-2:]\r\nOut[48]:\r\n[(<Arrow [2000-02-01T00:00:00+01:00]>,\r\n  <Arrow [2000-02-01T00:59:59.999999+01:00]>),\r\n (<Arrow [2000-02-01T01:00:00+01:00]>,\r\n  <Arrow [2000-02-01T01:59:59.999999+01:00]>)]\r\n\r\n```\r\n\r\n\r\n\r\n## System Info\r\n\r\n- \ud83d\udda5  **OS name and version**: Debian 10\r\n- \ud83d\udc0d  **Python version**: 3.7.3\r\n- \ud83c\udff9  **Arrow version**: 0.17.0\r\n",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/arrow-py/arrow/issues/883",
        "repository_url": "https://api.github.com/repos/arrow-py/arrow",
        "labels_url": "https://api.github.com/repos/arrow-py/arrow/issues/883/labels{/name}",
        "comments_url": "https://api.github.com/repos/arrow-py/arrow/issues/883/comments",
        "events_url": "https://api.github.com/repos/arrow-py/arrow/issues/883/events",
        "html_url": "https://github.com/arrow-py/arrow/pull/883",
        "id": 745343958,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NTIyOTIzNjY1",
        "number": 883,
        "title": "Add type annotations",
        "user": {
            "login": "isac322",
            "id": 4602209,
            "node_id": "MDQ6VXNlcjQ2MDIyMDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4602209?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/isac322",
            "html_url": "https://github.com/isac322",
            "followers_url": "https://api.github.com/users/isac322/followers",
            "following_url": "https://api.github.com/users/isac322/following{/other_user}",
            "gists_url": "https://api.github.com/users/isac322/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/isac322/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/isac322/subscriptions",
            "organizations_url": "https://api.github.com/users/isac322/orgs",
            "repos_url": "https://api.github.com/users/isac322/repos",
            "events_url": "https://api.github.com/users/isac322/events{/privacy}",
            "received_events_url": "https://api.github.com/users/isac322/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 10,
        "created_at": "2020-11-18T05:29:01Z",
        "updated_at": "2021-01-13T02:38:49Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "pull_request": {
            "url": "https://api.github.com/repos/arrow-py/arrow/pulls/883",
            "html_url": "https://github.com/arrow-py/arrow/pull/883",
            "diff_url": "https://github.com/arrow-py/arrow/pull/883.diff",
            "patch_url": "https://github.com/arrow-py/arrow/pull/883.patch"
        },
        "body": "## Pull Request Checklist\r\n\r\nThank you for taking the time to improve Arrow! Before submitting your pull request, please check all *appropriate* boxes:\r\n\r\n<!-- Check boxes by placing an x in the brackets like this: [x] -->\r\n- [ ] \ud83e\uddea  Added **tests** for changed code.\r\n- [x] \ud83d\udee0\ufe0f  All tests **pass** when run locally (run `tox` or `make test` to find out!).\r\n- [x] \ud83e\uddf9  All linting checks **pass** when run locally (run `tox -e lint` or `make lint` to find out!).\r\n- [ ] \ud83d\udcda  Updated **documentation** for changed code.\r\n- [x] \u23e9  Code is **up-to-date** with the `master` branch.\r\n\r\nIf you have *any* questions about your code changes or any of the points above, please submit your questions along with the pull request and we will try our best to help!\r\n\r\n## Description of Changes\r\n\r\n- Added type annotation to all functions and methods.\r\n- Add runtime dependency [typing_extensions](https://pypi.org/project/typing-extensions/) for backward compatibility with 3.6 and 3.7\r\n- Add mypy git pre-commit hook\r\n- Add mypy configuration file (setup.cfg)\r\n- Refactor some logics for better type annotation\r\n  - I will create comments for these\r\n\r\nPlease review this with my comments on PR. I have questions.",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/arrow-py/arrow/issues/881",
        "repository_url": "https://api.github.com/repos/arrow-py/arrow",
        "labels_url": "https://api.github.com/repos/arrow-py/arrow/issues/881/labels{/name}",
        "comments_url": "https://api.github.com/repos/arrow-py/arrow/issues/881/comments",
        "events_url": "https://api.github.com/repos/arrow-py/arrow/issues/881/events",
        "html_url": "https://github.com/arrow-py/arrow/issues/881",
        "id": 744932553,
        "node_id": "MDU6SXNzdWU3NDQ5MzI1NTM=",
        "number": 881,
        "title": "Add support for WSL on GitHub actions",
        "user": {
            "login": "jadchaar",
            "id": 7388203,
            "node_id": "MDQ6VXNlcjczODgyMDM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7388203?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jadchaar",
            "html_url": "https://github.com/jadchaar",
            "followers_url": "https://api.github.com/users/jadchaar/followers",
            "following_url": "https://api.github.com/users/jadchaar/following{/other_user}",
            "gists_url": "https://api.github.com/users/jadchaar/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jadchaar/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jadchaar/subscriptions",
            "organizations_url": "https://api.github.com/users/jadchaar/orgs",
            "repos_url": "https://api.github.com/users/jadchaar/repos",
            "events_url": "https://api.github.com/users/jadchaar/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jadchaar/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1377951956,
                "node_id": "MDU6TGFiZWwxMzc3OTUxOTU2",
                "url": "https://api.github.com/repos/arrow-py/arrow/labels/tests",
                "name": "tests",
                "color": "dbc6ff",
                "default": false,
                "description": ""
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-11-17T17:22:06Z",
        "updated_at": "2020-11-17T18:18:07Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "It is worthwhile to test against WSL on Windows in our CI pipeline. We can use this action to set it up: https://github.com/marketplace/actions/setup-wsl.",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/arrow-py/arrow/issues/878",
        "repository_url": "https://api.github.com/repos/arrow-py/arrow",
        "labels_url": "https://api.github.com/repos/arrow-py/arrow/issues/878/labels{/name}",
        "comments_url": "https://api.github.com/repos/arrow-py/arrow/issues/878/comments",
        "events_url": "https://api.github.com/repos/arrow-py/arrow/issues/878/events",
        "html_url": "https://github.com/arrow-py/arrow/issues/878",
        "id": 740186572,
        "node_id": "MDU6SXNzdWU3NDAxODY1NzI=",
        "number": 878,
        "title": "Update usage of dateutil's enfold method",
        "user": {
            "login": "systemcatch",
            "id": 30196510,
            "node_id": "MDQ6VXNlcjMwMTk2NTEw",
            "avatar_url": "https://avatars.githubusercontent.com/u/30196510?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/systemcatch",
            "html_url": "https://github.com/systemcatch",
            "followers_url": "https://api.github.com/users/systemcatch/followers",
            "following_url": "https://api.github.com/users/systemcatch/following{/other_user}",
            "gists_url": "https://api.github.com/users/systemcatch/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/systemcatch/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/systemcatch/subscriptions",
            "organizations_url": "https://api.github.com/users/systemcatch/orgs",
            "repos_url": "https://api.github.com/users/systemcatch/repos",
            "events_url": "https://api.github.com/users/systemcatch/events{/privacy}",
            "received_events_url": "https://api.github.com/users/systemcatch/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "systemcatch",
            "id": 30196510,
            "node_id": "MDQ6VXNlcjMwMTk2NTEw",
            "avatar_url": "https://avatars.githubusercontent.com/u/30196510?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/systemcatch",
            "html_url": "https://github.com/systemcatch",
            "followers_url": "https://api.github.com/users/systemcatch/followers",
            "following_url": "https://api.github.com/users/systemcatch/following{/other_user}",
            "gists_url": "https://api.github.com/users/systemcatch/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/systemcatch/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/systemcatch/subscriptions",
            "organizations_url": "https://api.github.com/users/systemcatch/orgs",
            "repos_url": "https://api.github.com/users/systemcatch/repos",
            "events_url": "https://api.github.com/users/systemcatch/events{/privacy}",
            "received_events_url": "https://api.github.com/users/systemcatch/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "systemcatch",
                "id": 30196510,
                "node_id": "MDQ6VXNlcjMwMTk2NTEw",
                "avatar_url": "https://avatars.githubusercontent.com/u/30196510?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/systemcatch",
                "html_url": "https://github.com/systemcatch",
                "followers_url": "https://api.github.com/users/systemcatch/followers",
                "following_url": "https://api.github.com/users/systemcatch/following{/other_user}",
                "gists_url": "https://api.github.com/users/systemcatch/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/systemcatch/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/systemcatch/subscriptions",
                "organizations_url": "https://api.github.com/users/systemcatch/orgs",
                "repos_url": "https://api.github.com/users/systemcatch/repos",
                "events_url": "https://api.github.com/users/systemcatch/events{/privacy}",
                "received_events_url": "https://api.github.com/users/systemcatch/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-11-10T19:34:05Z",
        "updated_at": "2021-01-03T12:05:38Z",
        "closed_at": null,
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "As part of dropping Python 2.7/3.5 we no longer need `enfold` to wrap datetime objects.",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/arrow-py/arrow/issues/872",
        "repository_url": "https://api.github.com/repos/arrow-py/arrow",
        "labels_url": "https://api.github.com/repos/arrow-py/arrow/issues/872/labels{/name}",
        "comments_url": "https://api.github.com/repos/arrow-py/arrow/issues/872/comments",
        "events_url": "https://api.github.com/repos/arrow-py/arrow/issues/872/events",
        "html_url": "https://github.com/arrow-py/arrow/issues/872",
        "id": 724430315,
        "node_id": "MDU6SXNzdWU3MjQ0MzAzMTU=",
        "number": 872,
        "title": "Allow fold kwarg in arrow.get()",
        "user": {
            "login": "systemcatch",
            "id": 30196510,
            "node_id": "MDQ6VXNlcjMwMTk2NTEw",
            "avatar_url": "https://avatars.githubusercontent.com/u/30196510?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/systemcatch",
            "html_url": "https://github.com/systemcatch",
            "followers_url": "https://api.github.com/users/systemcatch/followers",
            "following_url": "https://api.github.com/users/systemcatch/following{/other_user}",
            "gists_url": "https://api.github.com/users/systemcatch/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/systemcatch/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/systemcatch/subscriptions",
            "organizations_url": "https://api.github.com/users/systemcatch/orgs",
            "repos_url": "https://api.github.com/users/systemcatch/repos",
            "events_url": "https://api.github.com/users/systemcatch/events{/privacy}",
            "received_events_url": "https://api.github.com/users/systemcatch/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2020-10-19T09:15:06Z",
        "updated_at": "2020-11-29T20:13:02Z",
        "closed_at": null,
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "Currently there is no way to specify which side of an ambiguous datetime we want when creating with `arrow.get()`. It'd be nice to be able to do the following.\r\n\r\n```python\r\narrow.get(\"2001-10-28 01:00:00\", \"YYYY-MM-DD HH:mm:ss\", tzinfo=\"US/Pacific\", fold=1)\r\n```",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/arrow-py/arrow/issues/866",
        "repository_url": "https://api.github.com/repos/arrow-py/arrow",
        "labels_url": "https://api.github.com/repos/arrow-py/arrow/issues/866/labels{/name}",
        "comments_url": "https://api.github.com/repos/arrow-py/arrow/issues/866/comments",
        "events_url": "https://api.github.com/repos/arrow-py/arrow/issues/866/events",
        "html_url": "https://github.com/arrow-py/arrow/issues/866",
        "id": 717006881,
        "node_id": "MDU6SXNzdWU3MTcwMDY4ODE=",
        "number": 866,
        "title": "Support ZoneInfo timezones",
        "user": {
            "login": "jadchaar",
            "id": 7388203,
            "node_id": "MDQ6VXNlcjczODgyMDM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7388203?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jadchaar",
            "html_url": "https://github.com/jadchaar",
            "followers_url": "https://api.github.com/users/jadchaar/followers",
            "following_url": "https://api.github.com/users/jadchaar/following{/other_user}",
            "gists_url": "https://api.github.com/users/jadchaar/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jadchaar/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jadchaar/subscriptions",
            "organizations_url": "https://api.github.com/users/jadchaar/orgs",
            "repos_url": "https://api.github.com/users/jadchaar/repos",
            "events_url": "https://api.github.com/users/jadchaar/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jadchaar/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 19660347,
                "node_id": "MDU6TGFiZWwxOTY2MDM0Nw==",
                "url": "https://api.github.com/repos/arrow-py/arrow/labels/enhancement",
                "name": "enhancement",
                "color": "84b6eb",
                "default": true,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-10-08T04:18:57Z",
        "updated_at": "2020-10-08T21:03:35Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "<!--\r\nThanks for taking the time to submit this feature request.\r\n\r\nPlease provide us with a detailed description of the potential improvement.\r\n-->\r\n\r\n## Feature Request\r\n\r\nIt would be nice to allow for `ZoneInfo` objects to be passed into arrow as an alternative to dateutil timezones.\r\n\r\nA `backports.zoneinfo` package is available that supports Python 3.6+ https://pypi.org/project/backports.zoneinfo/. We'd also need to bundle in the `tzdata` package to enable timezones on Windows with ZoneInfo: https://pypi.org/project/tzdata/.\r\n\r\n<!-- Replace this comment block with a description of the potential improvement. -->\r\n",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/arrow-py/arrow/issues/856",
        "repository_url": "https://api.github.com/repos/arrow-py/arrow",
        "labels_url": "https://api.github.com/repos/arrow-py/arrow/issues/856/labels{/name}",
        "comments_url": "https://api.github.com/repos/arrow-py/arrow/issues/856/comments",
        "events_url": "https://api.github.com/repos/arrow-py/arrow/issues/856/events",
        "html_url": "https://github.com/arrow-py/arrow/issues/856",
        "id": 710621747,
        "node_id": "MDU6SXNzdWU3MTA2MjE3NDc=",
        "number": 856,
        "title": "Add flake8 checks for annotations",
        "user": {
            "login": "jadchaar",
            "id": 7388203,
            "node_id": "MDQ6VXNlcjczODgyMDM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7388203?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jadchaar",
            "html_url": "https://github.com/jadchaar",
            "followers_url": "https://api.github.com/users/jadchaar/followers",
            "following_url": "https://api.github.com/users/jadchaar/following{/other_user}",
            "gists_url": "https://api.github.com/users/jadchaar/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jadchaar/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jadchaar/subscriptions",
            "organizations_url": "https://api.github.com/users/jadchaar/orgs",
            "repos_url": "https://api.github.com/users/jadchaar/repos",
            "events_url": "https://api.github.com/users/jadchaar/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jadchaar/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 19660347,
                "node_id": "MDU6TGFiZWwxOTY2MDM0Nw==",
                "url": "https://api.github.com/repos/arrow-py/arrow/labels/enhancement",
                "name": "enhancement",
                "color": "84b6eb",
                "default": true,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-09-28T22:32:28Z",
        "updated_at": "2020-09-28T22:32:28Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "<!--\r\nThanks for taking the time to submit this feature request.\r\n\r\nPlease provide us with a detailed description of the\r\npotential improvement. Happy feature requesting \ud83d\udca1!\r\n-->\r\n\r\n## Feature Request\r\n<!-- Replace with a description of the potential improvement. -->\r\nAs part of the Python 2.7/3.5 deprecation PR https://github.com/arrow-py/arrow/pull/800, we are adding type annotations. It would be nice to add a flake8 plugin that helps with annotations (e.g. reminds us to place them, static type checking, etc).",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/arrow-py/arrow/issues/832",
        "repository_url": "https://api.github.com/repos/arrow-py/arrow",
        "labels_url": "https://api.github.com/repos/arrow-py/arrow/issues/832/labels{/name}",
        "comments_url": "https://api.github.com/repos/arrow-py/arrow/issues/832/comments",
        "events_url": "https://api.github.com/repos/arrow-py/arrow/issues/832/events",
        "html_url": "https://github.com/arrow-py/arrow/issues/832",
        "id": 665620217,
        "node_id": "MDU6SXNzdWU2NjU2MjAyMTc=",
        "number": 832,
        "title": "Migration guide for v1.0.0",
        "user": {
            "login": "jadchaar",
            "id": 7388203,
            "node_id": "MDQ6VXNlcjczODgyMDM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7388203?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jadchaar",
            "html_url": "https://github.com/jadchaar",
            "followers_url": "https://api.github.com/users/jadchaar/followers",
            "following_url": "https://api.github.com/users/jadchaar/following{/other_user}",
            "gists_url": "https://api.github.com/users/jadchaar/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jadchaar/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jadchaar/subscriptions",
            "organizations_url": "https://api.github.com/users/jadchaar/orgs",
            "repos_url": "https://api.github.com/users/jadchaar/repos",
            "events_url": "https://api.github.com/users/jadchaar/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jadchaar/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1167159350,
                "node_id": "MDU6TGFiZWwxMTY3MTU5MzUw",
                "url": "https://api.github.com/repos/arrow-py/arrow/labels/documentation",
                "name": "documentation",
                "color": "747af2",
                "default": true,
                "description": ""
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": {
            "url": "https://api.github.com/repos/arrow-py/arrow/milestones/2",
            "html_url": "https://github.com/arrow-py/arrow/milestone/2",
            "labels_url": "https://api.github.com/repos/arrow-py/arrow/milestones/2/labels",
            "id": 5598812,
            "node_id": "MDk6TWlsZXN0b25lNTU5ODgxMg==",
            "number": 2,
            "title": "v1.0.0",
            "description": "Issues and PRs targeting a v1.0.0 release and move to full semantic versioning.",
            "creator": {
                "login": "jadchaar",
                "id": 7388203,
                "node_id": "MDQ6VXNlcjczODgyMDM=",
                "avatar_url": "https://avatars.githubusercontent.com/u/7388203?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/jadchaar",
                "html_url": "https://github.com/jadchaar",
                "followers_url": "https://api.github.com/users/jadchaar/followers",
                "following_url": "https://api.github.com/users/jadchaar/following{/other_user}",
                "gists_url": "https://api.github.com/users/jadchaar/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/jadchaar/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jadchaar/subscriptions",
                "organizations_url": "https://api.github.com/users/jadchaar/orgs",
                "repos_url": "https://api.github.com/users/jadchaar/repos",
                "events_url": "https://api.github.com/users/jadchaar/events{/privacy}",
                "received_events_url": "https://api.github.com/users/jadchaar/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 3,
            "closed_issues": 6,
            "state": "open",
            "created_at": "2020-06-30T04:05:23Z",
            "updated_at": "2020-12-20T20:41:49Z",
            "due_on": "2020-09-30T07:00:00Z",
            "closed_at": null
        },
        "comments": 0,
        "created_at": "2020-07-25T17:04:57Z",
        "updated_at": "2021-01-03T12:34:44Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "As we ready the v1.0.0 release of Arrow, we should add a migration guide that outlines the changed APIs and functionality.\r\n\r\n1. The `.timestamp` property has been removed to improve compatibility with `datetime`. Use `.int_timestamp` for the same results.\r\n\r\n```python\r\n>>> arrow.utcnow().int_timestamp\r\n1608640233\r\n```\r\n\r\n2. Arrow has a new method `timestamp()` which wraps the `datetime` method of the same name.\r\n\r\n```python\r\n>>> arrow.utcnow().timestamp()\r\n1608641039.22176\r\n```\r\n\r\n3. It's no longer possible to set the `tzinfo` property directly, instead use `replace()`.\r\n\r\n```python\r\n>>> dt=arrow.utcnow()\r\n>>> dt.tzinfo=tz.gettz(\"US/Pacific\")\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nAttributeError: can't set attribute\r\n>>> dt.replace(tzinfo=tz.gettz(\"US/Pacific\"))\r\n<Arrow [2020-12-22T16:03:29.630250-08:00]>\r\n```\r\n\r\n4. `arrow.get(None)` now returns an error rather than UTC.",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/arrow-py/arrow/issues/825",
        "repository_url": "https://api.github.com/repos/arrow-py/arrow",
        "labels_url": "https://api.github.com/repos/arrow-py/arrow/issues/825/labels{/name}",
        "comments_url": "https://api.github.com/repos/arrow-py/arrow/issues/825/comments",
        "events_url": "https://api.github.com/repos/arrow-py/arrow/issues/825/events",
        "html_url": "https://github.com/arrow-py/arrow/issues/825",
        "id": 660390537,
        "node_id": "MDU6SXNzdWU2NjAzOTA1Mzc=",
        "number": 825,
        "title": "Consider backporting PEP 615",
        "user": {
            "login": "systemcatch",
            "id": 30196510,
            "node_id": "MDQ6VXNlcjMwMTk2NTEw",
            "avatar_url": "https://avatars.githubusercontent.com/u/30196510?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/systemcatch",
            "html_url": "https://github.com/systemcatch",
            "followers_url": "https://api.github.com/users/systemcatch/followers",
            "following_url": "https://api.github.com/users/systemcatch/following{/other_user}",
            "gists_url": "https://api.github.com/users/systemcatch/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/systemcatch/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/systemcatch/subscriptions",
            "organizations_url": "https://api.github.com/users/systemcatch/orgs",
            "repos_url": "https://api.github.com/users/systemcatch/repos",
            "events_url": "https://api.github.com/users/systemcatch/events{/privacy}",
            "received_events_url": "https://api.github.com/users/systemcatch/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 234868270,
                "node_id": "MDU6TGFiZWwyMzQ4NjgyNzA=",
                "url": "https://api.github.com/repos/arrow-py/arrow/labels/proposal",
                "name": "proposal",
                "color": "bfe5bf",
                "default": false,
                "description": ""
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-07-18T21:25:59Z",
        "updated_at": "2020-07-25T17:03:19Z",
        "closed_at": null,
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "Just to make clear, [`backports.zoneinfo` already exists](https://pypi.org/project/backports.zoneinfo/) and in Python 3.6+, I (as the maintainer of `dateutil` and the creator of PEP 615) highly recommend you use it whenever possible. The \"backport\" I'm referring to is that I'm planning to take the underlying logic from the pure-Python implementation of `zoneinfo` and move it into `dateutil.tz`, to the extent possible. That will fix a number of issues, but my major efforts to get PEP 615 ready and working in Python 3.9 made my backlog of work grow enormously \u2639.\r\n\r\n_Originally posted by @pganssle in https://github.com/crsmithdev/arrow/pull/802#issuecomment-660503253_",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/arrow-py/arrow/issues/819",
        "repository_url": "https://api.github.com/repos/arrow-py/arrow",
        "labels_url": "https://api.github.com/repos/arrow-py/arrow/issues/819/labels{/name}",
        "comments_url": "https://api.github.com/repos/arrow-py/arrow/issues/819/comments",
        "events_url": "https://api.github.com/repos/arrow-py/arrow/issues/819/events",
        "html_url": "https://github.com/arrow-py/arrow/issues/819",
        "id": 655272285,
        "node_id": "MDU6SXNzdWU2NTUyNzIyODU=",
        "number": 819,
        "title": "Audit and improve docstrings",
        "user": {
            "login": "jadchaar",
            "id": 7388203,
            "node_id": "MDQ6VXNlcjczODgyMDM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7388203?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jadchaar",
            "html_url": "https://github.com/jadchaar",
            "followers_url": "https://api.github.com/users/jadchaar/followers",
            "following_url": "https://api.github.com/users/jadchaar/following{/other_user}",
            "gists_url": "https://api.github.com/users/jadchaar/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jadchaar/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jadchaar/subscriptions",
            "organizations_url": "https://api.github.com/users/jadchaar/orgs",
            "repos_url": "https://api.github.com/users/jadchaar/repos",
            "events_url": "https://api.github.com/users/jadchaar/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jadchaar/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1167159350,
                "node_id": "MDU6TGFiZWwxMTY3MTU5MzUw",
                "url": "https://api.github.com/repos/arrow-py/arrow/labels/documentation",
                "name": "documentation",
                "color": "747af2",
                "default": true,
                "description": ""
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": {
            "url": "https://api.github.com/repos/arrow-py/arrow/milestones/2",
            "html_url": "https://github.com/arrow-py/arrow/milestone/2",
            "labels_url": "https://api.github.com/repos/arrow-py/arrow/milestones/2/labels",
            "id": 5598812,
            "node_id": "MDk6TWlsZXN0b25lNTU5ODgxMg==",
            "number": 2,
            "title": "v1.0.0",
            "description": "Issues and PRs targeting a v1.0.0 release and move to full semantic versioning.",
            "creator": {
                "login": "jadchaar",
                "id": 7388203,
                "node_id": "MDQ6VXNlcjczODgyMDM=",
                "avatar_url": "https://avatars.githubusercontent.com/u/7388203?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/jadchaar",
                "html_url": "https://github.com/jadchaar",
                "followers_url": "https://api.github.com/users/jadchaar/followers",
                "following_url": "https://api.github.com/users/jadchaar/following{/other_user}",
                "gists_url": "https://api.github.com/users/jadchaar/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/jadchaar/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jadchaar/subscriptions",
                "organizations_url": "https://api.github.com/users/jadchaar/orgs",
                "repos_url": "https://api.github.com/users/jadchaar/repos",
                "events_url": "https://api.github.com/users/jadchaar/events{/privacy}",
                "received_events_url": "https://api.github.com/users/jadchaar/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 3,
            "closed_issues": 6,
            "state": "open",
            "created_at": "2020-06-30T04:05:23Z",
            "updated_at": "2020-12-20T20:41:49Z",
            "due_on": "2020-09-30T07:00:00Z",
            "closed_at": null
        },
        "comments": 0,
        "created_at": "2020-07-11T20:16:14Z",
        "updated_at": "2021-01-01T13:29:56Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "<!--\r\nThanks for taking the time to submit documentation feedback.\r\n\r\nPlease provide us with a detailed description of the documentation issue.\r\n-->\r\n\r\n## Issue Description\r\n\r\n<!-- Replace with a description of the documentation issue. -->\r\n\r\nIn preparation for the v1.0.0 release, we should audit all the docstrings in the package to make sure they conform to the [Sphinx docstring standards](https://sphinx-rtd-tutorial.readthedocs.io/en/latest/docstrings.html).\r\n\r\nWe should make sure `:param:` and `:return:` are included at the very least on every function, including internal utility functions. Type documentation may not be necessary since we will be adding type annotations as part of https://github.com/crsmithdev/arrow/pull/800.\r\n\r\nIn addition to docstring formatting, we should also audit the docstrings for typos and/or refactor some of the wording to make the interfaces and APIs more clear. Adding a docstring checker like pydocstyle and an automatic docstring formatter could be good additions as well.",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/arrow-py/arrow/issues/818",
        "repository_url": "https://api.github.com/repos/arrow-py/arrow",
        "labels_url": "https://api.github.com/repos/arrow-py/arrow/issues/818/labels{/name}",
        "comments_url": "https://api.github.com/repos/arrow-py/arrow/issues/818/comments",
        "events_url": "https://api.github.com/repos/arrow-py/arrow/issues/818/events",
        "html_url": "https://github.com/arrow-py/arrow/issues/818",
        "id": 651124689,
        "node_id": "MDU6SXNzdWU2NTExMjQ2ODk=",
        "number": 818,
        "title": "Support for capitalisation in date formatting",
        "user": {
            "login": "virresh",
            "id": 10978108,
            "node_id": "MDQ6VXNlcjEwOTc4MTA4",
            "avatar_url": "https://avatars.githubusercontent.com/u/10978108?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/virresh",
            "html_url": "https://github.com/virresh",
            "followers_url": "https://api.github.com/users/virresh/followers",
            "following_url": "https://api.github.com/users/virresh/following{/other_user}",
            "gists_url": "https://api.github.com/users/virresh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/virresh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/virresh/subscriptions",
            "organizations_url": "https://api.github.com/users/virresh/orgs",
            "repos_url": "https://api.github.com/users/virresh/repos",
            "events_url": "https://api.github.com/users/virresh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/virresh/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1167159350,
                "node_id": "MDU6TGFiZWwxMTY3MTU5MzUw",
                "url": "https://api.github.com/repos/arrow-py/arrow/labels/documentation",
                "name": "documentation",
                "color": "747af2",
                "default": true,
                "description": ""
            },
            {
                "id": 19660347,
                "node_id": "MDU6TGFiZWwxOTY2MDM0Nw==",
                "url": "https://api.github.com/repos/arrow-py/arrow/labels/enhancement",
                "name": "enhancement",
                "color": "84b6eb",
                "default": true,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2020-07-05T18:51:50Z",
        "updated_at": "2020-07-10T00:47:24Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "<!--\r\nThanks for taking the time to submit this feature request.\r\n\r\nPlease provide us with a detailed description of the\r\npotential improvement. Happy feature requesting \ud83d\udca1!\r\n-->\r\n\r\n## Feature Request\r\nIn glibc strftime, we have the `^`  operator which provides this functionality. However, it's not cross-platform, and surprisingly there exists no clean way to uppercase alphabets in Windows. I have faced this issue and am looking for an alternative that will allow me to do this in a platform-agnostic way. It is supported out of the box by Java's `String.format()`.\r\n\r\nPS: I can't just do .to_upper() to the string\r\n\r\nA detailed example for such use case:\r\n\r\nI need to generate get requests to a server, one day after another. The url paths on that server are case sensitive and I have multiple websites on which I need to do this testing. So essentially I need someting like:\r\n```\r\nrequests.get('www.example.com/JUN/06/2020/file.csv')\r\nrequests.get('www.example.com/JUL/06/2020/file.csv')\r\nrequests.get('www.example.com/AUG/06/2020/file.csv')\r\n```\r\nOn glibc, I can simply do:\r\n```\r\ndate.format('www.example.com/%^b/%d/%Y/file.csv')\r\n```\r\nand get the desired file because it supports capitalisation. However, there is no clean alternative to do the same in windows. I'm hoping Arrow would bridge the gap.\r\n<!-- Replace with a description of the potential improvement. -->\r\n\r\n\r\nIn, fact, if feasible, it'll be a great addition if arrow can support all glibc extensions.\r\n\r\n\r\n\r\nPardon me if arrow already supports this, but I couldn't figure it out from the documentation.",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/arrow-py/arrow/issues/789",
        "repository_url": "https://api.github.com/repos/arrow-py/arrow",
        "labels_url": "https://api.github.com/repos/arrow-py/arrow/issues/789/labels{/name}",
        "comments_url": "https://api.github.com/repos/arrow-py/arrow/issues/789/comments",
        "events_url": "https://api.github.com/repos/arrow-py/arrow/issues/789/events",
        "html_url": "https://github.com/arrow-py/arrow/issues/789",
        "id": 617905732,
        "node_id": "MDU6SXNzdWU2MTc5MDU3MzI=",
        "number": 789,
        "title": "Floats in humanize output for languages overriding _format_timeframe",
        "user": {
            "login": "krisfremen",
            "id": 1108071,
            "node_id": "MDQ6VXNlcjExMDgwNzE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1108071?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/krisfremen",
            "html_url": "https://github.com/krisfremen",
            "followers_url": "https://api.github.com/users/krisfremen/followers",
            "following_url": "https://api.github.com/users/krisfremen/following{/other_user}",
            "gists_url": "https://api.github.com/users/krisfremen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/krisfremen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/krisfremen/subscriptions",
            "organizations_url": "https://api.github.com/users/krisfremen/orgs",
            "repos_url": "https://api.github.com/users/krisfremen/repos",
            "events_url": "https://api.github.com/users/krisfremen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/krisfremen/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 19660345,
                "node_id": "MDU6TGFiZWwxOTY2MDM0NQ==",
                "url": "https://api.github.com/repos/arrow-py/arrow/labels/bug",
                "name": "bug",
                "color": "fc2929",
                "default": true,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2020-05-14T03:59:57Z",
        "updated_at": "2020-11-08T03:20:06Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "<!--\r\nThanks for taking the time to submit this bug report.\r\n\r\nPlease provide us with a detailed description of the\r\nbug and a bit of information about your system.\r\n-->\r\n\r\n## Issue Description\r\n\r\nDoing humanize on languages that override _format_timeframe is spitting out floats instead of integers which is not nice on the eye.\r\n\r\n```\r\narrow.utcnow().shift(weeks=5).humanize(locale=\"en\", granularity=\"day\")\r\n'in 35 days'\r\narrow.utcnow().shift(weeks=5).humanize(locale=\"bg\", granularity=\"day\")\r\n'\u043d\u0430\u043f\u0440\u0435\u0434 35.0 \u0434\u043d\u0438'\r\narrow.utcnow().shift(seconds=55000).humanize(locale=\"bg\", granularity=\"minute\")\r\n'\u043d\u0430\u043f\u0440\u0435\u0434 916.6666666666666 \u043c\u0438\u043d\u0443\u0442\u0438'\r\n```\r\n<!--\r\nReplace with a description of the bug.\r\n\r\nBe sure to include details such as the expected\r\nand actual outcomes. Happy bug reporting \ud83d\udc1e!\r\n-->\r\n\r\n## System Info\r\n\r\n- \ud83d\udda5 **OS name and version**: Debian Buster(10)\r\n- \ud83d\udc0d **Python version**: 3.7.3\r\n- \ud83c\udff9 **Arrow version**: 0.15.6\r\n",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/arrow-py/arrow/issues/757",
        "repository_url": "https://api.github.com/repos/arrow-py/arrow",
        "labels_url": "https://api.github.com/repos/arrow-py/arrow/issues/757/labels{/name}",
        "comments_url": "https://api.github.com/repos/arrow-py/arrow/issues/757/comments",
        "events_url": "https://api.github.com/repos/arrow-py/arrow/issues/757/events",
        "html_url": "https://github.com/arrow-py/arrow/issues/757",
        "id": 566815036,
        "node_id": "MDU6SXNzdWU1NjY4MTUwMzY=",
        "number": 757,
        "title": "Investigate support for ISO 8601 Durations/Time Intervals",
        "user": {
            "login": "systemcatch",
            "id": 30196510,
            "node_id": "MDQ6VXNlcjMwMTk2NTEw",
            "avatar_url": "https://avatars.githubusercontent.com/u/30196510?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/systemcatch",
            "html_url": "https://github.com/systemcatch",
            "followers_url": "https://api.github.com/users/systemcatch/followers",
            "following_url": "https://api.github.com/users/systemcatch/following{/other_user}",
            "gists_url": "https://api.github.com/users/systemcatch/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/systemcatch/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/systemcatch/subscriptions",
            "organizations_url": "https://api.github.com/users/systemcatch/orgs",
            "repos_url": "https://api.github.com/users/systemcatch/repos",
            "events_url": "https://api.github.com/users/systemcatch/events{/privacy}",
            "received_events_url": "https://api.github.com/users/systemcatch/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 234868270,
                "node_id": "MDU6TGFiZWwyMzQ4NjgyNzA=",
                "url": "https://api.github.com/repos/arrow-py/arrow/labels/proposal",
                "name": "proposal",
                "color": "bfe5bf",
                "default": false,
                "description": ""
            },
            {
                "id": 1504629450,
                "node_id": "MDU6TGFiZWwxNTA0NjI5NDUw",
                "url": "https://api.github.com/repos/arrow-py/arrow/labels/question%20for%20community",
                "name": "question for community",
                "color": "e9f9a7",
                "default": false,
                "description": ""
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2020-02-18T11:02:53Z",
        "updated_at": "2020-06-29T13:08:14Z",
        "closed_at": null,
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "ISO 8601 allows durations and time intervals, maybe we should consider supporting this in arrow via a separate class or some other method.\r\n\r\nhttps://en.wikipedia.org/wiki/ISO_8601#Durations\r\n\r\nThis is quite a bit of work so we'd need to know this would actually be useful and used.",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/arrow-py/arrow/issues/755",
        "repository_url": "https://api.github.com/repos/arrow-py/arrow",
        "labels_url": "https://api.github.com/repos/arrow-py/arrow/issues/755/labels{/name}",
        "comments_url": "https://api.github.com/repos/arrow-py/arrow/issues/755/comments",
        "events_url": "https://api.github.com/repos/arrow-py/arrow/issues/755/events",
        "html_url": "https://github.com/arrow-py/arrow/issues/755",
        "id": 562507904,
        "node_id": "MDU6SXNzdWU1NjI1MDc5MDQ=",
        "number": 755,
        "title": "Pandas Timestamp created from Arrow's don't behave correctly",
        "user": {
            "login": "antoine-gallix",
            "id": 7696611,
            "node_id": "MDQ6VXNlcjc2OTY2MTE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7696611?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/antoine-gallix",
            "html_url": "https://github.com/antoine-gallix",
            "followers_url": "https://api.github.com/users/antoine-gallix/followers",
            "following_url": "https://api.github.com/users/antoine-gallix/following{/other_user}",
            "gists_url": "https://api.github.com/users/antoine-gallix/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/antoine-gallix/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/antoine-gallix/subscriptions",
            "organizations_url": "https://api.github.com/users/antoine-gallix/orgs",
            "repos_url": "https://api.github.com/users/antoine-gallix/repos",
            "events_url": "https://api.github.com/users/antoine-gallix/events{/privacy}",
            "received_events_url": "https://api.github.com/users/antoine-gallix/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 19660345,
                "node_id": "MDU6TGFiZWwxOTY2MDM0NQ==",
                "url": "https://api.github.com/repos/arrow-py/arrow/labels/bug",
                "name": "bug",
                "color": "fc2929",
                "default": true,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2020-02-10T11:46:26Z",
        "updated_at": "2020-02-12T13:44:06Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I've encountered an issue while using Arrow to build panda's Timestamp data type. I've reported the bug on panda's repo but I've received an answer that suggest a solution might be on arrow's side so here I share the link to the issue: https://github.com/pandas-dev/pandas/issues/31793\r\n\r\nWhat is your opinion on where should be the problem resolved? On Arrow's side to make it behave more like a datetime, or on Panda's side to reject or transform Arrow instances when used to create a Timestamp?\r\n",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/arrow-py/arrow/issues/749",
        "repository_url": "https://api.github.com/repos/arrow-py/arrow",
        "labels_url": "https://api.github.com/repos/arrow-py/arrow/issues/749/labels{/name}",
        "comments_url": "https://api.github.com/repos/arrow-py/arrow/issues/749/comments",
        "events_url": "https://api.github.com/repos/arrow-py/arrow/issues/749/events",
        "html_url": "https://github.com/arrow-py/arrow/issues/749",
        "id": 545049125,
        "node_id": "MDU6SXNzdWU1NDUwNDkxMjU=",
        "number": 749,
        "title": "Refactor humanize() method, expand usage, fix edge cases",
        "user": {
            "login": "systemcatch",
            "id": 30196510,
            "node_id": "MDQ6VXNlcjMwMTk2NTEw",
            "avatar_url": "https://avatars.githubusercontent.com/u/30196510?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/systemcatch",
            "html_url": "https://github.com/systemcatch",
            "followers_url": "https://api.github.com/users/systemcatch/followers",
            "following_url": "https://api.github.com/users/systemcatch/following{/other_user}",
            "gists_url": "https://api.github.com/users/systemcatch/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/systemcatch/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/systemcatch/subscriptions",
            "organizations_url": "https://api.github.com/users/systemcatch/orgs",
            "repos_url": "https://api.github.com/users/systemcatch/repos",
            "events_url": "https://api.github.com/users/systemcatch/events{/privacy}",
            "received_events_url": "https://api.github.com/users/systemcatch/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 19660347,
                "node_id": "MDU6TGFiZWwxOTY2MDM0Nw==",
                "url": "https://api.github.com/repos/arrow-py/arrow/labels/enhancement",
                "name": "enhancement",
                "color": "84b6eb",
                "default": true,
                "description": null
            },
            {
                "id": 1454932378,
                "node_id": "MDU6TGFiZWwxNDU0OTMyMzc4",
                "url": "https://api.github.com/repos/arrow-py/arrow/labels/performance",
                "name": "performance",
                "color": "f95eff",
                "default": false,
                "description": ""
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2020-01-03T15:53:45Z",
        "updated_at": "2021-01-01T20:06:35Z",
        "closed_at": null,
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "`.humanize()` is getting kind of long and could do with refactoring. We'd also like to explore allowing other inputs such as `date` and `timedelta` objects.",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/arrow-py/arrow/issues/725",
        "repository_url": "https://api.github.com/repos/arrow-py/arrow",
        "labels_url": "https://api.github.com/repos/arrow-py/arrow/issues/725/labels{/name}",
        "comments_url": "https://api.github.com/repos/arrow-py/arrow/issues/725/comments",
        "events_url": "https://api.github.com/repos/arrow-py/arrow/issues/725/events",
        "html_url": "https://github.com/arrow-py/arrow/issues/725",
        "id": 532258974,
        "node_id": "MDU6SXNzdWU1MzIyNTg5NzQ=",
        "number": 725,
        "title": "Improve parsing of nautral language string with punctuation",
        "user": {
            "login": "systemcatch",
            "id": 30196510,
            "node_id": "MDQ6VXNlcjMwMTk2NTEw",
            "avatar_url": "https://avatars.githubusercontent.com/u/30196510?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/systemcatch",
            "html_url": "https://github.com/systemcatch",
            "followers_url": "https://api.github.com/users/systemcatch/followers",
            "following_url": "https://api.github.com/users/systemcatch/following{/other_user}",
            "gists_url": "https://api.github.com/users/systemcatch/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/systemcatch/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/systemcatch/subscriptions",
            "organizations_url": "https://api.github.com/users/systemcatch/orgs",
            "repos_url": "https://api.github.com/users/systemcatch/repos",
            "events_url": "https://api.github.com/users/systemcatch/events{/privacy}",
            "received_events_url": "https://api.github.com/users/systemcatch/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 19660347,
                "node_id": "MDU6TGFiZWwxOTY2MDM0Nw==",
                "url": "https://api.github.com/repos/arrow-py/arrow/labels/enhancement",
                "name": "enhancement",
                "color": "84b6eb",
                "default": true,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2019-12-03T20:53:35Z",
        "updated_at": "2020-03-03T17:54:24Z",
        "closed_at": null,
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "I don't think any number would work in my implementation but I can increase it to any finite number you want (say 2 or 3 punctuation marks). I think one is fine; more than two is probably overkill.\r\n\r\nEdit: Maybe allow 3 or 4 due to the use of \"...\", although I'm not sure how often people use those after dates. I could see people using a date like this: He said, \"The date is 1/2/13.\" So maybe increasing the constraint is actually a good idea, and I can increase it infinitely following the date, just not preceding it.\r\n\r\n_Originally posted by @andrewchouman in https://github.com/crsmithdev/arrow/pull/720_\r\n\r\n===========================================================\r\n\r\nI tend to agree, but the only thing that concerns me is that this worked pre 0.15.0 (I chose 0.13.0 for example):\r\n```shell\r\nvenv \u276f python3\r\nPython 3.7.3 (v3.7.3:ef4ec6ed12, Mar 25 2019, 16:52:21)\r\n[Clang 6.0 (clang-600.0.57)] on darwin\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import arrow\r\n>>> arrow.__version__\r\n'0.13.0'\r\n>>> arrow.get(\"This date has too many punctuation marks following it 11.11.2011\", \"DD.MM.YYYY\")\r\n<Arrow [2011-11-11T00:00:00+00:00]>\r\n>>> arrow.get(\"This date has too many punctuation marks following it (11.11.2011)\", \"DD.MM.YYYY\")\r\n<Arrow [2011-11-11T00:00:00+00:00]>\r\n>>> arrow.get(\"This date has too many punctuation marks following it (11.11.2011).\", \"DD.MM.YYYY\")\r\n<Arrow [2011-11-11T00:00:00+00:00]>\r\n```\r\n\r\nThis is definitely an improvement, but for full pre-0.15.0 behavior while still containing improvements, we probably need to add support for any number of punctuation marks. Curious, why would finite numbers work but not infinite (e.g. with the `+` quantifier in regex)?\r\n\r\n_Originally posted by @jadchaar in https://github.com/crsmithdev/arrow/pull/720_",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/arrow-py/arrow/issues/675",
        "repository_url": "https://api.github.com/repos/arrow-py/arrow",
        "labels_url": "https://api.github.com/repos/arrow-py/arrow/issues/675/labels{/name}",
        "comments_url": "https://api.github.com/repos/arrow-py/arrow/issues/675/comments",
        "events_url": "https://api.github.com/repos/arrow-py/arrow/issues/675/events",
        "html_url": "https://github.com/arrow-py/arrow/issues/675",
        "id": 493636167,
        "node_id": "MDU6SXNzdWU0OTM2MzYxNjc=",
        "number": 675,
        "title": "Add support for negative timestamps on Windows (before the epoch)",
        "user": {
            "login": "jadchaar",
            "id": 7388203,
            "node_id": "MDQ6VXNlcjczODgyMDM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7388203?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jadchaar",
            "html_url": "https://github.com/jadchaar",
            "followers_url": "https://api.github.com/users/jadchaar/followers",
            "following_url": "https://api.github.com/users/jadchaar/following{/other_user}",
            "gists_url": "https://api.github.com/users/jadchaar/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jadchaar/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jadchaar/subscriptions",
            "organizations_url": "https://api.github.com/users/jadchaar/orgs",
            "repos_url": "https://api.github.com/users/jadchaar/repos",
            "events_url": "https://api.github.com/users/jadchaar/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jadchaar/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 19660347,
                "node_id": "MDU6TGFiZWwxOTY2MDM0Nw==",
                "url": "https://api.github.com/repos/arrow-py/arrow/labels/enhancement",
                "name": "enhancement",
                "color": "84b6eb",
                "default": true,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2019-09-14T15:42:30Z",
        "updated_at": "2020-08-29T03:43:52Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "Currently, on Windows, you get the following error if you pass a negative timestamp:\r\n\r\n```shell\r\n(arrow) C:\\Users\\Chris>python\r\nPython 3.7.4 (tags/v3.7.4:e09359112e, Jul  8 2019, 20:34:20) [MSC v.1916 64 bit (AMD64)] on win32\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import arrow\r\n>>> arrow.get(-15675657)\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"C:\\Users\\Chris\\arrow\\lib\\site-packages\\arrow\\api.py\", line 21, in get\r\n    return _factory.get(*args, **kwargs)\r\n  File \"C:\\Users\\Chris\\arrow\\lib\\site-packages\\arrow\\factory.py\", line 155, in get\r\n    return self.type.utcfromtimestamp(arg)\r\n  File \"C:\\Users\\Chris\\arrow\\lib\\site-packages\\arrow\\arrow.py\", line 166, in utcfromtimestamp\r\n    dt = datetime.utcfromtimestamp(timestamp)\r\nOSError: [Errno 22] Invalid argument\r\n```\r\n\r\nThis occurs on all versions of Arrow on Windows and seems to be due to limitations of the `fromtimestamp` and `utcfromtimestamp` methods in the datetime library on Windows.\r\n\r\nThis functionality works fine on Linux and MacOS:\r\n\r\n```shell\r\nvenv \u276f python\r\nPython 3.7.3 (v3.7.3:ef4ec6ed12, Mar 25 2019, 16:52:21)\r\n[Clang 6.0 (clang-600.0.57)] on darwin\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import arrow\r\n>>> import time\r\n>>> arrow.get(time.time())\r\n<Arrow [2019-09-14T15:41:17.997282+00:00]>\r\n>>> arrow.get(time.time() * -1)\r\n<Arrow [1920-04-19T08:18:37.826506+00:00]>\r\n```",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/arrow-py/arrow/issues/650",
        "repository_url": "https://api.github.com/repos/arrow-py/arrow",
        "labels_url": "https://api.github.com/repos/arrow-py/arrow/issues/650/labels{/name}",
        "comments_url": "https://api.github.com/repos/arrow-py/arrow/issues/650/comments",
        "events_url": "https://api.github.com/repos/arrow-py/arrow/issues/650/events",
        "html_url": "https://github.com/arrow-py/arrow/issues/650",
        "id": 486974632,
        "node_id": "MDU6SXNzdWU0ODY5NzQ2MzI=",
        "number": 650,
        "title": "Bulk feature request: support timedeltas, milliseconds and below",
        "user": {
            "login": "bersbersbers",
            "id": 12128514,
            "node_id": "MDQ6VXNlcjEyMTI4NTE0",
            "avatar_url": "https://avatars.githubusercontent.com/u/12128514?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bersbersbers",
            "html_url": "https://github.com/bersbersbers",
            "followers_url": "https://api.github.com/users/bersbersbers/followers",
            "following_url": "https://api.github.com/users/bersbersbers/following{/other_user}",
            "gists_url": "https://api.github.com/users/bersbersbers/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bersbersbers/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bersbersbers/subscriptions",
            "organizations_url": "https://api.github.com/users/bersbersbers/orgs",
            "repos_url": "https://api.github.com/users/bersbersbers/repos",
            "events_url": "https://api.github.com/users/bersbersbers/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bersbersbers/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 234868270,
                "node_id": "MDU6TGFiZWwyMzQ4NjgyNzA=",
                "url": "https://api.github.com/repos/arrow-py/arrow/labels/proposal",
                "name": "proposal",
                "color": "bfe5bf",
                "default": false,
                "description": ""
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2019-08-29T13:56:35Z",
        "updated_at": "2019-09-04T01:55:19Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I would like to use `arrow`'s `humanize()` for the bold part of this:\r\n\r\n> Task has completed in **10 seconds**. With 1000 subtasks, that is **10 milliseconds** per subtask.\r\n\r\nCurrently, this seems hard for two reasons. First, from the start time that I stored, I need to compute the `delta` to `now` myself, divide the `delta` by 1000, subtract it from `now`, and then output that. That seems unncessarily complicated.\r\n\r\nSecond, everything below one second is \"a moment\" or something like that.\r\n\r\nOr have I missed anything?",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/arrow-py/arrow/issues/617",
        "repository_url": "https://api.github.com/repos/arrow-py/arrow",
        "labels_url": "https://api.github.com/repos/arrow-py/arrow/issues/617/labels{/name}",
        "comments_url": "https://api.github.com/repos/arrow-py/arrow/issues/617/comments",
        "events_url": "https://api.github.com/repos/arrow-py/arrow/issues/617/events",
        "html_url": "https://github.com/arrow-py/arrow/issues/617",
        "id": 468971994,
        "node_id": "MDU6SXNzdWU0Njg5NzE5OTQ=",
        "number": 617,
        "title": "Add Cython support to speed up arrow.get",
        "user": {
            "login": "jadchaar",
            "id": 7388203,
            "node_id": "MDQ6VXNlcjczODgyMDM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7388203?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jadchaar",
            "html_url": "https://github.com/jadchaar",
            "followers_url": "https://api.github.com/users/jadchaar/followers",
            "following_url": "https://api.github.com/users/jadchaar/following{/other_user}",
            "gists_url": "https://api.github.com/users/jadchaar/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jadchaar/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jadchaar/subscriptions",
            "organizations_url": "https://api.github.com/users/jadchaar/orgs",
            "repos_url": "https://api.github.com/users/jadchaar/repos",
            "events_url": "https://api.github.com/users/jadchaar/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jadchaar/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 19660347,
                "node_id": "MDU6TGFiZWwxOTY2MDM0Nw==",
                "url": "https://api.github.com/repos/arrow-py/arrow/labels/enhancement",
                "name": "enhancement",
                "color": "84b6eb",
                "default": true,
                "description": null
            },
            {
                "id": 1454932378,
                "node_id": "MDU6TGFiZWwxNDU0OTMyMzc4",
                "url": "https://api.github.com/repos/arrow-py/arrow/labels/performance",
                "name": "performance",
                "color": "f95eff",
                "default": false,
                "description": ""
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2019-07-17T03:52:33Z",
        "updated_at": "2020-03-27T19:02:36Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "We had a PR in 2017 that addressed this issue (https://github.com/crsmithdev/arrow/pull/414), but it was never merged in, and the Cython implementation has since gotten outdated. It would be great if someone could take on this issue.",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/arrow-py/arrow/issues/552",
        "repository_url": "https://api.github.com/repos/arrow-py/arrow",
        "labels_url": "https://api.github.com/repos/arrow-py/arrow/issues/552/labels{/name}",
        "comments_url": "https://api.github.com/repos/arrow-py/arrow/issues/552/comments",
        "events_url": "https://api.github.com/repos/arrow-py/arrow/issues/552/events",
        "html_url": "https://github.com/arrow-py/arrow/issues/552",
        "id": 389273673,
        "node_id": "MDU6SXNzdWUzODkyNzM2NzM=",
        "number": 552,
        "title": "Arrow needs more contributors and maintainers \ud83d\udea7",
        "user": {
            "login": "systemcatch",
            "id": 30196510,
            "node_id": "MDQ6VXNlcjMwMTk2NTEw",
            "avatar_url": "https://avatars.githubusercontent.com/u/30196510?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/systemcatch",
            "html_url": "https://github.com/systemcatch",
            "followers_url": "https://api.github.com/users/systemcatch/followers",
            "following_url": "https://api.github.com/users/systemcatch/following{/other_user}",
            "gists_url": "https://api.github.com/users/systemcatch/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/systemcatch/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/systemcatch/subscriptions",
            "organizations_url": "https://api.github.com/users/systemcatch/orgs",
            "repos_url": "https://api.github.com/users/systemcatch/repos",
            "events_url": "https://api.github.com/users/systemcatch/events{/privacy}",
            "received_events_url": "https://api.github.com/users/systemcatch/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 1377887493,
                "node_id": "MDU6TGFiZWwxMzc3ODg3NDkz",
                "url": "https://api.github.com/repos/arrow-py/arrow/labels/help%20wanted",
                "name": "help wanted",
                "color": "8dfcde",
                "default": true,
                "description": ""
            },
            {
                "id": 1544185139,
                "node_id": "MDU6TGFiZWwxNTQ0MTg1MTM5",
                "url": "https://api.github.com/repos/arrow-py/arrow/labels/note",
                "name": "note",
                "color": "64fc6a",
                "default": false,
                "description": ""
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2018-12-10T12:12:17Z",
        "updated_at": "2020-12-13T16:46:37Z",
        "closed_at": null,
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "Recently the activity in this repo has been really low. Lots of old PR's and issues without any followup, last commit was in March, no release or tag since 0.10.0.\r\n\r\nI'd be prepared to help with issues, PR's and general maintenance. Maybe there are others who would as well? The more people who help out the easier it'll be. \r\n\r\nI really like this package and would be sorry to see it go stale.\r\n\r\n@crsmithdev @Syeberman @andrewelkins ",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/arrow-py/arrow/issues/536",
        "repository_url": "https://api.github.com/repos/arrow-py/arrow",
        "labels_url": "https://api.github.com/repos/arrow-py/arrow/issues/536/labels{/name}",
        "comments_url": "https://api.github.com/repos/arrow-py/arrow/issues/536/comments",
        "events_url": "https://api.github.com/repos/arrow-py/arrow/issues/536/events",
        "html_url": "https://github.com/arrow-py/arrow/issues/536",
        "id": 315420131,
        "node_id": "MDU6SXNzdWUzMTU0MjAxMzE=",
        "number": 536,
        "title": "Add halfhour frame to ceil and floor ",
        "user": {
            "login": "glennpierce",
            "id": 691783,
            "node_id": "MDQ6VXNlcjY5MTc4Mw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/691783?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/glennpierce",
            "html_url": "https://github.com/glennpierce",
            "followers_url": "https://api.github.com/users/glennpierce/followers",
            "following_url": "https://api.github.com/users/glennpierce/following{/other_user}",
            "gists_url": "https://api.github.com/users/glennpierce/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/glennpierce/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/glennpierce/subscriptions",
            "organizations_url": "https://api.github.com/users/glennpierce/orgs",
            "repos_url": "https://api.github.com/users/glennpierce/repos",
            "events_url": "https://api.github.com/users/glennpierce/events{/privacy}",
            "received_events_url": "https://api.github.com/users/glennpierce/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 19660347,
                "node_id": "MDU6TGFiZWwxOTY2MDM0Nw==",
                "url": "https://api.github.com/repos/arrow-py/arrow/labels/enhancement",
                "name": "enhancement",
                "color": "84b6eb",
                "default": true,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2018-04-18T10:22:01Z",
        "updated_at": "2019-08-21T21:36:26Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Would it be possible to add a halfhour to _get_frames to allow ceil and round to \r\nround to the nearest half hour ?\r\n\r\nOr is that currently possible ?",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/arrow-py/arrow/issues/512",
        "repository_url": "https://api.github.com/repos/arrow-py/arrow",
        "labels_url": "https://api.github.com/repos/arrow-py/arrow/issues/512/labels{/name}",
        "comments_url": "https://api.github.com/repos/arrow-py/arrow/issues/512/comments",
        "events_url": "https://api.github.com/repos/arrow-py/arrow/issues/512/events",
        "html_url": "https://github.com/arrow-py/arrow/issues/512",
        "id": 290150218,
        "node_id": "MDU6SXNzdWUyOTAxNTAyMTg=",
        "number": 512,
        "title": "Roadmap and ideas for arrow \ud83e\udd14",
        "user": {
            "login": "danqing",
            "id": 5134133,
            "node_id": "MDQ6VXNlcjUxMzQxMzM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5134133?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/danqing",
            "html_url": "https://github.com/danqing",
            "followers_url": "https://api.github.com/users/danqing/followers",
            "following_url": "https://api.github.com/users/danqing/following{/other_user}",
            "gists_url": "https://api.github.com/users/danqing/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/danqing/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/danqing/subscriptions",
            "organizations_url": "https://api.github.com/users/danqing/orgs",
            "repos_url": "https://api.github.com/users/danqing/repos",
            "events_url": "https://api.github.com/users/danqing/events{/privacy}",
            "received_events_url": "https://api.github.com/users/danqing/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 27,
        "created_at": "2018-01-20T01:01:36Z",
        "updated_at": "2020-05-03T11:01:12Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "This thread was originally opened to request GitHub release and changelogs. That has been done, and the thread is now used as roadmap and ideas. Scroll to the bottom to see them. Thanks @crsmithdev and maintainers!",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/arrow-py/arrow/issues/505",
        "repository_url": "https://api.github.com/repos/arrow-py/arrow",
        "labels_url": "https://api.github.com/repos/arrow-py/arrow/issues/505/labels{/name}",
        "comments_url": "https://api.github.com/repos/arrow-py/arrow/issues/505/comments",
        "events_url": "https://api.github.com/repos/arrow-py/arrow/issues/505/events",
        "html_url": "https://github.com/arrow-py/arrow/issues/505",
        "id": 282691599,
        "node_id": "MDU6SXNzdWUyODI2OTE1OTk=",
        "number": 505,
        "title": "arrow.span_range doesn't start from the start_date that I requested",
        "user": {
            "login": "arLevi",
            "id": 1129836,
            "node_id": "MDQ6VXNlcjExMjk4MzY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1129836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arLevi",
            "html_url": "https://github.com/arLevi",
            "followers_url": "https://api.github.com/users/arLevi/followers",
            "following_url": "https://api.github.com/users/arLevi/following{/other_user}",
            "gists_url": "https://api.github.com/users/arLevi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arLevi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arLevi/subscriptions",
            "organizations_url": "https://api.github.com/users/arLevi/orgs",
            "repos_url": "https://api.github.com/users/arLevi/repos",
            "events_url": "https://api.github.com/users/arLevi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arLevi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 19660345,
                "node_id": "MDU6TGFiZWwxOTY2MDM0NQ==",
                "url": "https://api.github.com/repos/arrow-py/arrow/labels/bug",
                "name": "bug",
                "color": "fc2929",
                "default": true,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2017-12-17T12:52:00Z",
        "updated_at": "2020-11-23T10:19:29Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I have the following code snippet\r\n\r\n```\r\n#!/usr/bin/python\r\n\r\nimport arrow\r\n\r\na = arrow.get(\"2017-12-13T00:00:00+00:00\")\r\nb = a.replace(weeks=+1)\r\n\r\n# Doesn't work as expected\r\nfor span_start, span_end in arrow.Arrow.span_range('week', a, b):\r\n    print \"start:\", span_start, \"-\", span_end\r\n\r\n>>> start: 2017-12-11T00:00:00+00:00 - 2017-12-17T23:59:59.999999+00:00\r\n>>> start: 2017-12-18T00:00:00+00:00 - 2017-12-24T23:59:59.999999+00:00\r\n\r\n# Doesn't work as well\r\nfor dates in arrow.Arrow.interval('week', a, b, interval=1):\r\n...\r\n\r\n# Works as expected\r\nfor span_start in arrow.Arrow.range('week', a, b):\r\n    print \"start:\", span_start\r\n\r\n>>> start: 2017-12-13T00:00:00+00:00\r\n>>> start: 2017-12-20T00:00:00+00:00\r\n```\r\n\r\nThe issue here, is that `span_range` starts the span at `2017-12-11` instead of `2017-12-13` While `Arrow.range` gives the right result ( meaning; the date I requested to start from)\r\n\r\nBasically, I can understand why `span_range` starts at `2017-12-11` - as it's Monday ( the beginning of the week) but I requested a span from a certain date & time - isn't Arrow suppose to consider my request ( Wednesday -> next Wednesday vs Monday -> next Monday ) ?\r\n\r\n",
        "performed_via_github_app": null
    }
]