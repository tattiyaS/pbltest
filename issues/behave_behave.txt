[
    {
        "url": "https://api.github.com/repos/behave/behave/issues/897",
        "repository_url": "https://api.github.com/repos/behave/behave",
        "labels_url": "https://api.github.com/repos/behave/behave/issues/897/labels{/name}",
        "comments_url": "https://api.github.com/repos/behave/behave/issues/897/comments",
        "events_url": "https://api.github.com/repos/behave/behave/issues/897/events",
        "html_url": "https://github.com/behave/behave/issues/897",
        "id": 790723085,
        "node_id": "MDU6SXNzdWU3OTA3MjMwODU=",
        "number": 897,
        "title": "behave with re as the step matcher can't match step ",
        "user": {
            "login": "sbedi123",
            "id": 77770314,
            "node_id": "MDQ6VXNlcjc3NzcwMzE0",
            "avatar_url": "https://avatars.githubusercontent.com/u/77770314?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sbedi123",
            "html_url": "https://github.com/sbedi123",
            "followers_url": "https://api.github.com/users/sbedi123/followers",
            "following_url": "https://api.github.com/users/sbedi123/following{/other_user}",
            "gists_url": "https://api.github.com/users/sbedi123/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sbedi123/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sbedi123/subscriptions",
            "organizations_url": "https://api.github.com/users/sbedi123/orgs",
            "repos_url": "https://api.github.com/users/sbedi123/repos",
            "events_url": "https://api.github.com/users/sbedi123/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sbedi123/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 82233946,
                "node_id": "MDU6TGFiZWw4MjIzMzk0Ng==",
                "url": "https://api.github.com/repos/behave/behave/labels/probably-mistaken",
                "name": "probably-mistaken",
                "color": "d4c5f9",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2021-01-21T05:54:04Z",
        "updated_at": "2021-01-22T00:06:37Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": " **I have the following BDD given statement in landing.py file**\r\n\r\n```py\r\nuse_step_matcher(\"re\")\r\n\r\n@given(u'that I land on the (page_name) landing page with the correct offer id (?:start network traffic)')\r\ndef landing_page(context, page_name):\r\n    ...\r\n```\r\n\r\n**Feature file is:**\r\n\r\n```gherkin\r\n...\r\nScenario: DR lil page end2end test starting with utm parameters\r\n   Given that I land on the \"google page\" landing page with the correct offer id start network traffic\r\n```\r\n\r\n**When I try to run it says undefined step**\r\n\r\nI am using the step matcher \"re\" and the text \"start network traffic\" in my given statement is optional. Why is it failing?\r\n",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/behave/behave/issues/896",
        "repository_url": "https://api.github.com/repos/behave/behave",
        "labels_url": "https://api.github.com/repos/behave/behave/issues/896/labels{/name}",
        "comments_url": "https://api.github.com/repos/behave/behave/issues/896/comments",
        "events_url": "https://api.github.com/repos/behave/behave/issues/896/events",
        "html_url": "https://github.com/behave/behave/issues/896",
        "id": 784683150,
        "node_id": "MDU6SXNzdWU3ODQ2ODMxNTA=",
        "number": 896,
        "title": "Scenario Outline: Support tags containing * wildcards",
        "user": {
            "login": "tsg9292",
            "id": 2730562,
            "node_id": "MDQ6VXNlcjI3MzA1NjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2730562?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tsg9292",
            "html_url": "https://github.com/tsg9292",
            "followers_url": "https://api.github.com/users/tsg9292/followers",
            "following_url": "https://api.github.com/users/tsg9292/following{/other_user}",
            "gists_url": "https://api.github.com/users/tsg9292/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tsg9292/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tsg9292/subscriptions",
            "organizations_url": "https://api.github.com/users/tsg9292/orgs",
            "repos_url": "https://api.github.com/users/tsg9292/repos",
            "events_url": "https://api.github.com/users/tsg9292/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tsg9292/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 31826404,
                "node_id": "MDU6TGFiZWwzMTgyNjQwNA==",
                "url": "https://api.github.com/repos/behave/behave/labels/wont-fix",
                "name": "wont-fix",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2021-01-13T00:06:44Z",
        "updated_at": "2021-01-21T18:31:46Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "This request is basically an expansion of #678 \r\n\r\nI'd like to be able to use tags on the ScenarioOutline that contain a `*`\r\n\r\n```\r\nFeature: Run Scenario Outlines with wildcard asterisk in the tags\r\n\r\n    @tag*\r\n    Scenario Outline: Test outline with asterisk tag\r\n        ...\r\n```\r\n\r\nThe above Scenario Outline will end up being processed with an effective tag of just `tag`, not `tag*`. It looks like `Tag.make_name` is filtering out the `*` character from all the tags on the Scenario Outline level.\r\n\r\nI understand that I am able to tag the `Examples` table instead of the Scenario Outline to get my desired behavior, but it would be nice if there was more consistency between tags on Scenario Outlines and tags on Scenarios and Features.",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/behave/behave/issues/893",
        "repository_url": "https://api.github.com/repos/behave/behave",
        "labels_url": "https://api.github.com/repos/behave/behave/issues/893/labels{/name}",
        "comments_url": "https://api.github.com/repos/behave/behave/issues/893/comments",
        "events_url": "https://api.github.com/repos/behave/behave/issues/893/events",
        "html_url": "https://github.com/behave/behave/pull/893",
        "id": 780967895,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NTUwNzcyNjk4",
        "number": 893,
        "title": "Update dependency invoke to v1.5.0",
        "user": {
            "login": "renovate[bot]",
            "id": 29139614,
            "node_id": "MDM6Qm90MjkxMzk2MTQ=",
            "avatar_url": "https://avatars.githubusercontent.com/in/2740?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/renovate%5Bbot%5D",
            "html_url": "https://github.com/apps/renovate",
            "followers_url": "https://api.github.com/users/renovate%5Bbot%5D/followers",
            "following_url": "https://api.github.com/users/renovate%5Bbot%5D/following{/other_user}",
            "gists_url": "https://api.github.com/users/renovate%5Bbot%5D/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/renovate%5Bbot%5D/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/renovate%5Bbot%5D/subscriptions",
            "organizations_url": "https://api.github.com/users/renovate%5Bbot%5D/orgs",
            "repos_url": "https://api.github.com/users/renovate%5Bbot%5D/repos",
            "events_url": "https://api.github.com/users/renovate%5Bbot%5D/events{/privacy}",
            "received_events_url": "https://api.github.com/users/renovate%5Bbot%5D/received_events",
            "type": "Bot",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2021-01-07T01:59:41Z",
        "updated_at": "2021-01-07T01:59:41Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "pull_request": {
            "url": "https://api.github.com/repos/behave/behave/pulls/893",
            "html_url": "https://github.com/behave/behave/pull/893",
            "diff_url": "https://github.com/behave/behave/pull/893.diff",
            "patch_url": "https://github.com/behave/behave/pull/893.patch"
        },
        "body": "[![WhiteSource Renovate](https://app.renovatebot.com/images/banner.svg)](https://renovatebot.com)\n\nThis PR contains the following updates:\n\n| Package | Update | Change |\n|---|---|---|\n| [invoke](http://docs.pyinvoke.org) | minor | `==1.4.1` -> `==1.5.0` |\n\n---\n\n### Renovate configuration\n\n:date: **Schedule**: At any time (no schedule defined).\n\n:vertical_traffic_light: **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n:recycle: **Rebasing**: Whenever PR becomes conflicted, or you tick the rebase/retry checkbox.\n\n:no_bell: **Ignore**: Close this PR and you won't be reminded about this update again.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#github/behave/behave).",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/behave/behave/issues/891",
        "repository_url": "https://api.github.com/repos/behave/behave",
        "labels_url": "https://api.github.com/repos/behave/behave/issues/891/labels{/name}",
        "comments_url": "https://api.github.com/repos/behave/behave/issues/891/comments",
        "events_url": "https://api.github.com/repos/behave/behave/issues/891/events",
        "html_url": "https://github.com/behave/behave/issues/891",
        "id": 772918397,
        "node_id": "MDU6SXNzdWU3NzI5MTgzOTc=",
        "number": 891,
        "title": "Support for Cucumber reports?",
        "user": {
            "login": "Mild-error",
            "id": 24479781,
            "node_id": "MDQ6VXNlcjI0NDc5Nzgx",
            "avatar_url": "https://avatars.githubusercontent.com/u/24479781?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Mild-error",
            "html_url": "https://github.com/Mild-error",
            "followers_url": "https://api.github.com/users/Mild-error/followers",
            "following_url": "https://api.github.com/users/Mild-error/following{/other_user}",
            "gists_url": "https://api.github.com/users/Mild-error/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Mild-error/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Mild-error/subscriptions",
            "organizations_url": "https://api.github.com/users/Mild-error/orgs",
            "repos_url": "https://api.github.com/users/Mild-error/repos",
            "events_url": "https://api.github.com/users/Mild-error/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Mild-error/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 31826678,
                "node_id": "MDU6TGFiZWwzMTgyNjY3OA==",
                "url": "https://api.github.com/repos/behave/behave/labels/enhancement",
                "name": "enhancement",
                "color": "02d7e1",
                "default": true,
                "description": null
            },
            {
                "id": 447809601,
                "node_id": "MDU6TGFiZWw0NDc4MDk2MDE=",
                "url": "https://api.github.com/repos/behave/behave/labels/question",
                "name": "question",
                "color": "5319e7",
                "default": true,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2020-12-22T12:43:32Z",
        "updated_at": "2021-01-04T09:10:35Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Any chance of adding the ability to publish to cucumber reports? \r\nhttps://reports.cucumber.io/",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/behave/behave/issues/890",
        "repository_url": "https://api.github.com/repos/behave/behave",
        "labels_url": "https://api.github.com/repos/behave/behave/issues/890/labels{/name}",
        "comments_url": "https://api.github.com/repos/behave/behave/issues/890/comments",
        "events_url": "https://api.github.com/repos/behave/behave/issues/890/events",
        "html_url": "https://github.com/behave/behave/issues/890",
        "id": 771112933,
        "node_id": "MDU6SXNzdWU3NzExMTI5MzM=",
        "number": 890,
        "title": "Auto-discovery of behave formatters",
        "user": {
            "login": "bittner",
            "id": 665072,
            "node_id": "MDQ6VXNlcjY2NTA3Mg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/665072?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bittner",
            "html_url": "https://github.com/bittner",
            "followers_url": "https://api.github.com/users/bittner/followers",
            "following_url": "https://api.github.com/users/bittner/following{/other_user}",
            "gists_url": "https://api.github.com/users/bittner/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bittner/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bittner/subscriptions",
            "organizations_url": "https://api.github.com/users/bittner/orgs",
            "repos_url": "https://api.github.com/users/bittner/repos",
            "events_url": "https://api.github.com/users/bittner/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bittner/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 31826678,
                "node_id": "MDU6TGFiZWwzMTgyNjY3OA==",
                "url": "https://api.github.com/repos/behave/behave/labels/enhancement",
                "name": "enhancement",
                "color": "02d7e1",
                "default": true,
                "description": null
            },
            {
                "id": 448145649,
                "node_id": "MDU6TGFiZWw0NDgxNDU2NDk=",
                "url": "https://api.github.com/repos/behave/behave/labels/formatter",
                "name": "formatter",
                "color": "c5def5",
                "default": false,
                "description": null
            },
            {
                "id": 717146575,
                "node_id": "MDU6TGFiZWw3MTcxNDY1NzU=",
                "url": "https://api.github.com/repos/behave/behave/labels/help-wanted",
                "name": "help-wanted",
                "color": "38bc5b",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-12-18T19:14:40Z",
        "updated_at": "2020-12-18T19:16:15Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "Currently, external formatters need [to be configured](https://behave.readthedocs.io/en/latest/formatters.html#more-formatters) to have a nice alias, or their full `module:Class` path needs to be specified. This is somewhat tedious and would be unneeded if we could auto-discover installed formatters (as suggested in https://github.com/behave/behave/pull/705#issuecomment-736841760 and https://github.com/behave-contrib/behave-html-formatter/issues/5).\r\n\r\n##  Mechanism candidates (role models)\r\n\r\n- Setuptools [entry point](https://setuptools.readthedocs.io/en/latest/userguide/entry_point.html) mechanism (e.g. [Flake8 plugins](https://flake8.pycqa.org/en/latest/plugin-development/registering-plugins.html)) \u2013 _would require that every formatter implements the entry point_\r\n- Pytest [plugin import](https://docs.pytest.org/en/stable/writing_plugins.html) mechanism\r\n- other?\r\n\r\n## Avoid performance penalty\r\n\r\nThe idea is, only to perform auto-discovery of the formatters when needed, e.g.\r\n\r\n1. for the `behave -f help` screen\r\n1. when a formatter (e.g. `behave -f foobar`) is unknown\r\n",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/behave/behave/issues/889",
        "repository_url": "https://api.github.com/repos/behave/behave",
        "labels_url": "https://api.github.com/repos/behave/behave/issues/889/labels{/name}",
        "comments_url": "https://api.github.com/repos/behave/behave/issues/889/comments",
        "events_url": "https://api.github.com/repos/behave/behave/issues/889/events",
        "html_url": "https://github.com/behave/behave/issues/889",
        "id": 771085330,
        "node_id": "MDU6SXNzdWU3NzEwODUzMzA=",
        "number": 889,
        "title": "Warn or error about incorrectly configured formatter aliases",
        "user": {
            "login": "bittner",
            "id": 665072,
            "node_id": "MDQ6VXNlcjY2NTA3Mg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/665072?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bittner",
            "html_url": "https://github.com/bittner",
            "followers_url": "https://api.github.com/users/bittner/followers",
            "following_url": "https://api.github.com/users/bittner/following{/other_user}",
            "gists_url": "https://api.github.com/users/bittner/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bittner/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bittner/subscriptions",
            "organizations_url": "https://api.github.com/users/bittner/orgs",
            "repos_url": "https://api.github.com/users/bittner/repos",
            "events_url": "https://api.github.com/users/bittner/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bittner/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 31826678,
                "node_id": "MDU6TGFiZWwzMTgyNjY3OA==",
                "url": "https://api.github.com/repos/behave/behave/labels/enhancement",
                "name": "enhancement",
                "color": "02d7e1",
                "default": true,
                "description": null
            },
            {
                "id": 448145649,
                "node_id": "MDU6TGFiZWw0NDgxNDU2NDk=",
                "url": "https://api.github.com/repos/behave/behave/labels/formatter",
                "name": "formatter",
                "color": "c5def5",
                "default": false,
                "description": null
            },
            {
                "id": 717146575,
                "node_id": "MDU6TGFiZWw3MTcxNDY1NzU=",
                "url": "https://api.github.com/repos/behave/behave/labels/help-wanted",
                "name": "help-wanted",
                "color": "38bc5b",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-12-18T18:28:13Z",
        "updated_at": "2020-12-18T18:28:13Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "Currently, when you configure an alias for a formatter, and you configure it wrongly, `behave` doesn't error out (which is okay) but you also get no feedback about what's wrong, i.e. why the formatter alias doesn't work.\r\n\r\n## Example\r\n\r\n```ini\r\n#-- FILE: behave.ini\r\n[behave.formatters]\r\nhtml = behave_html_formatter.HTMLFormatter\r\n```\r\nNote the period (`.`), which should really be a colon (`:`).\r\n\r\nAs a result, the `--format=help` screen shows the alias without a description:\r\n```console\r\n$ behave -f help\r\nAvailable formatters:\r\n  html           \r\n  json           JSON dump of test run\r\n  json.pretty    JSON dump of test run (human readable)\r\n  ...\r\n```\r\nIn addition, we get the typical cryptic error message:\r\n```console\r\n$ behave -f html\r\nusage: behave [options] [ [DIR|FILE|FILE:LINE] ]+\r\nbehave: error: format=html is unknown\r\n```\r\n\r\n## Suggested Solution\r\n\r\n1. The `-f help` screen should list incorrectly configured or unavailable (i.e. currently not importable) formatters separately, e.g.\r\n   ```console\r\n   $ behave -f help\r\n   Available formatters:\r\n     json           JSON dump of test run\r\n     json.pretty    JSON dump of test run (human readable)\r\n     ...\r\n\r\n   Unavailable:\r\n     html           could not be loaded (ImportError)\r\n   ```\r\n2. The error message when being executed should be more explict, e.g.\r\n   ```console\r\n   $ behave -f html\r\n   usage: behave [options] [ [DIR|FILE|FILE:LINE] ]+\r\n   behave: error: formatter `html` could not be loaded (ImportError)\r\n   ```\r\n",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/behave/behave/issues/885",
        "repository_url": "https://api.github.com/repos/behave/behave",
        "labels_url": "https://api.github.com/repos/behave/behave/issues/885/labels{/name}",
        "comments_url": "https://api.github.com/repos/behave/behave/issues/885/comments",
        "events_url": "https://api.github.com/repos/behave/behave/issues/885/events",
        "html_url": "https://github.com/behave/behave/issues/885",
        "id": 762092779,
        "node_id": "MDU6SXNzdWU3NjIwOTI3Nzk=",
        "number": 885,
        "title": "get the feature file language setting with a context attribute",
        "user": {
            "login": "berndhahnebach",
            "id": 6129869,
            "node_id": "MDQ6VXNlcjYxMjk4Njk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6129869?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/berndhahnebach",
            "html_url": "https://github.com/berndhahnebach",
            "followers_url": "https://api.github.com/users/berndhahnebach/followers",
            "following_url": "https://api.github.com/users/berndhahnebach/following{/other_user}",
            "gists_url": "https://api.github.com/users/berndhahnebach/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/berndhahnebach/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/berndhahnebach/subscriptions",
            "organizations_url": "https://api.github.com/users/berndhahnebach/orgs",
            "repos_url": "https://api.github.com/users/berndhahnebach/repos",
            "events_url": "https://api.github.com/users/berndhahnebach/events{/privacy}",
            "received_events_url": "https://api.github.com/users/berndhahnebach/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 447809601,
                "node_id": "MDU6TGFiZWw0NDc4MDk2MDE=",
                "url": "https://api.github.com/repos/behave/behave/labels/question",
                "name": "question",
                "color": "5319e7",
                "default": true,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-12-11T08:52:07Z",
        "updated_at": "2020-12-12T12:48:03Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "In the feature file it is possible to set the native language by \r\n\r\n`# language: de`\r\n\r\nIs it possible to retrieve this setting with the context after each feature in environment module?\r\n\r\nEventually I need this information somehow for each feature in the json report. ",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/behave/behave/issues/884",
        "repository_url": "https://api.github.com/repos/behave/behave",
        "labels_url": "https://api.github.com/repos/behave/behave/issues/884/labels{/name}",
        "comments_url": "https://api.github.com/repos/behave/behave/issues/884/comments",
        "events_url": "https://api.github.com/repos/behave/behave/issues/884/events",
        "html_url": "https://github.com/behave/behave/issues/884",
        "id": 760298284,
        "node_id": "MDU6SXNzdWU3NjAyOTgyODQ=",
        "number": 884,
        "title": "ResourceWarning shown when testing feature sets with Python warnings enabled",
        "user": {
            "login": "belegaps",
            "id": 6137759,
            "node_id": "MDQ6VXNlcjYxMzc3NTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6137759?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/belegaps",
            "html_url": "https://github.com/belegaps",
            "followers_url": "https://api.github.com/users/belegaps/followers",
            "following_url": "https://api.github.com/users/belegaps/following{/other_user}",
            "gists_url": "https://api.github.com/users/belegaps/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/belegaps/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/belegaps/subscriptions",
            "organizations_url": "https://api.github.com/users/belegaps/orgs",
            "repos_url": "https://api.github.com/users/belegaps/repos",
            "events_url": "https://api.github.com/users/belegaps/events{/privacy}",
            "received_events_url": "https://api.github.com/users/belegaps/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-12-09T12:45:00Z",
        "updated_at": "2020-12-09T12:46:58Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "When running `behave` on feature sets, with Python warnings enabled, the output shows warnings about unclosed files:\r\n\r\n```\r\n\u276f PYTHONWARNINGS=always behave -f progress @tests/issueXXXX.featureset\r\n/Users/pes/.local/share/virtualenvs/behave-resource-warning-Z-RngNsw/lib/python3.9/site-packages/behave/runner_util.py:261: ResourceWarning: unclosed file <_io.TextIOWrapper name='tests/issueXXXX.featureset' mode='r' encoding='UTF-8'>\r\n  contents = open(filename).read()\r\nResourceWarning: Enable tracemalloc to get the object allocation traceback\r\n/Users/pes/.local/share/virtualenvs/behave-resource-warning-Z-RngNsw/lib/python3.9/site-packages/behave/runner_util.py:261: ResourceWarning: unclosed file <_io.TextIOWrapper name='tests/issueXXXX.featureset' mode='r' encoding='UTF-8'>\r\n  contents = open(filename).read()\r\nResourceWarning: Enable tracemalloc to get the object allocation traceback\r\ntests/features/syndrome_XXXX.feature  .\r\n1 feature passed, 0 failed, 0 skipped\r\n1 scenario passed, 0 failed, 0 skipped\r\n2 steps passed, 0 failed, 0 skipped, 0 undefined\r\nTook 0m0.000s\r\n```\r\n\r\n## Testing\r\n\r\n```gherkin\r\n@issue\r\nFeature: Issue #XXXX -- Syndrome: ResourceWarning shown when testing feature sets with Python warnings enabled\r\n\r\n  Background: Setup\r\n    Given a new working directory\r\n    And a file named \"tests/features/syndrome_XXXX.feature\" with:\r\n      \"\"\"\r\n      Feature: Basic Scenario\r\n\r\n        Scenario: A passing scenario\r\n          Given a step passes\r\n          When another step passes\r\n      \"\"\"\r\n    And a file named \"tests/features/steps/syndrome_XXXX_steps.py\" with:\r\n      \"\"\"\r\n      @given(\"a step passes\")\r\n      def stepimpl(context):\r\n          pass\r\n\r\n      @when(\"another step passes\")\r\n      def stepimpl(context):\r\n          pass\r\n      \"\"\"\r\n    And a file named \"tests/issueXXXX.featureset\" with:\r\n      \"\"\"\r\n      ./features/syndrome_XXXX.feature\r\n      \"\"\"\r\n\r\n  Scenario: Run feature set with warnings enabled\r\n    Given environment variable \"PYTHONWARNINGS\" is set to \"always\"\r\n    When I run \"behave -f plain @tests/issueXXXX.featureset\"\r\n    Then the command output should not contain \"Traceback\"\r\n    Then the command output should not contain \"ResourceWarning\"\r\n```\r\n",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/behave/behave/issues/880",
        "repository_url": "https://api.github.com/repos/behave/behave",
        "labels_url": "https://api.github.com/repos/behave/behave/issues/880/labels{/name}",
        "comments_url": "https://api.github.com/repos/behave/behave/issues/880/comments",
        "events_url": "https://api.github.com/repos/behave/behave/issues/880/events",
        "html_url": "https://github.com/behave/behave/issues/880",
        "id": 755929585,
        "node_id": "MDU6SXNzdWU3NTU5Mjk1ODU=",
        "number": 880,
        "title": "ScenarioOutline: Placeholder support in tag value (from Example table column)",
        "user": {
            "login": "lzus",
            "id": 48306281,
            "node_id": "MDQ6VXNlcjQ4MzA2Mjgx",
            "avatar_url": "https://avatars.githubusercontent.com/u/48306281?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lzus",
            "html_url": "https://github.com/lzus",
            "followers_url": "https://api.github.com/users/lzus/followers",
            "following_url": "https://api.github.com/users/lzus/following{/other_user}",
            "gists_url": "https://api.github.com/users/lzus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lzus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lzus/subscriptions",
            "organizations_url": "https://api.github.com/users/lzus/orgs",
            "repos_url": "https://api.github.com/users/lzus/repos",
            "events_url": "https://api.github.com/users/lzus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lzus/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 31826678,
                "node_id": "MDU6TGFiZWwzMTgyNjY3OA==",
                "url": "https://api.github.com/repos/behave/behave/labels/enhancement",
                "name": "enhancement",
                "color": "02d7e1",
                "default": true,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2020-12-03T07:03:28Z",
        "updated_at": "2020-12-08T01:09:16Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hello,\r\nExample name could be defined to get value from Example table, could tag support this function in future? \r\n\r\n`Scenario Outline: login\r\n    @\\<ip\\>\r\n    Examples: \\<ip\\> \r\n\r\n    | ip               |  user  | password |\r\n\r\n    | 192.168.1.2 |  root | 123          |\r\n\r\n    | 192.168.1.3 |  root | 123         |\r\n\r\n    | 192.168.1.4 |  root | 123         |`\r\n\r\ni want to only run on \"192.168.1.3\", so i execute with tag option \"-t @192.168.1.3\"\r\nbut result look like as below picture, it does not support tag value retrieve from table. \r\n\r\n![image](https://user-images.githubusercontent.com/48306281/100974615-8d200b80-3577-11eb-8412-0d201acbd848.png)\r\n\r\n\r\n",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/behave/behave/issues/879",
        "repository_url": "https://api.github.com/repos/behave/behave",
        "labels_url": "https://api.github.com/repos/behave/behave/issues/879/labels{/name}",
        "comments_url": "https://api.github.com/repos/behave/behave/issues/879/comments",
        "events_url": "https://api.github.com/repos/behave/behave/issues/879/events",
        "html_url": "https://github.com/behave/behave/issues/879",
        "id": 753943708,
        "node_id": "MDU6SXNzdWU3NTM5NDM3MDg=",
        "number": 879,
        "title": "Get tags as user data during run time as opposed to defining a new variable",
        "user": {
            "login": "mathew-jithin",
            "id": 17254379,
            "node_id": "MDQ6VXNlcjE3MjU0Mzc5",
            "avatar_url": "https://avatars.githubusercontent.com/u/17254379?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mathew-jithin",
            "html_url": "https://github.com/mathew-jithin",
            "followers_url": "https://api.github.com/users/mathew-jithin/followers",
            "following_url": "https://api.github.com/users/mathew-jithin/following{/other_user}",
            "gists_url": "https://api.github.com/users/mathew-jithin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mathew-jithin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mathew-jithin/subscriptions",
            "organizations_url": "https://api.github.com/users/mathew-jithin/orgs",
            "repos_url": "https://api.github.com/users/mathew-jithin/repos",
            "events_url": "https://api.github.com/users/mathew-jithin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mathew-jithin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 477914229,
                "node_id": "MDU6TGFiZWw0Nzc5MTQyMjk=",
                "url": "https://api.github.com/repos/behave/behave/labels/insufficient-information",
                "name": "insufficient-information",
                "color": "5319e7",
                "default": false,
                "description": null
            },
            {
                "id": 2558124837,
                "node_id": "MDU6TGFiZWwyNTU4MTI0ODM3",
                "url": "https://api.github.com/repos/behave/behave/labels/pending.answer-needed",
                "name": "pending.answer-needed",
                "color": "c2e0c6",
                "default": false,
                "description": "An answer to a question is needed from the issuer."
            },
            {
                "id": 447809601,
                "node_id": "MDU6TGFiZWw0NDc4MDk2MDE=",
                "url": "https://api.github.com/repos/behave/behave/labels/question",
                "name": "question",
                "color": "5319e7",
                "default": true,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-12-01T02:11:47Z",
        "updated_at": "2020-12-04T23:57:48Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Is there any way we can directly get the tags passed in CLI during runtime, rather than defining a new variable and passing it up as user defined data?\r\n\r\nBasically, is the one defined here the only way to achieve the same?\r\n\r\nhttps://stackoverflow.com/questions/46655493/how-can-i-get-current-set-of-tags-passed-from-behave-command\r\n\r\n@jenisys Hope you will please help here.",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/behave/behave/issues/878",
        "repository_url": "https://api.github.com/repos/behave/behave",
        "labels_url": "https://api.github.com/repos/behave/behave/issues/878/labels{/name}",
        "comments_url": "https://api.github.com/repos/behave/behave/issues/878/comments",
        "events_url": "https://api.github.com/repos/behave/behave/issues/878/events",
        "html_url": "https://github.com/behave/behave/issues/878",
        "id": 744940900,
        "node_id": "MDU6SXNzdWU3NDQ5NDA5MDA=",
        "number": 878,
        "title": "Issue with Behave failure and skip",
        "user": {
            "login": "subbro",
            "id": 40534259,
            "node_id": "MDQ6VXNlcjQwNTM0MjU5",
            "avatar_url": "https://avatars.githubusercontent.com/u/40534259?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/subbro",
            "html_url": "https://github.com/subbro",
            "followers_url": "https://api.github.com/users/subbro/followers",
            "following_url": "https://api.github.com/users/subbro/following{/other_user}",
            "gists_url": "https://api.github.com/users/subbro/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/subbro/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/subbro/subscriptions",
            "organizations_url": "https://api.github.com/users/subbro/orgs",
            "repos_url": "https://api.github.com/users/subbro/repos",
            "events_url": "https://api.github.com/users/subbro/events{/privacy}",
            "received_events_url": "https://api.github.com/users/subbro/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 82233946,
                "node_id": "MDU6TGFiZWw4MjIzMzk0Ng==",
                "url": "https://api.github.com/repos/behave/behave/labels/probably-mistaken",
                "name": "probably-mistaken",
                "color": "d4c5f9",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2020-11-17T17:34:00Z",
        "updated_at": "2020-12-05T00:00:23Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hi,\r\nI have one issue. Say i have 5 steps and 3rd step fails, I see that the next two steps are marked as Passed in first run and if it fails again at 3rd step then the next two steps are skipped in 2nd run.\r\nI have the autoretry logic in before_scenario() to run twice\r\n\r\n@jenisys please help me on this. Any insights that you could give me\r\n\r\nThanks,",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/behave/behave/issues/876",
        "repository_url": "https://api.github.com/repos/behave/behave",
        "labels_url": "https://api.github.com/repos/behave/behave/issues/876/labels{/name}",
        "comments_url": "https://api.github.com/repos/behave/behave/issues/876/comments",
        "events_url": "https://api.github.com/repos/behave/behave/issues/876/events",
        "html_url": "https://github.com/behave/behave/pull/876",
        "id": 735974958,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NTE1MjY5MDA5",
        "number": 876,
        "title": "Pin dependencies",
        "user": {
            "login": "renovate[bot]",
            "id": 29139614,
            "node_id": "MDM6Qm90MjkxMzk2MTQ=",
            "avatar_url": "https://avatars.githubusercontent.com/in/2740?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/renovate%5Bbot%5D",
            "html_url": "https://github.com/apps/renovate",
            "followers_url": "https://api.github.com/users/renovate%5Bbot%5D/followers",
            "following_url": "https://api.github.com/users/renovate%5Bbot%5D/following{/other_user}",
            "gists_url": "https://api.github.com/users/renovate%5Bbot%5D/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/renovate%5Bbot%5D/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/renovate%5Bbot%5D/subscriptions",
            "organizations_url": "https://api.github.com/users/renovate%5Bbot%5D/orgs",
            "repos_url": "https://api.github.com/users/renovate%5Bbot%5D/repos",
            "events_url": "https://api.github.com/users/renovate%5Bbot%5D/events{/privacy}",
            "received_events_url": "https://api.github.com/users/renovate%5Bbot%5D/received_events",
            "type": "Bot",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-11-04T09:57:05Z",
        "updated_at": "2021-01-10T13:48:12Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "pull_request": {
            "url": "https://api.github.com/repos/behave/behave/pulls/876",
            "html_url": "https://github.com/behave/behave/pull/876",
            "diff_url": "https://github.com/behave/behave/pull/876.diff",
            "patch_url": "https://github.com/behave/behave/pull/876.patch"
        },
        "body": "[![WhiteSource Renovate](https://app.renovatebot.com/images/banner.svg)](https://renovatebot.com)\n\nThis PR contains the following updates:\n\n| Package | Update | Change |\n|---|---|---|\n| [bump2version](https://togithub.com/c4urself/bump2version) | pin | ` >= 0.5.6` -> `==1.0.1` |\n| [colorama](https://togithub.com/tartley/colorama) | pin | ` >= 0.3.7` -> `==0.4.4` |\n| [coverage](https://togithub.com/nedbat/coveragepy) | pin | ` >= 4.2` -> `==5.3.1` |\n| [cucumber-tag-expressions](https://togithub.com/cucumber/tag-expressions-python) | pin | ` >= 1.1.2` -> `==3.0.0` |\n| [invoke](http://docs.pyinvoke.org) | pin | ` == 1.4.1` -> `==1.4.1` |\n| [mock](http://mock.readthedocs.org/en/latest/) | pin | `  >= 2.0` -> `==4.0.3` |\n| [mock](http://mock.readthedocs.org/en/latest/) | pin | ` >= 2.0` -> `==4.0.3` |\n| [modernize](https://togithub.com/PyCQA/modernize) | pin | ` >= 0.5` -> `==0.8.0` |\n| [parse](https://togithub.com/r1chardj0n3s/parse) | pin | ` >= 1.18.0` -> `==1.18.0` |\n| [parse_type](https://togithub.com/jenisys/parse_type) | pin | ` >= 0.4.2` -> `==0.5.2` |\n| [pytest-html](https://togithub.com/pytest-dev/pytest-html) | pin | ` >= 1.19.0,<2.0` -> `==1.22.1` |\n| [six](https://togithub.com/benjaminp/six) | pin | ` == 1.15.0` -> `==1.15.0` |\n| [tox](http://tox.readthedocs.org) ([source](https://togithub.com/tox-dev/tox)) | pin | `   >= 1.8.1` -> `==3.21.0` |\n| [twine](https://twine.readthedocs.io/) ([source](https://togithub.com/pypa/twine)) | pin | ` >= 1.13.0` -> `==3.3.0` |\n\n:pushpin: **Important**: Renovate will wait until you have merged this Pin PR before creating any *upgrade* PRs for the affected packages. Add the preset `:preserveSemverRanges` to your config if you instead don't wish to pin dependencies.\n\n---\n\n### Renovate configuration\n\n:date: **Schedule**: At any time (no schedule defined).\n\n:vertical_traffic_light: **Automerge**: Disabled by config. Please merge this manually once you are satisfied.\n\n:recycle: **Rebasing**: Whenever PR is behind base branch, or you tick the rebase/retry checkbox.\n\n:ghost: **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/renovatebot/renovate/discussions) if that's undesired.\n\n---\n\n - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box\n\n---\n\nThis PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#github/behave/behave).",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/behave/behave/issues/865",
        "repository_url": "https://api.github.com/repos/behave/behave",
        "labels_url": "https://api.github.com/repos/behave/behave/issues/865/labels{/name}",
        "comments_url": "https://api.github.com/repos/behave/behave/issues/865/comments",
        "events_url": "https://api.github.com/repos/behave/behave/issues/865/events",
        "html_url": "https://github.com/behave/behave/pull/865",
        "id": 700581119,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDg2MTkwNDU0",
        "number": 865,
        "title": "change initial documentation",
        "user": {
            "login": "Ibrian93",
            "id": 29703673,
            "node_id": "MDQ6VXNlcjI5NzAzNjcz",
            "avatar_url": "https://avatars.githubusercontent.com/u/29703673?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Ibrian93",
            "html_url": "https://github.com/Ibrian93",
            "followers_url": "https://api.github.com/users/Ibrian93/followers",
            "following_url": "https://api.github.com/users/Ibrian93/following{/other_user}",
            "gists_url": "https://api.github.com/users/Ibrian93/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Ibrian93/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Ibrian93/subscriptions",
            "organizations_url": "https://api.github.com/users/Ibrian93/orgs",
            "repos_url": "https://api.github.com/users/Ibrian93/repos",
            "events_url": "https://api.github.com/users/Ibrian93/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Ibrian93/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 350389546,
                "node_id": "MDU6TGFiZWwzNTAzODk1NDY=",
                "url": "https://api.github.com/repos/behave/behave/labels/docs",
                "name": "docs",
                "color": "5319e7",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-09-13T14:32:09Z",
        "updated_at": "2020-11-26T22:25:32Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "pull_request": {
            "url": "https://api.github.com/repos/behave/behave/pulls/865",
            "html_url": "https://github.com/behave/behave/pull/865",
            "diff_url": "https://github.com/behave/behave/pull/865.diff",
            "patch_url": "https://github.com/behave/behave/pull/865.patch"
        },
        "body": "I've changed the introduction to BDD as well as adding a comma. \r\nAs far as I understand, BDD is a process (source wikipedia and the cucumber book from 2017) more than a technique. \r\nMore over, I've added a comma before the and as there are 3 items in a list. ",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/behave/behave/issues/863",
        "repository_url": "https://api.github.com/repos/behave/behave",
        "labels_url": "https://api.github.com/repos/behave/behave/issues/863/labels{/name}",
        "comments_url": "https://api.github.com/repos/behave/behave/issues/863/comments",
        "events_url": "https://api.github.com/repos/behave/behave/issues/863/events",
        "html_url": "https://github.com/behave/behave/issues/863",
        "id": 697864544,
        "node_id": "MDU6SXNzdWU2OTc4NjQ1NDQ=",
        "number": 863,
        "title": "allow an easy add_cleanup() hiding stdout (capturing to throw it away)",
        "user": {
            "login": "praiskup",
            "id": 3277839,
            "node_id": "MDQ6VXNlcjMyNzc4Mzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3277839?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/praiskup",
            "html_url": "https://github.com/praiskup",
            "followers_url": "https://api.github.com/users/praiskup/followers",
            "following_url": "https://api.github.com/users/praiskup/following{/other_user}",
            "gists_url": "https://api.github.com/users/praiskup/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/praiskup/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/praiskup/subscriptions",
            "organizations_url": "https://api.github.com/users/praiskup/orgs",
            "repos_url": "https://api.github.com/users/praiskup/repos",
            "events_url": "https://api.github.com/users/praiskup/events{/privacy}",
            "received_events_url": "https://api.github.com/users/praiskup/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 31826404,
                "node_id": "MDU6TGFiZWwzMTgyNjQwNA==",
                "url": "https://api.github.com/repos/behave/behave/labels/wont-fix",
                "name": "wont-fix",
                "color": "0b02e1",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2020-09-10T12:12:30Z",
        "updated_at": "2020-12-05T00:02:42Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Seems like that at the time of evaluation `cleanup_func` method, the standard output\r\nis not capture as it is done for the normal steps.",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/behave/behave/issues/855",
        "repository_url": "https://api.github.com/repos/behave/behave",
        "labels_url": "https://api.github.com/repos/behave/behave/issues/855/labels{/name}",
        "comments_url": "https://api.github.com/repos/behave/behave/issues/855/comments",
        "events_url": "https://api.github.com/repos/behave/behave/issues/855/events",
        "html_url": "https://github.com/behave/behave/issues/855",
        "id": 672276624,
        "node_id": "MDU6SXNzdWU2NzIyNzY2MjQ=",
        "number": 855,
        "title": "Any plans to release 1.2.7?",
        "user": {
            "login": "ns-bdesimone",
            "id": 49158328,
            "node_id": "MDQ6VXNlcjQ5MTU4MzI4",
            "avatar_url": "https://avatars.githubusercontent.com/u/49158328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ns-bdesimone",
            "html_url": "https://github.com/ns-bdesimone",
            "followers_url": "https://api.github.com/users/ns-bdesimone/followers",
            "following_url": "https://api.github.com/users/ns-bdesimone/following{/other_user}",
            "gists_url": "https://api.github.com/users/ns-bdesimone/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ns-bdesimone/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ns-bdesimone/subscriptions",
            "organizations_url": "https://api.github.com/users/ns-bdesimone/orgs",
            "repos_url": "https://api.github.com/users/ns-bdesimone/repos",
            "events_url": "https://api.github.com/users/ns-bdesimone/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ns-bdesimone/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 447809601,
                "node_id": "MDU6TGFiZWw0NDc4MDk2MDE=",
                "url": "https://api.github.com/repos/behave/behave/labels/question",
                "name": "question",
                "color": "5319e7",
                "default": true,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2020-08-03T18:56:38Z",
        "updated_at": "2021-01-05T20:49:48Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Any plans to release 1.2.7? It's been awhile since a release and I would love to get some of the features and additions from 1.2.7 available for use.",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/behave/behave/issues/853",
        "repository_url": "https://api.github.com/repos/behave/behave",
        "labels_url": "https://api.github.com/repos/behave/behave/issues/853/labels{/name}",
        "comments_url": "https://api.github.com/repos/behave/behave/issues/853/comments",
        "events_url": "https://api.github.com/repos/behave/behave/issues/853/events",
        "html_url": "https://github.com/behave/behave/issues/853",
        "id": 667216593,
        "node_id": "MDU6SXNzdWU2NjcyMTY1OTM=",
        "number": 853,
        "title": "stage steps: Override reused steps from common/other stage(s) with stage-specific Step",
        "user": {
            "login": "kimjunte",
            "id": 39764191,
            "node_id": "MDQ6VXNlcjM5NzY0MTkx",
            "avatar_url": "https://avatars.githubusercontent.com/u/39764191?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kimjunte",
            "html_url": "https://github.com/kimjunte",
            "followers_url": "https://api.github.com/users/kimjunte/followers",
            "following_url": "https://api.github.com/users/kimjunte/following{/other_user}",
            "gists_url": "https://api.github.com/users/kimjunte/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kimjunte/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kimjunte/subscriptions",
            "organizations_url": "https://api.github.com/users/kimjunte/orgs",
            "repos_url": "https://api.github.com/users/kimjunte/repos",
            "events_url": "https://api.github.com/users/kimjunte/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kimjunte/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2020-07-28T16:40:44Z",
        "updated_at": "2020-09-23T06:22:32Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "With the following file structure:\r\n\r\nGiven a feature file:\r\n---------\r\n/features\r\n----/steps\r\n--------steps.py\r\n----/A_steps\r\n--------steps.py\r\n----foo.feature\r\n----A_environments.py\r\n\r\nRunning the following command:\r\n\r\n$behave --stage=A\r\n\r\nThis will run the A_enviroments; the features/steps/steps.py files; the features/A_steps/steps.py and run the test for foo.feature.\r\n\r\nHOWEVER:\r\n\r\nWhen feature/steps/steps.py has a step definition called @step(u\"bar\") and feature/A_steps/steps.py has the same step definition @step(u\"bar\") THEN an AmbigiousError is raised because the same step definition is given.\r\n\r\nIs it possible to add a --override flag that allows any same step defintion given to be overriden with the new one present in feature/A_steps/steps.py?\r\n\r\nThis will allow a 'common' steps definition within steps/steps but however cater to different stage testing for different configuration. Which will allow code to be reused and not just copied and pasted to each different stage directories. ",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/behave/behave/issues/852",
        "repository_url": "https://api.github.com/repos/behave/behave",
        "labels_url": "https://api.github.com/repos/behave/behave/issues/852/labels{/name}",
        "comments_url": "https://api.github.com/repos/behave/behave/issues/852/comments",
        "events_url": "https://api.github.com/repos/behave/behave/issues/852/events",
        "html_url": "https://github.com/behave/behave/issues/852",
        "id": 663731570,
        "node_id": "MDU6SXNzdWU2NjM3MzE1NzA=",
        "number": 852,
        "title": "Output from after_scenario not included in junit output",
        "user": {
            "login": "rittneje",
            "id": 28784688,
            "node_id": "MDQ6VXNlcjI4Nzg0Njg4",
            "avatar_url": "https://avatars.githubusercontent.com/u/28784688?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rittneje",
            "html_url": "https://github.com/rittneje",
            "followers_url": "https://api.github.com/users/rittneje/followers",
            "following_url": "https://api.github.com/users/rittneje/following{/other_user}",
            "gists_url": "https://api.github.com/users/rittneje/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rittneje/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rittneje/subscriptions",
            "organizations_url": "https://api.github.com/users/rittneje/orgs",
            "repos_url": "https://api.github.com/users/rittneje/repos",
            "events_url": "https://api.github.com/users/rittneje/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rittneje/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-07-22T12:41:15Z",
        "updated_at": "2020-12-05T00:07:04Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Output from the `after_scenario` hook is never included in the JUnit test results when using `--junit`. Also, it is not suppressed when it succeeds.\r\n\r\nWe need a way to run registered cleanup actions after each test scenario executes. If this cleanup fails, the scenario as a whole should be considered a failure, and thus all capture logs should be printed. Additionally, the output from the cleanup should be considered as part of the test scenario's output and thus included in the JUnit output.",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/behave/behave/issues/851",
        "repository_url": "https://api.github.com/repos/behave/behave",
        "labels_url": "https://api.github.com/repos/behave/behave/issues/851/labels{/name}",
        "comments_url": "https://api.github.com/repos/behave/behave/issues/851/comments",
        "events_url": "https://api.github.com/repos/behave/behave/issues/851/events",
        "html_url": "https://github.com/behave/behave/pull/851",
        "id": 662740755,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDU0MjYyNjg2",
        "number": 851,
        "title": "add custom runner support",
        "user": {
            "login": "will-yangsg",
            "id": 62875643,
            "node_id": "MDQ6VXNlcjYyODc1NjQz",
            "avatar_url": "https://avatars.githubusercontent.com/u/62875643?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/will-yangsg",
            "html_url": "https://github.com/will-yangsg",
            "followers_url": "https://api.github.com/users/will-yangsg/followers",
            "following_url": "https://api.github.com/users/will-yangsg/following{/other_user}",
            "gists_url": "https://api.github.com/users/will-yangsg/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/will-yangsg/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/will-yangsg/subscriptions",
            "organizations_url": "https://api.github.com/users/will-yangsg/orgs",
            "repos_url": "https://api.github.com/users/will-yangsg/repos",
            "events_url": "https://api.github.com/users/will-yangsg/events{/privacy}",
            "received_events_url": "https://api.github.com/users/will-yangsg/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 31827222,
                "node_id": "MDU6TGFiZWwzMTgyNzIyMg==",
                "url": "https://api.github.com/repos/behave/behave/labels/duplicated",
                "name": "duplicated",
                "color": "e102d8",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2020-07-21T08:25:35Z",
        "updated_at": "2020-11-26T22:25:07Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "pull_request": {
            "url": "https://api.github.com/repos/behave/behave/pulls/851",
            "html_url": "https://github.com/behave/behave/pull/851",
            "diff_url": "https://github.com/behave/behave/pull/851.diff",
            "patch_url": "https://github.com/behave/behave/pull/851.patch"
        },
        "body": "add custom runner support.\r\nWe need this feature to implement parallel BDD testing.",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/behave/behave/issues/848",
        "repository_url": "https://api.github.com/repos/behave/behave",
        "labels_url": "https://api.github.com/repos/behave/behave/issues/848/labels{/name}",
        "comments_url": "https://api.github.com/repos/behave/behave/issues/848/comments",
        "events_url": "https://api.github.com/repos/behave/behave/issues/848/events",
        "html_url": "https://github.com/behave/behave/issues/848",
        "id": 656315307,
        "node_id": "MDU6SXNzdWU2NTYzMTUzMDc=",
        "number": 848,
        "title": "Additional external documentation/presentation links",
        "user": {
            "login": "ncoghlan",
            "id": 1026649,
            "node_id": "MDQ6VXNlcjEwMjY2NDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1026649?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ncoghlan",
            "html_url": "https://github.com/ncoghlan",
            "followers_url": "https://api.github.com/users/ncoghlan/followers",
            "following_url": "https://api.github.com/users/ncoghlan/following{/other_user}",
            "gists_url": "https://api.github.com/users/ncoghlan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ncoghlan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ncoghlan/subscriptions",
            "organizations_url": "https://api.github.com/users/ncoghlan/orgs",
            "repos_url": "https://api.github.com/users/ncoghlan/repos",
            "events_url": "https://api.github.com/users/ncoghlan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ncoghlan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 350389546,
                "node_id": "MDU6TGFiZWwzNTAzODk1NDY=",
                "url": "https://api.github.com/repos/behave/behave/labels/docs",
                "name": "docs",
                "color": "5319e7",
                "default": false,
                "description": null
            },
            {
                "id": 31826678,
                "node_id": "MDU6TGFiZWwzMTgyNjY3OA==",
                "url": "https://api.github.com/repos/behave/behave/labels/enhancement",
                "name": "enhancement",
                "color": "02d7e1",
                "default": true,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-07-14T04:30:09Z",
        "updated_at": "2020-09-23T06:23:46Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I noticed https://behave.readthedocs.io/en/latest/more_info.html today, and wanted to offer couple more links that may be of interest:\r\n\r\n* Beginning BDD with Django (Nicole Harris):\r\n    * https://whoisnicoleharris.com/2015/03/16/bdd-part-one.html\r\n    * https://whoisnicoleharris.com/2015/03/19/bdd-part-two.html\r\n* Front-end integration testing with splinter (and behave!):\r\n    * https://pyvideo.org/pycon-au-2017/front-end-integration-testing-with-splinter.html",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/behave/behave/issues/847",
        "repository_url": "https://api.github.com/repos/behave/behave",
        "labels_url": "https://api.github.com/repos/behave/behave/issues/847/labels{/name}",
        "comments_url": "https://api.github.com/repos/behave/behave/issues/847/comments",
        "events_url": "https://api.github.com/repos/behave/behave/issues/847/events",
        "html_url": "https://github.com/behave/behave/issues/847",
        "id": 653328607,
        "node_id": "MDU6SXNzdWU2NTMzMjg2MDc=",
        "number": 847,
        "title": "Run different example tables in the same Scenario Outline",
        "user": {
            "login": "lucasmoura",
            "id": 2703696,
            "node_id": "MDQ6VXNlcjI3MDM2OTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2703696?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lucasmoura",
            "html_url": "https://github.com/lucasmoura",
            "followers_url": "https://api.github.com/users/lucasmoura/followers",
            "following_url": "https://api.github.com/users/lucasmoura/following{/other_user}",
            "gists_url": "https://api.github.com/users/lucasmoura/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lucasmoura/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lucasmoura/subscriptions",
            "organizations_url": "https://api.github.com/users/lucasmoura/orgs",
            "repos_url": "https://api.github.com/users/lucasmoura/repos",
            "events_url": "https://api.github.com/users/lucasmoura/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lucasmoura/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 31827222,
                "node_id": "MDU6TGFiZWwzMTgyNzIyMg==",
                "url": "https://api.github.com/repos/behave/behave/labels/duplicated",
                "name": "duplicated",
                "color": "e102d8",
                "default": false,
                "description": null
            },
            {
                "id": 31826678,
                "node_id": "MDU6TGFiZWwzMTgyNjY3OA==",
                "url": "https://api.github.com/repos/behave/behave/labels/enhancement",
                "name": "enhancement",
                "color": "02d7e1",
                "default": true,
                "description": null
            },
            {
                "id": 82234025,
                "node_id": "MDU6TGFiZWw4MjIzNDAyNQ==",
                "url": "https://api.github.com/repos/behave/behave/labels/mistaken",
                "name": "mistaken",
                "color": "5319e7",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2020-07-08T14:07:47Z",
        "updated_at": "2020-12-05T00:08:29Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I was trying to write the following scenario outline, where I need to kind of perform a cartesian product between the first set of example and the second set, since I would repeat all of the services commands for different ubuntu releases. I tried to write something like this:\r\n\r\n```\r\n   Scenario Outline:  run cmd in a ubuntu container\r\n        Given a `<release>` machine with\r\n        And I run ` <service>` as non-root\r\n        Then I will see the following on stderr:\r\n            \"\"\"\r\n            This command must be run as root (try using sudo)\r\n            \"\"\"\r\n        When I run `cmd <service> ` with sudo\r\n        Then I will see the following on stdout:\r\n            \"\"\"\r\n            Cannot run cmd on a container\r\n            \"\"\"\r\n\r\n        Examples: ubuntu release\r\n            | release |\r\n            | bionic  |\r\n            | focal   |   \r\n            | trusty  |\r\n            | xenial  |\r\n\r\n        Examples: Un-supported services in containers\r\n           | service         |\r\n           | service1       |\r\n           | service2       |\r\n           | service3       |\r\n```\r\n\r\nBut behave cannot recognize the second examples table. Is doing something like this achievable in behave ?",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/behave/behave/issues/845",
        "repository_url": "https://api.github.com/repos/behave/behave",
        "labels_url": "https://api.github.com/repos/behave/behave/issues/845/labels{/name}",
        "comments_url": "https://api.github.com/repos/behave/behave/issues/845/comments",
        "events_url": "https://api.github.com/repos/behave/behave/issues/845/events",
        "html_url": "https://github.com/behave/behave/pull/845",
        "id": 647324040,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDQxMzcwNTc4",
        "number": 845,
        "title": "Enhancement: repeated test runs (loop)",
        "user": {
            "login": "bbouv",
            "id": 56338473,
            "node_id": "MDQ6VXNlcjU2MzM4NDcz",
            "avatar_url": "https://avatars.githubusercontent.com/u/56338473?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bbouv",
            "html_url": "https://github.com/bbouv",
            "followers_url": "https://api.github.com/users/bbouv/followers",
            "following_url": "https://api.github.com/users/bbouv/following{/other_user}",
            "gists_url": "https://api.github.com/users/bbouv/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bbouv/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bbouv/subscriptions",
            "organizations_url": "https://api.github.com/users/bbouv/orgs",
            "repos_url": "https://api.github.com/users/bbouv/repos",
            "events_url": "https://api.github.com/users/bbouv/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bbouv/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 31826678,
                "node_id": "MDU6TGFiZWwzMTgyNjY3OA==",
                "url": "https://api.github.com/repos/behave/behave/labels/enhancement",
                "name": "enhancement",
                "color": "02d7e1",
                "default": true,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2020-06-29T12:17:12Z",
        "updated_at": "2020-12-04T23:44:12Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "pull_request": {
            "url": "https://api.github.com/repos/behave/behave/pulls/845",
            "html_url": "https://github.com/behave/behave/pull/845",
            "diff_url": "https://github.com/behave/behave/pull/845.diff",
            "patch_url": "https://github.com/behave/behave/pull/845.patch"
        },
        "body": "Add new loop configuration parameter to run tests more than once.\r\nThis allows to have only one report for the same tests running\r\nseveral times.",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/behave/behave/issues/843",
        "repository_url": "https://api.github.com/repos/behave/behave",
        "labels_url": "https://api.github.com/repos/behave/behave/issues/843/labels{/name}",
        "comments_url": "https://api.github.com/repos/behave/behave/issues/843/comments",
        "events_url": "https://api.github.com/repos/behave/behave/issues/843/events",
        "html_url": "https://github.com/behave/behave/pull/843",
        "id": 640543973,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDM1OTM1MzM1",
        "number": 843,
        "title": "Ensure that current JSONFormatter data is written in cases where run is aborted.",
        "user": {
            "login": "wombat70",
            "id": 6639742,
            "node_id": "MDQ6VXNlcjY2Mzk3NDI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6639742?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wombat70",
            "html_url": "https://github.com/wombat70",
            "followers_url": "https://api.github.com/users/wombat70/followers",
            "following_url": "https://api.github.com/users/wombat70/following{/other_user}",
            "gists_url": "https://api.github.com/users/wombat70/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wombat70/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wombat70/subscriptions",
            "organizations_url": "https://api.github.com/users/wombat70/orgs",
            "repos_url": "https://api.github.com/users/wombat70/repos",
            "events_url": "https://api.github.com/users/wombat70/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wombat70/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 31826678,
                "node_id": "MDU6TGFiZWwzMTgyNjY3OA==",
                "url": "https://api.github.com/repos/behave/behave/labels/enhancement",
                "name": "enhancement",
                "color": "02d7e1",
                "default": true,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-06-17T15:38:37Z",
        "updated_at": "2020-11-26T22:44:32Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "pull_request": {
            "url": "https://api.github.com/repos/behave/behave/pulls/843",
            "html_url": "https://github.com/behave/behave/pull/843",
            "diff_url": "https://github.com/behave/behave/pull/843.diff",
            "patch_url": "https://github.com/behave/behave/pull/843.patch"
        },
        "body": "\r\n\r\nRef. #842 ",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/behave/behave/issues/842",
        "repository_url": "https://api.github.com/repos/behave/behave",
        "labels_url": "https://api.github.com/repos/behave/behave/issues/842/labels{/name}",
        "comments_url": "https://api.github.com/repos/behave/behave/issues/842/comments",
        "events_url": "https://api.github.com/repos/behave/behave/issues/842/events",
        "html_url": "https://github.com/behave/behave/issues/842",
        "id": 640540616,
        "node_id": "MDU6SXNzdWU2NDA1NDA2MTY=",
        "number": 842,
        "title": "JSON file (from JSONFormatter) does not contain current feature results/data if run is aborted.",
        "user": {
            "login": "wombat70",
            "id": 6639742,
            "node_id": "MDQ6VXNlcjY2Mzk3NDI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6639742?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wombat70",
            "html_url": "https://github.com/wombat70",
            "followers_url": "https://api.github.com/users/wombat70/followers",
            "following_url": "https://api.github.com/users/wombat70/following{/other_user}",
            "gists_url": "https://api.github.com/users/wombat70/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wombat70/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wombat70/subscriptions",
            "organizations_url": "https://api.github.com/users/wombat70/orgs",
            "repos_url": "https://api.github.com/users/wombat70/repos",
            "events_url": "https://api.github.com/users/wombat70/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wombat70/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 836638861,
                "node_id": "MDU6TGFiZWw4MzY2Mzg4NjE=",
                "url": "https://api.github.com/repos/behave/behave/labels/wontfix",
                "name": "wontfix",
                "color": "ffffff",
                "default": true,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-06-17T15:34:04Z",
        "updated_at": "2020-12-25T12:29:34Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### tl;dr - JSON file (from JSONFormatter) does not contain current feature results/data if run is aborted.\r\n\r\nI recently had a need to abort test runs in case of certain step/scenario failures - i.e. not necessarily on first failure (which I could do with `--stop`). I simply used the `KeyboardInterrupt()` exception mechanism in my `after_scenario` hook, for example:\r\n\r\n```\r\ndef after_scenario(context, scenario):\r\n    if (scenario.status == behave_status.failed) and ('abort_on_fail' in context.tags):\r\n        raise KeyboardInterrupt()\r\n```\r\n\r\nThis worked fine, except that I also like to use the JSONFormatter (`--formatter json.pretty`) and I noticed that if a run is interrupted/aborted like this, then **I get a JSON file which excludes the current (failed/aborted) feature.** _If I run with multiple features, I only get JSON results for the preceding (passing) features._\r\n\r\n### Steps to reproduce.\r\n\r\n**features/abort.feature** \r\n```\r\nFeature: Test behave abort behaviour.\r\n\r\n  In order to be able to debug an application\r\n  As a test engineer\r\n  I want to be able to abort a test run and get a complete JSON result file.\r\n\r\n  @abort_on_fail\r\n  Example: This failing scenario is tagged to abort on failure.\r\n    Given this step passes\r\n    When this step fails\r\n    Then this step passes\r\n\r\n```\r\n\r\n**features/steps/abort_steps.py**\r\n```\r\n#!/bin/python\r\nfrom behave import given, when, then, step\r\n\r\n@given(u'this step passes')\r\n@then(u'this step passes')\r\ndef step_impl(context):\r\n    pass\r\n\r\n@when(u'this step fails')\r\ndef step_impl(context):\r\n    assert False, 'Step failed!'\r\n```\r\n\r\n**features/environment.py**\r\n```\r\n#!/bin/python\r\nfrom behave.model_core import Status as behave_status\r\ndef after_scenario(context, scenario):\r\n  if (scenario.status == behave_status.failed) and ('abort_on_fail' in context.tags):\r\n    raise KeyboardInterrupt()\r\n```\r\n\r\n**When run with the JSONFormatter, I get an empty JSON file:**\r\n```\r\n$ behave features/abort.feature --format json.pretty --outfile result.json\r\n\r\nABORTED: By user.\r\n\r\nFailing scenarios:\r\n  features/abort.feature:8  This failing scenario is tagged to abort on failure.\r\n\r\n0 features passed, 1 failed, 0 skipped\r\n0 scenarios passed, 1 failed, 0 skipped\r\n1 step passed, 1 failed, 1 skipped, 0 undefined\r\nTook 0m0.000s\r\n```\r\n\r\n**result.json**\r\n```\r\n[\r\n\r\n]\r\n```",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/behave/behave/issues/839",
        "repository_url": "https://api.github.com/repos/behave/behave",
        "labels_url": "https://api.github.com/repos/behave/behave/issues/839/labels{/name}",
        "comments_url": "https://api.github.com/repos/behave/behave/issues/839/comments",
        "events_url": "https://api.github.com/repos/behave/behave/issues/839/events",
        "html_url": "https://github.com/behave/behave/issues/839",
        "id": 628388481,
        "node_id": "MDU6SXNzdWU2MjgzODg0ODE=",
        "number": 839,
        "title": "Behavior of stepless scenarios during dry run",
        "user": {
            "login": "rittneje",
            "id": 28784688,
            "node_id": "MDQ6VXNlcjI4Nzg0Njg4",
            "avatar_url": "https://avatars.githubusercontent.com/u/28784688?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rittneje",
            "html_url": "https://github.com/rittneje",
            "followers_url": "https://api.github.com/users/rittneje/followers",
            "following_url": "https://api.github.com/users/rittneje/following{/other_user}",
            "gists_url": "https://api.github.com/users/rittneje/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rittneje/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rittneje/subscriptions",
            "organizations_url": "https://api.github.com/users/rittneje/orgs",
            "repos_url": "https://api.github.com/users/rittneje/repos",
            "events_url": "https://api.github.com/users/rittneje/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rittneje/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 31826355,
                "node_id": "MDU6TGFiZWwzMTgyNjM1NQ==",
                "url": "https://api.github.com/repos/behave/behave/labels/minor",
                "name": "minor",
                "color": "ededed",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2020-06-01T12:08:20Z",
        "updated_at": "2020-12-05T00:10:13Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "We have a number of scenarios that are missing backing steps. These scenarios are properly ignored when we run the tests \"for real\". However, when running with `--dry-run`, we noticed an inconsistency.\r\n\r\n`behave --dry-run --no-summary`\r\nThis fails (exit code 1), and outputs all the stepless scenarios, even though those scenarios were supposed to be skipped.\r\n\r\n`behave --dry-run --no-summary --tags='*'`\r\nThis passes.\r\n\r\nWe are using behave version 1.2.6. The scenarios in question have been annotated with a custom `skip` tag that causes `scenario.skip()` to be called in the `before_scenario` callback.",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/behave/behave/issues/838",
        "repository_url": "https://api.github.com/repos/behave/behave",
        "labels_url": "https://api.github.com/repos/behave/behave/issues/838/labels{/name}",
        "comments_url": "https://api.github.com/repos/behave/behave/issues/838/comments",
        "events_url": "https://api.github.com/repos/behave/behave/issues/838/events",
        "html_url": "https://github.com/behave/behave/issues/838",
        "id": 624774129,
        "node_id": "MDU6SXNzdWU2MjQ3NzQxMjk=",
        "number": 838,
        "title": "Remove use of os.path.relpath",
        "user": {
            "login": "sebastianraizer",
            "id": 65951092,
            "node_id": "MDQ6VXNlcjY1OTUxMDky",
            "avatar_url": "https://avatars.githubusercontent.com/u/65951092?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sebastianraizer",
            "html_url": "https://github.com/sebastianraizer",
            "followers_url": "https://api.github.com/users/sebastianraizer/followers",
            "following_url": "https://api.github.com/users/sebastianraizer/following{/other_user}",
            "gists_url": "https://api.github.com/users/sebastianraizer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sebastianraizer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sebastianraizer/subscriptions",
            "organizations_url": "https://api.github.com/users/sebastianraizer/orgs",
            "repos_url": "https://api.github.com/users/sebastianraizer/repos",
            "events_url": "https://api.github.com/users/sebastianraizer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sebastianraizer/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 2558150654,
                "node_id": "MDU6TGFiZWwyNTU4MTUwNjU0",
                "url": "https://api.github.com/repos/behave/behave/labels/pending.decision-needed",
                "name": "pending.decision-needed",
                "color": "6dbbce",
                "default": false,
                "description": ""
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2020-05-26T10:23:57Z",
        "updated_at": "2020-12-05T00:16:31Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "`os.path.relpath` does not work on windows when `os.curdir` is on a different drive than the feature files. ref: https://bugs.python.org/issue7195\r\nThis results in an exception:\r\n`ValueError: path is on drive D:, start on drive C:`\r\nProposed solution: `os.path.relpath` is not really needed so it could be removed:\r\n* for loging purposes, 'filename' variable can be used directly, or `os.path.abspath`. \r\n* for accessing the files, `os.path.abspath` can be used.",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/behave/behave/issues/834",
        "repository_url": "https://api.github.com/repos/behave/behave",
        "labels_url": "https://api.github.com/repos/behave/behave/issues/834/labels{/name}",
        "comments_url": "https://api.github.com/repos/behave/behave/issues/834/comments",
        "events_url": "https://api.github.com/repos/behave/behave/issues/834/events",
        "html_url": "https://github.com/behave/behave/pull/834",
        "id": 616656906,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDE2NzI1Nzc5",
        "number": 834,
        "title": "Allow Context to be used in step names and text",
        "user": {
            "login": "luto",
            "id": 2158203,
            "node_id": "MDQ6VXNlcjIxNTgyMDM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2158203?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/luto",
            "html_url": "https://github.com/luto",
            "followers_url": "https://api.github.com/users/luto/followers",
            "following_url": "https://api.github.com/users/luto/following{/other_user}",
            "gists_url": "https://api.github.com/users/luto/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/luto/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/luto/subscriptions",
            "organizations_url": "https://api.github.com/users/luto/orgs",
            "repos_url": "https://api.github.com/users/luto/repos",
            "events_url": "https://api.github.com/users/luto/events{/privacy}",
            "received_events_url": "https://api.github.com/users/luto/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 31826678,
                "node_id": "MDU6TGFiZWwzMTgyNjY3OA==",
                "url": "https://api.github.com/repos/behave/behave/labels/enhancement",
                "name": "enhancement",
                "color": "02d7e1",
                "default": true,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2020-05-12T13:28:23Z",
        "updated_at": "2020-12-08T10:52:28Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "pull_request": {
            "url": "https://api.github.com/repos/behave/behave/pulls/834",
            "html_url": "https://github.com/behave/behave/pull/834",
            "diff_url": "https://github.com/behave/behave/pull/834.diff",
            "patch_url": "https://github.com/behave/behave/pull/834.patch"
        },
        "body": "Insert the data inside context into step names and texts, so they can be used like variables from `Scenario Outlines`. Refer to the included docs for details.\r\n\r\nIf you'd like anything implemented differently, just tell me. I am happy to adapt this to your liking.",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/behave/behave/issues/829",
        "repository_url": "https://api.github.com/repos/behave/behave",
        "labels_url": "https://api.github.com/repos/behave/behave/issues/829/labels{/name}",
        "comments_url": "https://api.github.com/repos/behave/behave/issues/829/comments",
        "events_url": "https://api.github.com/repos/behave/behave/issues/829/events",
        "html_url": "https://github.com/behave/behave/issues/829",
        "id": 604722992,
        "node_id": "MDU6SXNzdWU2MDQ3MjI5OTI=",
        "number": 829,
        "title": "junit report can't be processed by SonarQube",
        "user": {
            "login": "javathought",
            "id": 1075135,
            "node_id": "MDQ6VXNlcjEwNzUxMzU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1075135?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/javathought",
            "html_url": "https://github.com/javathought",
            "followers_url": "https://api.github.com/users/javathought/followers",
            "following_url": "https://api.github.com/users/javathought/following{/other_user}",
            "gists_url": "https://api.github.com/users/javathought/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/javathought/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/javathought/subscriptions",
            "organizations_url": "https://api.github.com/users/javathought/orgs",
            "repos_url": "https://api.github.com/users/javathought/repos",
            "events_url": "https://api.github.com/users/javathought/events{/privacy}",
            "received_events_url": "https://api.github.com/users/javathought/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 836638861,
                "node_id": "MDU6TGFiZWw4MzY2Mzg4NjE=",
                "url": "https://api.github.com/repos/behave/behave/labels/wontfix",
                "name": "wontfix",
                "color": "ffffff",
                "default": true,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2020-04-22T12:36:18Z",
        "updated_at": "2020-12-25T12:29:36Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "When processing junit report sonarscanner outputs the following message : \r\n\r\n```sh\r\nINFO: Processing report 'C:\\dev\\caps-data\\reports\\TESTS-journalisation.xml'\r\nWARN: The resource for 'journalisation.Journalisation' is not found, drilling down to the details of this test won't be possible\r\n```\r\n\r\nThe junit report generated is : \r\n```xml\r\n<testsuite name=\"journalisation.Journalisation\" tests=\"1\" errors=\"0\" failures=\"0\" skipped=\"0\" time=\"0.004004\" timestamp=\"2020-04-21T19:04:12.722632\" hostname=\"DKRMTT2\">\r\n    <testcase classname=\"journalisation.Journalisation\" name=\"V\u00e9rification du format de journalisation\" status=\"passed\" time=\"0.004004\"><system-out>\r\n<![CDATA[\r\n@scenario.begin\r\n  Scenario: V\u00e9rification du format de journalisation\r\n    Given les nombres 3 + 4 ... passed in 0.001s\r\n    When la somme est calcul\u00e9e ... passed in 0.002s\r\n    Then le r\u00e9sultat est 7 ... passed in 0.001s\r\n\r\n@scenario.end\r\n--------------------------------------------------------------------------------\r\n]]>\r\n</system-out></testcase></testsuite>\r\n```\r\n\r\nIt seems SonarQube can't associated the report with features sources. `classname` are linked to feature and `name` are linked to the scenario\r\n\r\n\r\nPyTest-BDD generates reports that are well processed by SonarQube. In pytest-bdd, the `classname` links to python stefdef sources and the `name` to the scenario (rewited with _) of the feature\r\n\r\nExample of report generated by pytest-bdd (same scenarion v\u00e9rification_du_format_de_journalisation), mixed with a standard unittest:\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<testsuites>\r\n    <testsuite errors=\"0\" failures=\"0\" hostname=\"DKRMTT2\" name=\"pytest\" skipped=\"0\" tests=\"3\" time=\"1.884\" timestamp=\"2020-04-21T18:33:01.604784\">\r\n        <testcase classname=\"tests.test_convert_to_csv.Test\" name=\"test_plus\" time=\"0.013\"></testcase>\r\n        <testcase classname=\"tests.step_defs.test_journalisation\" name=\"test_v\u00e9rification_du_format_de_journalisation\" time=\"0.136\"></testcase>\r\n        <testcase classname=\"tests.step_defs.test_journalisation\" name=\"test_arguments_for_given_when_thens\" time=\"0.097\"></testcase>\r\n    </testsuite>\r\n</testsuites>\r\n```\r\n\r\n(Coverage is well processed)",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/behave/behave/issues/824",
        "repository_url": "https://api.github.com/repos/behave/behave",
        "labels_url": "https://api.github.com/repos/behave/behave/issues/824/labels{/name}",
        "comments_url": "https://api.github.com/repos/behave/behave/issues/824/comments",
        "events_url": "https://api.github.com/repos/behave/behave/issues/824/events",
        "html_url": "https://github.com/behave/behave/pull/824",
        "id": 594600114,
        "node_id": "MDExOlB1bGxSZXF1ZXN0Mzk5MjA1NTQ3",
        "number": 824,
        "title": "Create .pre-commit-hooks.yaml",
        "user": {
            "login": "deepyaman",
            "id": 14007150,
            "node_id": "MDQ6VXNlcjE0MDA3MTUw",
            "avatar_url": "https://avatars.githubusercontent.com/u/14007150?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/deepyaman",
            "html_url": "https://github.com/deepyaman",
            "followers_url": "https://api.github.com/users/deepyaman/followers",
            "following_url": "https://api.github.com/users/deepyaman/following{/other_user}",
            "gists_url": "https://api.github.com/users/deepyaman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/deepyaman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/deepyaman/subscriptions",
            "organizations_url": "https://api.github.com/users/deepyaman/orgs",
            "repos_url": "https://api.github.com/users/deepyaman/repos",
            "events_url": "https://api.github.com/users/deepyaman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/deepyaman/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 2537178140,
                "node_id": "MDU6TGFiZWwyNTM3MTc4MTQw",
                "url": "https://api.github.com/repos/behave/behave/labels/infrastructure",
                "name": "infrastructure",
                "color": "f9f8a7",
                "default": false,
                "description": "Development setup, automation, tooling."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2020-04-05T19:09:33Z",
        "updated_at": "2020-11-29T15:16:23Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "pull_request": {
            "url": "https://api.github.com/repos/behave/behave/pulls/824",
            "html_url": "https://github.com/behave/behave/pull/824",
            "diff_url": "https://github.com/behave/behave/pull/824.diff",
            "patch_url": "https://github.com/behave/behave/pull/824.patch"
        },
        "body": "This allows Behave to be used as a `pre-commit` hook. For example, if I want to make sure (some fast subset of) Behave tests pass before pushing to my repo, I could use the widely-used Python `pre-commit` package to [configure a pre-push hook](https://pre-commit.com/#pre-commit-during-push) to make sure the tests run successfully. (I assume Behave is likely not something you want to run for each commit, based on the idea that committing should be fast, so wouldn't configure it that way.)\r\n\r\nAs an example, this is also how Black has configured it: https://github.com/psf/black/blob/master/.pre-commit-hooks.yaml\r\nAn explanation as to how it's used: https://black.readthedocs.io/en/stable/version_control_integration.html\r\n\r\nThe configuration is simple but allows users to point to the repo and use the pre-commit hook out of the box, rather than having to define a custom hook for each repo. It would become another plugin `pre-commit` users would be able to use (added to https://pre-commit.com/hooks.html).",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/behave/behave/issues/799",
        "repository_url": "https://api.github.com/repos/behave/behave",
        "labels_url": "https://api.github.com/repos/behave/behave/issues/799/labels{/name}",
        "comments_url": "https://api.github.com/repos/behave/behave/issues/799/comments",
        "events_url": "https://api.github.com/repos/behave/behave/issues/799/events",
        "html_url": "https://github.com/behave/behave/issues/799",
        "id": 537290414,
        "node_id": "MDU6SXNzdWU1MzcyOTA0MTQ=",
        "number": 799,
        "title": "Behave runner.py bug, \"recovered safely\" but seems a bit strange",
        "user": {
            "login": "RichardBruskiewich",
            "id": 401246,
            "node_id": "MDQ6VXNlcjQwMTI0Ng==",
            "avatar_url": "https://avatars.githubusercontent.com/u/401246?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RichardBruskiewich",
            "html_url": "https://github.com/RichardBruskiewich",
            "followers_url": "https://api.github.com/users/RichardBruskiewich/followers",
            "following_url": "https://api.github.com/users/RichardBruskiewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/RichardBruskiewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RichardBruskiewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RichardBruskiewich/subscriptions",
            "organizations_url": "https://api.github.com/users/RichardBruskiewich/orgs",
            "repos_url": "https://api.github.com/users/RichardBruskiewich/repos",
            "events_url": "https://api.github.com/users/RichardBruskiewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RichardBruskiewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 836638861,
                "node_id": "MDU6TGFiZWw4MzY2Mzg4NjE=",
                "url": "https://api.github.com/repos/behave/behave/labels/wontfix",
                "name": "wontfix",
                "color": "ffffff",
                "default": true,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 11,
        "created_at": "2019-12-13T00:49:44Z",
        "updated_at": "2020-12-25T12:29:35Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "```\r\nTraceback (most recent call last):\r\n  File \"C:\\Program Files\\JetBrains\\PyCharm 2019.2\\plugins\\python\\helpers\\pydev\\_pydevd_bundle\\pydevd_xml.py\", line 282, in frame_vars_to_xml\r\n    xml += var_to_xml(v, str(k), evaluate_full_value=eval_full_val)\r\n  File \"C:\\Program Files\\JetBrains\\PyCharm 2019.2\\plugins\\python\\helpers\\pydev\\_pydevd_bundle\\pydevd_xml.py\", line 369, in var_to_xml\r\n    elif hasattr(v, \"__len__\") and not is_string(v):\r\n  File \"C:\\Users\\Richard\\PycharmProjects\\translator-testing-framework\\venv\\lib\\site-packages\\behave\\runner.py\", line 315, in __getattr__\r\n    return self.__dict__[attr]\r\nKeyError: '__len__'\r\nUnexpected error, recovered safely.\r\n```",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/behave/behave/issues/795",
        "repository_url": "https://api.github.com/repos/behave/behave",
        "labels_url": "https://api.github.com/repos/behave/behave/issues/795/labels{/name}",
        "comments_url": "https://api.github.com/repos/behave/behave/issues/795/comments",
        "events_url": "https://api.github.com/repos/behave/behave/issues/795/events",
        "html_url": "https://github.com/behave/behave/pull/795",
        "id": 526508207,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzQzOTU5NTAx",
        "number": 795,
        "title": "Adds the ability to use a custom runner in the behave command",
        "user": {
            "login": "kingbuzzman",
            "id": 329820,
            "node_id": "MDQ6VXNlcjMyOTgyMA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/329820?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kingbuzzman",
            "html_url": "https://github.com/kingbuzzman",
            "followers_url": "https://api.github.com/users/kingbuzzman/followers",
            "following_url": "https://api.github.com/users/kingbuzzman/following{/other_user}",
            "gists_url": "https://api.github.com/users/kingbuzzman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kingbuzzman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kingbuzzman/subscriptions",
            "organizations_url": "https://api.github.com/users/kingbuzzman/orgs",
            "repos_url": "https://api.github.com/users/kingbuzzman/repos",
            "events_url": "https://api.github.com/users/kingbuzzman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kingbuzzman/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 31826678,
                "node_id": "MDU6TGFiZWwzMTgyNjY3OA==",
                "url": "https://api.github.com/repos/behave/behave/labels/enhancement",
                "name": "enhancement",
                "color": "02d7e1",
                "default": true,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 26,
        "created_at": "2019-11-21T10:39:10Z",
        "updated_at": "2020-11-27T00:53:43Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "pull_request": {
            "url": "https://api.github.com/repos/behave/behave/pulls/795",
            "html_url": "https://github.com/behave/behave/pull/795",
            "diff_url": "https://github.com/behave/behave/pull/795.diff",
            "patch_url": "https://github.com/behave/behave/pull/795.patch"
        },
        "body": "This all started here: https://github.com/behave/behave-django/pull/100\r\n\r\nI'm making a rather large test migration from Aloe to Behave. \r\n\r\n```\r\n$ find . -name *.feature | xargs cat | wc -l\r\n  157533\r\n```\r\n\r\nCurrently, all our tests are inside our apps like so: (py + feature files all in the same folder inside EACH app)\r\n\r\n```\r\n<project>/<app>/features\r\n                        /__init__.py\r\n                        /sometest.feature\r\n                        /sometest_steps.py\r\n                        /steps.py\r\n```\r\n\r\nI do not want to make this migration any more painful than it needs to be, so my plan is to modify `behave.runner.Runner` ~`BehaviorDrivenTestRunner`~ to find my tests in the appropriate place. Right now there is no way for me to modify the way this works. ~This is the exact reason django exposes `--testrunner` and i was very surprised this was something overlooked in this project.~\r\n\r\nMaking this modification works great: `./manage.py behave --behave-runner myproject.runner.Runner`\r\n\r\n```python\r\nimport os\r\n\r\nfrom behave.runner import Runner as BaseRunner, load_step_modules\r\nfrom django.conf import settings\r\n\r\n\r\nclass Runner(BaseRunner):\r\n\r\n    def load_step_definitions(self, extra_step_paths=None):\r\n        step_paths = [] + list(extra_step_paths or [])\r\n        for root, dirs, _ in os.walk(settings.BASE_DIR):\r\n            for dir in dirs:\r\n                if dir.endswith('features'):\r\n                    full_path = os.path.join(root, dir)\r\n                    step_paths.append(full_path)\r\n\r\n        load_step_modules(step_paths)\r\n```",
        "performed_via_github_app": null
    }
]