[
    {
        "url": "https://api.github.com/repos/kislyuk/argcomplete/issues/337",
        "repository_url": "https://api.github.com/repos/kislyuk/argcomplete",
        "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/337/labels{/name}",
        "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/337/comments",
        "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/337/events",
        "html_url": "https://github.com/kislyuk/argcomplete/issues/337",
        "id": 783213095,
        "node_id": "MDU6SXNzdWU3ODMyMTMwOTU=",
        "number": 337,
        "title": "Test setup failures with Bash 5.1: AssertionError: '\\x1b[?2004l\\r\\x1b[?2004h' != ''",
        "user": {
            "login": "hroncok",
            "id": 2401856,
            "node_id": "MDQ6VXNlcjI0MDE4NTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2401856?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hroncok",
            "html_url": "https://github.com/hroncok",
            "followers_url": "https://api.github.com/users/hroncok/followers",
            "following_url": "https://api.github.com/users/hroncok/following{/other_user}",
            "gists_url": "https://api.github.com/users/hroncok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hroncok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hroncok/subscriptions",
            "organizations_url": "https://api.github.com/users/hroncok/orgs",
            "repos_url": "https://api.github.com/users/hroncok/repos",
            "events_url": "https://api.github.com/users/hroncok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hroncok/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2021-01-11T09:36:10Z",
        "updated_at": "2021-01-11T17:34:52Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "Hello. In Fedora Rawhide (development branch), we have updated to Bash 5.1. The tests here fail to setup with:\r\n\r\n```\r\n======================================================================\r\nFAIL: test_comp_point (test.test.TestBash)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/builddir/build/BUILD/argcomplete-1.12.0/test/test.py\", line 1206, in setUp\r\n    self.assertEqual(output, '')\r\nAssertionError: '\\x1b[?2004l\\r\\x1b[?2004h' != ''\r\n- \r\n\r\n======================================================================\r\nFAIL: test_completion_environment (test.test.TestBash)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/builddir/build/BUILD/argcomplete-1.12.0/test/test.py\", line 1206, in setUp\r\n    self.assertEqual(output, '')\r\nAssertionError: '\\x1b[?2004l\\r\\x1b[?2004h' != ''\r\n- \r\n\r\n======================================================================\r\nFAIL: test_continuation (test.test.TestBash)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/builddir/build/BUILD/argcomplete-1.12.0/test/test.py\", line 1206, in setUp\r\n    self.assertEqual(output, '')\r\nAssertionError: '\\x1b[?2004l\\r\\x1b[?2004h' != ''\r\n- \r\n\r\n======================================================================\r\nFAIL: test_debug_output (test.test.TestBash)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/builddir/build/BUILD/argcomplete-1.12.0/test/test.py\", line 1206, in setUp\r\n    self.assertEqual(output, '')\r\nAssertionError: '\\x1b[?2004l\\r\\x1b[?2004h' != ''\r\n- \r\n\r\n======================================================================\r\nFAIL: test_double_quoted_completion (test.test.TestBash)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/builddir/build/BUILD/argcomplete-1.12.0/test/test.py\", line 1206, in setUp\r\n    self.assertEqual(output, '')\r\nAssertionError: '\\x1b[?2004l\\r\\x1b[?2004h' != ''\r\n- \r\n\r\n======================================================================\r\nFAIL: test_exclamation_in_double_quotes (test.test.TestBash)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/builddir/build/BUILD/argcomplete-1.12.0/test/test.py\", line 1206, in setUp\r\n    self.assertEqual(output, '')\r\nAssertionError: '\\x1b[?2004l\\r\\x1b[?2004h' != ''\r\n- \r\n\r\n======================================================================\r\nFAIL: test_one_space_after_exact (test.test.TestBash)\r\nTest exactly one space is appended after an exact match.\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/builddir/build/BUILD/argcomplete-1.12.0/test/test.py\", line 1206, in setUp\r\n    self.assertEqual(output, '')\r\nAssertionError: '\\x1b[?2004l\\r\\x1b[?2004h' != ''\r\n- \r\n\r\n======================================================================\r\nFAIL: test_parse_special_characters (test.test.TestBash)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/builddir/build/BUILD/argcomplete-1.12.0/test/test.py\", line 1206, in setUp\r\n    self.assertEqual(output, '')\r\nAssertionError: '\\x1b[?2004l\\r\\x1b[?2004h' != ''\r\n- \r\n\r\n======================================================================\r\nFAIL: test_parse_special_characters_dollar (test.test.TestBash)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/builddir/build/BUILD/argcomplete-1.12.0/test/test.py\", line 1206, in setUp\r\n    self.assertEqual(output, '')\r\nAssertionError: '\\x1b[?2004l\\r\\x1b[?2004h' != ''\r\n- \r\n\r\n======================================================================\r\nFAIL: test_partial_completion (test.test.TestBash)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/builddir/build/BUILD/argcomplete-1.12.0/test/test.py\", line 1206, in setUp\r\n    self.assertEqual(output, '')\r\nAssertionError: '\\x1b[?2004l\\r\\x1b[?2004h' != ''\r\n- \r\n\r\n======================================================================\r\nFAIL: test_quoted_exact (test.test.TestBash)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/builddir/build/BUILD/argcomplete-1.12.0/test/test.py\", line 1206, in setUp\r\n    self.assertEqual(output, '')\r\nAssertionError: '\\x1b[?2004l\\r\\x1b[?2004h' != ''\r\n- \r\n\r\n======================================================================\r\nFAIL: test_quoted_space (test.test.TestBash)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/builddir/build/BUILD/argcomplete-1.12.0/test/test.py\", line 1206, in setUp\r\n    self.assertEqual(output, '')\r\nAssertionError: '\\x1b[?2004l\\r\\x1b[?2004h' != ''\r\n- \r\n\r\n======================================================================\r\nFAIL: test_quotes (test.test.TestBash)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/builddir/build/BUILD/argcomplete-1.12.0/test/test.py\", line 1206, in setUp\r\n    self.assertEqual(output, '')\r\nAssertionError: '\\x1b[?2004l\\r\\x1b[?2004h' != ''\r\n- \r\n\r\n======================================================================\r\nFAIL: test_simple_completion (test.test.TestBash)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/builddir/build/BUILD/argcomplete-1.12.0/test/test.py\", line 1206, in setUp\r\n    self.assertEqual(output, '')\r\nAssertionError: '\\x1b[?2004l\\r\\x1b[?2004h' != ''\r\n- \r\n\r\n======================================================================\r\nFAIL: test_single_quoted_completion (test.test.TestBash)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/builddir/build/BUILD/argcomplete-1.12.0/test/test.py\", line 1206, in setUp\r\n    self.assertEqual(output, '')\r\nAssertionError: '\\x1b[?2004l\\r\\x1b[?2004h' != ''\r\n- \r\n\r\n======================================================================\r\nFAIL: test_single_quotes_in_double_quotes (test.test.TestBash)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/builddir/build/BUILD/argcomplete-1.12.0/test/test.py\", line 1206, in setUp\r\n    self.assertEqual(output, '')\r\nAssertionError: '\\x1b[?2004l\\r\\x1b[?2004h' != ''\r\n- \r\n\r\n======================================================================\r\nFAIL: test_single_quotes_in_single_quotes (test.test.TestBash)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/builddir/build/BUILD/argcomplete-1.12.0/test/test.py\", line 1206, in setUp\r\n    self.assertEqual(output, '')\r\nAssertionError: '\\x1b[?2004l\\r\\x1b[?2004h' != ''\r\n- \r\n\r\n======================================================================\r\nFAIL: test_special_characters (test.test.TestBash)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/builddir/build/BUILD/argcomplete-1.12.0/test/test.py\", line 1206, in setUp\r\n    self.assertEqual(output, '')\r\nAssertionError: '\\x1b[?2004l\\r\\x1b[?2004h' != ''\r\n- \r\n\r\n======================================================================\r\nFAIL: test_special_characters_double_quoted (test.test.TestBash)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/builddir/build/BUILD/argcomplete-1.12.0/test/test.py\", line 1206, in setUp\r\n    self.assertEqual(output, '')\r\nAssertionError: '\\x1b[?2004l\\r\\x1b[?2004h' != ''\r\n- \r\n\r\n======================================================================\r\nFAIL: test_special_characters_single_quoted (test.test.TestBash)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/builddir/build/BUILD/argcomplete-1.12.0/test/test.py\", line 1206, in setUp\r\n    self.assertEqual(output, '')\r\nAssertionError: '\\x1b[?2004l\\r\\x1b[?2004h' != ''\r\n- \r\n\r\n======================================================================\r\nFAIL: test_temp_file (test.test.TestBash)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/builddir/build/BUILD/argcomplete-1.12.0/test/test.py\", line 1206, in setUp\r\n    self.assertEqual(output, '')\r\nAssertionError: '\\x1b[?2004l\\r\\x1b[?2004h' != ''\r\n- \r\n\r\n======================================================================\r\nFAIL: test_unquoted_space (test.test.TestBash)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/builddir/build/BUILD/argcomplete-1.12.0/test/test.py\", line 1206, in setUp\r\n    self.assertEqual(output, '')\r\nAssertionError: '\\x1b[?2004l\\r\\x1b[?2004h' != ''\r\n- \r\n\r\n======================================================================\r\nFAIL: test_wordbreak_chars (test.test.TestBash)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/builddir/build/BUILD/argcomplete-1.12.0/test/test.py\", line 1206, in setUp\r\n    self.assertEqual(output, '')\r\nAssertionError: '\\x1b[?2004l\\r\\x1b[?2004h' != ''\r\n- \r\n\r\n======================================================================\r\nFAIL: test_comp_point (test.test.TestBashGlobal)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/builddir/build/BUILD/argcomplete-1.12.0/test/test.py\", line 1206, in setUp\r\n    self.assertEqual(output, '')\r\nAssertionError: '\\x1b[?2004l\\r\\x1b[?2004h' != ''\r\n- \r\n\r\n======================================================================\r\nFAIL: test_completion_environment (test.test.TestBashGlobal)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/builddir/build/BUILD/argcomplete-1.12.0/test/test.py\", line 1206, in setUp\r\n    self.assertEqual(output, '')\r\nAssertionError: '\\x1b[?2004l\\r\\x1b[?2004h' != ''\r\n- \r\n\r\n======================================================================\r\nFAIL: test_console_script_module (test.test.TestBashGlobal)\r\nTest completing a console_script for a module.\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/builddir/build/BUILD/argcomplete-1.12.0/test/test.py\", line 1206, in setUp\r\n    self.assertEqual(output, '')\r\nAssertionError: '\\x1b[?2004l\\r\\x1b[?2004h' != ''\r\n- \r\n\r\n======================================================================\r\nFAIL: test_console_script_module_wheel (test.test.TestBashGlobal)\r\nTest completing a console_script for a module from a wheel.\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/builddir/build/BUILD/argcomplete-1.12.0/test/test.py\", line 1206, in setUp\r\n    self.assertEqual(output, '')\r\nAssertionError: '\\x1b[?2004l\\r\\x1b[?2004h' != ''\r\n- \r\n\r\n======================================================================\r\nFAIL: test_console_script_package (test.test.TestBashGlobal)\r\nTest completing a console_script for a package.\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/builddir/build/BUILD/argcomplete-1.12.0/test/test.py\", line 1206, in setUp\r\n    self.assertEqual(output, '')\r\nAssertionError: '\\x1b[?2004l\\r\\x1b[?2004h' != ''\r\n- \r\n\r\n======================================================================\r\nFAIL: test_console_script_package_wheel (test.test.TestBashGlobal)\r\nTest completing a console_script for a package from a wheel.\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/builddir/build/BUILD/argcomplete-1.12.0/test/test.py\", line 1206, in setUp\r\n    self.assertEqual(output, '')\r\nAssertionError: '\\x1b[?2004l\\r\\x1b[?2004h' != ''\r\n- \r\n\r\n======================================================================\r\nFAIL: test_continuation (test.test.TestBashGlobal)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/builddir/build/BUILD/argcomplete-1.12.0/test/test.py\", line 1206, in setUp\r\n    self.assertEqual(output, '')\r\nAssertionError: '\\x1b[?2004l\\r\\x1b[?2004h' != ''\r\n- \r\n\r\n======================================================================\r\nFAIL: test_debug_output (test.test.TestBashGlobal)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/builddir/build/BUILD/argcomplete-1.12.0/test/test.py\", line 1206, in setUp\r\n    self.assertEqual(output, '')\r\nAssertionError: '\\x1b[?2004l\\r\\x1b[?2004h' != ''\r\n- \r\n\r\n======================================================================\r\nFAIL: test_double_quoted_completion (test.test.TestBashGlobal)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/builddir/build/BUILD/argcomplete-1.12.0/test/test.py\", line 1206, in setUp\r\n    self.assertEqual(output, '')\r\nAssertionError: '\\x1b[?2004l\\r\\x1b[?2004h' != ''\r\n- \r\n\r\n======================================================================\r\nFAIL: test_exclamation_in_double_quotes (test.test.TestBashGlobal)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/builddir/build/BUILD/argcomplete-1.12.0/test/test.py\", line 1206, in setUp\r\n    self.assertEqual(output, '')\r\nAssertionError: '\\x1b[?2004l\\r\\x1b[?2004h' != ''\r\n- \r\n\r\n======================================================================\r\nFAIL: test_one_space_after_exact (test.test.TestBashGlobal)\r\nTest exactly one space is appended after an exact match.\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/builddir/build/BUILD/argcomplete-1.12.0/test/test.py\", line 1206, in setUp\r\n    self.assertEqual(output, '')\r\nAssertionError: '\\x1b[?2004l\\r\\x1b[?2004h' != ''\r\n- \r\n\r\n======================================================================\r\nFAIL: test_parse_special_characters (test.test.TestBashGlobal)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/builddir/build/BUILD/argcomplete-1.12.0/test/test.py\", line 1206, in setUp\r\n    self.assertEqual(output, '')\r\nAssertionError: '\\x1b[?2004l\\r\\x1b[?2004h' != ''\r\n- \r\n\r\n======================================================================\r\nFAIL: test_parse_special_characters_dollar (test.test.TestBashGlobal)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/builddir/build/BUILD/argcomplete-1.12.0/test/test.py\", line 1206, in setUp\r\n    self.assertEqual(output, '')\r\nAssertionError: '\\x1b[?2004l\\r\\x1b[?2004h' != ''\r\n- \r\n\r\n======================================================================\r\nFAIL: test_partial_completion (test.test.TestBashGlobal)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/builddir/build/BUILD/argcomplete-1.12.0/test/test.py\", line 1206, in setUp\r\n    self.assertEqual(output, '')\r\nAssertionError: '\\x1b[?2004l\\r\\x1b[?2004h' != ''\r\n- \r\n\r\n======================================================================\r\nFAIL: test_python_completion (test.test.TestBashGlobal)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/builddir/build/BUILD/argcomplete-1.12.0/test/test.py\", line 1206, in setUp\r\n    self.assertEqual(output, '')\r\nAssertionError: '\\x1b[?2004l\\r\\x1b[?2004h' != ''\r\n- \r\n\r\n======================================================================\r\nFAIL: test_python_filename_completion (test.test.TestBashGlobal)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/builddir/build/BUILD/argcomplete-1.12.0/test/test.py\", line 1206, in setUp\r\n    self.assertEqual(output, '')\r\nAssertionError: '\\x1b[?2004l\\r\\x1b[?2004h' != ''\r\n- \r\n\r\n======================================================================\r\nFAIL: test_python_module (test.test.TestBashGlobal)\r\nTest completing a module run with python3 -m.\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/builddir/build/BUILD/argcomplete-1.12.0/test/test.py\", line 1206, in setUp\r\n    self.assertEqual(output, '')\r\nAssertionError: '\\x1b[?2004l\\r\\x1b[?2004h' != ''\r\n- \r\n\r\n======================================================================\r\nFAIL: test_python_not_executable (test.test.TestBashGlobal)\r\nTest completing a script that cannot be run directly.\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/builddir/build/BUILD/argcomplete-1.12.0/test/test.py\", line 1206, in setUp\r\n    self.assertEqual(output, '')\r\nAssertionError: '\\x1b[?2004l\\r\\x1b[?2004h' != ''\r\n- \r\n\r\n======================================================================\r\nFAIL: test_quoted_exact (test.test.TestBashGlobal)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/builddir/build/BUILD/argcomplete-1.12.0/test/test.py\", line 1206, in setUp\r\n    self.assertEqual(output, '')\r\nAssertionError: '\\x1b[?2004l\\r\\x1b[?2004h' != ''\r\n- \r\n\r\n======================================================================\r\nFAIL: test_quoted_space (test.test.TestBashGlobal)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/builddir/build/BUILD/argcomplete-1.12.0/test/test.py\", line 1206, in setUp\r\n    self.assertEqual(output, '')\r\nAssertionError: '\\x1b[?2004l\\r\\x1b[?2004h' != ''\r\n- \r\n\r\n======================================================================\r\nFAIL: test_quotes (test.test.TestBashGlobal)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/builddir/build/BUILD/argcomplete-1.12.0/test/test.py\", line 1206, in setUp\r\n    self.assertEqual(output, '')\r\nAssertionError: '\\x1b[?2004l\\r\\x1b[?2004h' != ''\r\n- \r\n\r\n======================================================================\r\nFAIL: test_simple_completion (test.test.TestBashGlobal)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/builddir/build/BUILD/argcomplete-1.12.0/test/test.py\", line 1206, in setUp\r\n    self.assertEqual(output, '')\r\nAssertionError: '\\x1b[?2004l\\r\\x1b[?2004h' != ''\r\n- \r\n\r\n======================================================================\r\nFAIL: test_single_quoted_completion (test.test.TestBashGlobal)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/builddir/build/BUILD/argcomplete-1.12.0/test/test.py\", line 1206, in setUp\r\n    self.assertEqual(output, '')\r\nAssertionError: '\\x1b[?2004l\\r\\x1b[?2004h' != ''\r\n- \r\n\r\n======================================================================\r\nFAIL: test_single_quotes_in_double_quotes (test.test.TestBashGlobal)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/builddir/build/BUILD/argcomplete-1.12.0/test/test.py\", line 1206, in setUp\r\n    self.assertEqual(output, '')\r\nAssertionError: '\\x1b[?2004l\\r\\x1b[?2004h' != ''\r\n- \r\n\r\n======================================================================\r\nFAIL: test_single_quotes_in_single_quotes (test.test.TestBashGlobal)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/builddir/build/BUILD/argcomplete-1.12.0/test/test.py\", line 1206, in setUp\r\n    self.assertEqual(output, '')\r\nAssertionError: '\\x1b[?2004l\\r\\x1b[?2004h' != ''\r\n- \r\n\r\n======================================================================\r\nFAIL: test_special_characters (test.test.TestBashGlobal)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/builddir/build/BUILD/argcomplete-1.12.0/test/test.py\", line 1206, in setUp\r\n    self.assertEqual(output, '')\r\nAssertionError: '\\x1b[?2004l\\r\\x1b[?2004h' != ''\r\n- \r\n\r\n======================================================================\r\nFAIL: test_special_characters_double_quoted (test.test.TestBashGlobal)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/builddir/build/BUILD/argcomplete-1.12.0/test/test.py\", line 1206, in setUp\r\n    self.assertEqual(output, '')\r\nAssertionError: '\\x1b[?2004l\\r\\x1b[?2004h' != ''\r\n- \r\n\r\n======================================================================\r\nFAIL: test_special_characters_single_quoted (test.test.TestBashGlobal)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/builddir/build/BUILD/argcomplete-1.12.0/test/test.py\", line 1206, in setUp\r\n    self.assertEqual(output, '')\r\nAssertionError: '\\x1b[?2004l\\r\\x1b[?2004h' != ''\r\n- \r\n\r\n======================================================================\r\nFAIL: test_temp_file (test.test.TestBashGlobal)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/builddir/build/BUILD/argcomplete-1.12.0/test/test.py\", line 1206, in setUp\r\n    self.assertEqual(output, '')\r\nAssertionError: '\\x1b[?2004l\\r\\x1b[?2004h' != ''\r\n- \r\n\r\n======================================================================\r\nFAIL: test_unquoted_space (test.test.TestBashGlobal)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/builddir/build/BUILD/argcomplete-1.12.0/test/test.py\", line 1206, in setUp\r\n    self.assertEqual(output, '')\r\nAssertionError: '\\x1b[?2004l\\r\\x1b[?2004h' != ''\r\n- \r\n\r\n======================================================================\r\nFAIL: test_wordbreak_chars (test.test.TestBashGlobal)\r\n----------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/builddir/build/BUILD/argcomplete-1.12.0/test/test.py\", line 1206, in setUp\r\n    self.assertEqual(output, '')\r\nAssertionError: '\\x1b[?2004l\\r\\x1b[?2004h' != ''\r\n- \r\n\r\n----------------------------------------------------------------------\r\nRan 144 tests in 84.144s\r\n\r\nFAILED (failures=54, skipped=2, expected failures=9)\r\n\r\n```\r\n\r\nI unfortunately fail to reproduce this outside of our build environment :(\r\n\r\nWe have 1.12.0.",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/kislyuk/argcomplete/issues/330",
        "repository_url": "https://api.github.com/repos/kislyuk/argcomplete",
        "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/330/labels{/name}",
        "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/330/comments",
        "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/330/events",
        "html_url": "https://github.com/kislyuk/argcomplete/issues/330",
        "id": 741382280,
        "node_id": "MDU6SXNzdWU3NDEzODIyODA=",
        "number": 330,
        "title": "Could not make argcomplete work with zsh",
        "user": {
            "login": "Gim6626",
            "id": 169866,
            "node_id": "MDQ6VXNlcjE2OTg2Ng==",
            "avatar_url": "https://avatars.githubusercontent.com/u/169866?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Gim6626",
            "html_url": "https://github.com/Gim6626",
            "followers_url": "https://api.github.com/users/Gim6626/followers",
            "following_url": "https://api.github.com/users/Gim6626/following{/other_user}",
            "gists_url": "https://api.github.com/users/Gim6626/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Gim6626/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Gim6626/subscriptions",
            "organizations_url": "https://api.github.com/users/Gim6626/orgs",
            "repos_url": "https://api.github.com/users/Gim6626/repos",
            "events_url": "https://api.github.com/users/Gim6626/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Gim6626/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-11-12T08:16:01Z",
        "updated_at": "2020-11-27T04:24:37Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Tried to follow zsh autocomplete configuration guide from https://pypi.org/project/argcomplete/ (section \"Zsh Support\") but haven't succeeded.\r\n\r\nIf I add to `.zshrc` this (as in guide):\r\n```\r\nautoload -U bashcompinit\r\nbashcompinit\r\neval \"$(register-python-argcomplete /Users/d.vinokurov/work/lptl/lptl.py)\"\r\n```\r\n\r\nThen I got error on zsh start:\r\n```\r\ncomplete:13: command not found: compdef\r\n```\r\n\r\nGoogled it and found solution, now my `.zshrc` is such:\r\n```\r\nautoload -Uz compinit\r\ncompinit\r\nautoload -U bashcompinit\r\nbashcompinit\r\neval \"$(register-python-argcomplete /Users/d.vinokurov/work/lptl/lptl.py)\"\r\n```\r\n\r\nNow zsh prints:\r\n```\r\nzsh compinit: insecure directories, run compaudit for list.\r\nIgnore insecure directories and continue [y] or abort compinit [n]?\r\n```\r\n\r\n`compaudit` shows:\r\n```\r\nThere are insecure directories:\r\n/usr/local/share/zsh/site-functions\r\n/usr/local/share/zsh\r\n```\r\n\r\nSo I think it is not related to argcomplete. Pressed \"y\" but autocomplete still don't work.\r\n\r\nGoogled more and found that I need to source bash autocomplete script. So changed my autocomplete section in `.zshrc`:\r\n```\r\nautoload -Uz compinit\r\ncompinit\r\nautoload -U bashcompinit\r\nbashcompinit\r\nsource /Users/d.vinokurov/.bash_completion.d/python-argcomplete\r\neval \"$(register-python-argcomplete /Users/d.vinokurov/work/lptl/lptl.py)\"\r\n```\r\n\r\nBut it does not work too.\r\n\r\nPlease help me.",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/kislyuk/argcomplete/issues/329",
        "repository_url": "https://api.github.com/repos/kislyuk/argcomplete",
        "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/329/labels{/name}",
        "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/329/comments",
        "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/329/events",
        "html_url": "https://github.com/kislyuk/argcomplete/issues/329",
        "id": 739111081,
        "node_id": "MDU6SXNzdWU3MzkxMTEwODE=",
        "number": 329,
        "title": "Wrong doc for activate-global-python-argcomplete",
        "user": {
            "login": "maxrossello",
            "id": 4066651,
            "node_id": "MDQ6VXNlcjQwNjY2NTE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4066651?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/maxrossello",
            "html_url": "https://github.com/maxrossello",
            "followers_url": "https://api.github.com/users/maxrossello/followers",
            "following_url": "https://api.github.com/users/maxrossello/following{/other_user}",
            "gists_url": "https://api.github.com/users/maxrossello/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/maxrossello/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/maxrossello/subscriptions",
            "organizations_url": "https://api.github.com/users/maxrossello/orgs",
            "repos_url": "https://api.github.com/users/maxrossello/repos",
            "events_url": "https://api.github.com/users/maxrossello/events{/privacy}",
            "received_events_url": "https://api.github.com/users/maxrossello/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 10,
        "created_at": "2020-11-09T15:11:32Z",
        "updated_at": "2020-11-11T14:39:39Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Documentation says that the command for global autocomplete with dest folder specification should be\r\n\r\n_activate-global-python-argcomplete --dest=/path/to/bash_completion.d_\r\n\r\nbut actually the syntax with --dest= is rejected:\r\n\r\n_$ activate-global-python-argcomplete --dest=~/.local/share/bash-completion/completions    \r\nusage: activate-global-python-argcomplete [-h] [--dest DEST] [--user]  \r\n                                          [--no-defaults]  \r\n                                          [--complete-arguments ...]_\r\n\r\nAs the help reports, a space must be used instead:\r\n\r\n_$ activate-global-python-argcomplete --dest ~/.local/share/bash-completion/completions  \r\nInstalling bash completion script /home/rossellom/.local/share/bash-completion/completions/python-argcomplete_\r\n",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/kislyuk/argcomplete/issues/328",
        "repository_url": "https://api.github.com/repos/kislyuk/argcomplete",
        "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/328/labels{/name}",
        "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/328/comments",
        "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/328/events",
        "html_url": "https://github.com/kislyuk/argcomplete/issues/328",
        "id": 738814629,
        "node_id": "MDU6SXNzdWU3Mzg4MTQ2Mjk=",
        "number": 328,
        "title": "Give instructions to user with zero possible completions",
        "user": {
            "login": "mauvilsa",
            "id": 5780272,
            "node_id": "MDQ6VXNlcjU3ODAyNzI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5780272?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mauvilsa",
            "html_url": "https://github.com/mauvilsa",
            "followers_url": "https://api.github.com/users/mauvilsa/followers",
            "following_url": "https://api.github.com/users/mauvilsa/following{/other_user}",
            "gists_url": "https://api.github.com/users/mauvilsa/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mauvilsa/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mauvilsa/subscriptions",
            "organizations_url": "https://api.github.com/users/mauvilsa/orgs",
            "repos_url": "https://api.github.com/users/mauvilsa/repos",
            "events_url": "https://api.github.com/users/mauvilsa/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mauvilsa/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2020-11-09T08:33:24Z",
        "updated_at": "2020-11-27T11:03:46Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I would like to use the warn feature to give the user instructions even though there is no completion value that can be provided. The most simple case is an int argument. The value given to the argument could be already or not yet a valid int. But in either of those cases nothing can be completed, only a message can be given to help the user.\r\n\r\nIf I implement a `completer` that returns nothing, a double tab shows the warn message that I want but it also shows the files in the current directory which I don't want. I can overcome this by returning two completions just to print as message, but this is not a great solution since it is giving completion options that shouldn't be completed. Is there a way that the completer can indicate there are no completions available so it shouldn't use the fallback completer?\r\n\r\nFurthermore, using the two completions workaround I have observed an issue which I am not sure if it is a bug. The example code is:\r\n\r\n```python\r\n#!/usr/bin/env python3\r\n\r\nimport os\r\nimport argparse\r\nimport argcomplete\r\n\r\ndef completer(*args, prefix, **kwargs):\r\n    if chr(int(os.environ['COMP_TYPE'])) == '?':\r\n        try:\r\n            int(prefix)\r\n            msg = 'value already valid, expected type int'\r\n        except:\r\n            msg = 'value not yet valid, expected type int'\r\n        argcomplete.warn(msg)\r\n    return ['continue', 'please']\r\n\r\nparser = argparse.ArgumentParser()\r\nparser.add_argument('--val', type=int).completer = completer\r\nargcomplete.autocomplete(parser)\r\n```\r\n\r\nIf I double tab when the argument is given, but not yet a value, it works as expected printing the message and then restoring the prompt and command written, see below where the black rectangle (`\u25ae`) indicates where cursor ends up:\r\n\r\n```\r\n$ prog --val=<TAB><TAB>\r\n value not yet valid, expected type int\r\n\r\ncontinue  please    \r\n$ prog1 --val=\u25ae\r\n```\r\n\r\nHowever, if a value is given, after double tab the prompt and command are not restored, which give a very bad user experience, see below again with the black rectangle (`\u25ae`) indicating the cursor:\r\n\r\n```\r\n$ prog1 --val=1<TAB><TAB>\r\n value already valid, expected type int\r\n\u25ae\r\n```\r\n\r\nIs this a bug, or is there a way to achieve what I want?",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/kislyuk/argcomplete/issues/327",
        "repository_url": "https://api.github.com/repos/kislyuk/argcomplete",
        "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/327/labels{/name}",
        "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/327/comments",
        "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/327/events",
        "html_url": "https://github.com/kislyuk/argcomplete/issues/327",
        "id": 732711155,
        "node_id": "MDU6SXNzdWU3MzI3MTExNTU=",
        "number": 327,
        "title": "fish-shell: function name is broken for local files (./script.py)",
        "user": {
            "login": "MaZderMind",
            "id": 142237,
            "node_id": "MDQ6VXNlcjE0MjIzNw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/142237?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MaZderMind",
            "html_url": "https://github.com/MaZderMind",
            "followers_url": "https://api.github.com/users/MaZderMind/followers",
            "following_url": "https://api.github.com/users/MaZderMind/following{/other_user}",
            "gists_url": "https://api.github.com/users/MaZderMind/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MaZderMind/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MaZderMind/subscriptions",
            "organizations_url": "https://api.github.com/users/MaZderMind/orgs",
            "repos_url": "https://api.github.com/users/MaZderMind/repos",
            "events_url": "https://api.github.com/users/MaZderMind/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MaZderMind/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-10-29T22:40:29Z",
        "updated_at": "2020-11-28T16:17:15Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "When Using argcomplete under Fish-Shell, the generated Code contains the literal Path to the Script as part of a function-name:\r\n\r\n```\r\n~/C/makefile-style-python register-python-argcomplete --shell fish ./foo/bar/baz\r\n\r\nfunction __fish_./foo/bar/baz_complete\r\n    set -x _ARGCOMPLETE 1\r\n    set -x _ARGCOMPLETE_DFS \\t\r\n    set -x _ARGCOMPLETE_IFS \\n\r\n    set -x _ARGCOMPLETE_SUPPRESS_SPACE 1\r\n    set -x _ARGCOMPLETE_SHELL fish\r\n    set -x COMP_LINE (commandline -p)\r\n    set -x COMP_POINT (string length (commandline -cp))\r\n    set -x COMP_TYPE\r\n    if set -q _ARC_DEBUG\r\n        ./foo/bar/baz 8>&1 9>&2 1>/dev/null 2>&1\r\n    else\r\n        ./foo/bar/baz 8>&1 9>&2 1>&9 2>&1\r\n    end\r\nend\r\ncomplete -c ./foo/bar/baz -f -a '(__fish_./foo/bar/baz_complete)'\r\n```\r\n\r\n`__fish_./foo/bar/baz_complete` is not a valid function name in Fish and thus `| source`ing the generated Snippet results in an Error:\r\n\r\n```\r\n~/C/makefile-style-python register-python-argcomplete --shell fish ./foo/bar/baz | source\r\n- (line 2): function: Illegal function name '__fish_./foo/bar/baz_complete'\r\nfunction __fish_./foo/bar/baz_complete\r\n^\r\nfrom sourcing file -\r\n```\r\n\r\nRemoving the offending Characters only leaving `[a-zA-Z0-9]` or a similar restrictive character-set would result in a workable Fish script.",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/kislyuk/argcomplete/issues/326",
        "repository_url": "https://api.github.com/repos/kislyuk/argcomplete",
        "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/326/labels{/name}",
        "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/326/comments",
        "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/326/events",
        "html_url": "https://github.com/kislyuk/argcomplete/issues/326",
        "id": 730562289,
        "node_id": "MDU6SXNzdWU3MzA1NjIyODk=",
        "number": 326,
        "title": "Interaction between scripts that both use argcomplete",
        "user": {
            "login": "benmaddison",
            "id": 19263308,
            "node_id": "MDQ6VXNlcjE5MjYzMzA4",
            "avatar_url": "https://avatars.githubusercontent.com/u/19263308?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/benmaddison",
            "html_url": "https://github.com/benmaddison",
            "followers_url": "https://api.github.com/users/benmaddison/followers",
            "following_url": "https://api.github.com/users/benmaddison/following{/other_user}",
            "gists_url": "https://api.github.com/users/benmaddison/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/benmaddison/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/benmaddison/subscriptions",
            "organizations_url": "https://api.github.com/users/benmaddison/orgs",
            "repos_url": "https://api.github.com/users/benmaddison/repos",
            "events_url": "https://api.github.com/users/benmaddison/events{/privacy}",
            "received_events_url": "https://api.github.com/users/benmaddison/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-10-27T15:33:12Z",
        "updated_at": "2020-10-27T15:33:12Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I'm leaving this here mostly for posterity, as this issue don't seem to have been encountered (or at least written down) before, and hopefully it will save someone the hours of debugging that I've just been through!\r\n\r\nI am writing a CLI tool that spawns a subprocess (via `subprocess.run`) early on in its init phase, before the parser construction is finished.\r\n\r\nThe subprocess is a call to `ansible-inventory`, which itself happens to use `argcomplete`.\r\n\r\nAs a result `argcomplete.autocomplete` is called in the child process *before* it is called in the parent.\r\nBy default, all the `subprocess.Popen` wrappers copy `os.environ` verbatim to the child process, including `_ARGCOMPLETE=1` if present. Of course the child doesn't have an `fd8`, so the child exits with return code `1`.\r\n\r\nThe parent (in our case) raises an exception on the non-zero return from the child, and *bang* everything breaks.\r\n\r\nThe debug output contains no indication that the `Unable to open fd 8 for writing, quitting` message is actually being emitted by a different process, so piecing this together is not trivial!\r\n\r\nThe workaround, if you encounter this, is to strip all the completion-specific environment vars before the `subprocess` call:\r\n\r\n```python\r\ndef foo():\r\n    ...\r\n    env = {k: v for k, v in os.environ.items()\r\n           if not (k.startswith(\"COMP_\") or\r\n                   k.startswith(\"_ARGCOMPLETE\") or\r\n                   k == \"IFS\")}\r\n    proc = subprocess.Popen(cmd, stdout=subprocess.PIPE, env=env)\r\n    ...\r\n```\r\n\r\nI'm not sure that there is an easy fix for this within `argcomplete`.\r\nPerhaps another environment variable that indicates the executable being completed? The above fix is easy enough now that I understand what's going on ;-)\r\n",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/kislyuk/argcomplete/issues/303",
        "repository_url": "https://api.github.com/repos/kislyuk/argcomplete",
        "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/303/labels{/name}",
        "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/303/comments",
        "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/303/events",
        "html_url": "https://github.com/kislyuk/argcomplete/issues/303",
        "id": 621174462,
        "node_id": "MDU6SXNzdWU2MjExNzQ0NjI=",
        "number": 303,
        "title": "\"Unable to open fd 8 for writing, quitting\" on Linux",
        "user": {
            "login": "yarikoptic",
            "id": 39889,
            "node_id": "MDQ6VXNlcjM5ODg5",
            "avatar_url": "https://avatars.githubusercontent.com/u/39889?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yarikoptic",
            "html_url": "https://github.com/yarikoptic",
            "followers_url": "https://api.github.com/users/yarikoptic/followers",
            "following_url": "https://api.github.com/users/yarikoptic/following{/other_user}",
            "gists_url": "https://api.github.com/users/yarikoptic/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yarikoptic/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yarikoptic/subscriptions",
            "organizations_url": "https://api.github.com/users/yarikoptic/orgs",
            "repos_url": "https://api.github.com/users/yarikoptic/repos",
            "events_url": "https://api.github.com/users/yarikoptic/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yarikoptic/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2020-05-19T17:56:32Z",
        "updated_at": "2020-08-02T01:20:08Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Relevant older issue: https://github.com/kislyuk/argcomplete/issues/142 where I believe users also reported it happening on Linux but it was closed without any resolution (e.g. via suggested use of temporary files).\r\n\r\nIn my case I have a stock Debian (testing/unstable mix), python 3.8.3rc1 and I observe the same error with our DataLad which recently was fixed up to work (again) with argcomplete and it works for everyone else on the team but (un)lucky me. In the session you  below can see that I am getting the exception, and the process has no 8 fd among its fds:\r\n\r\n```\r\n$> _ARC_DEBUG=1 _ARGCOMPLETE=1 datalad --pdb -l 1 --help\r\n[DEBUG  ] Command line args 1st pass. Parsed: Namespace() Unparsed: ['--pdb', '--help'] \r\n[DEBUG  ] Discovering plugins \r\n[DEBUG  ] Loading entrypoints \r\n[DEBUG  ] Generating detailed description for the parser \r\n[Level 5] Finished setup_parser \r\n> /home/yoh/proj/misc/argcomplete/argcomplete/__init__.py(188)__call__()\r\n-> try:\r\n(Pdb) l\r\n183  \t        except:\r\n184  \t            debug_stream = sys.stderr\r\n185  \t\r\n186  \t        if output_stream is None:\r\n187  \t            import pdb; pdb.set_trace()\r\n188  ->\t            try:\r\n189  \t                output_stream = os.fdopen(8, \"wb\")\r\n190  \t            except:\r\n191  \t                debug(\"Unable to open fd 8 for writing, quitting\")\r\n192  \t                exit_method(1)\r\n193  \t\r\n(Pdb) os.getpid()\r\n1092474\r\n(Pdb) \r\n[3]  + 1092474 suspended  _ARC_DEBUG=1 _ARGCOMPLETE=1 datalad --pdb -l 1 --help\r\n\r\n$> ls -l /proc/1092474/fd \r\ntotal 0\r\nlrwx------ 1 yoh yoh 64 May 19 13:48 0 -> /dev/pts/16\r\nlrwx------ 1 yoh yoh 64 May 19 13:48 1 -> /dev/pts/16\r\nlrwx------ 1 yoh yoh 64 May 19 13:48 2 -> /dev/pts/16\r\nlr-x------ 1 yoh yoh 64 May 19 13:48 3 -> pipe:[41232747]\r\nlr-x------ 1 yoh yoh 64 May 19 13:48 5 -> pipe:[41232748]\r\n\r\n$> fg\r\n[3]    1092474 continued  _ARC_DEBUG=1 _ARGCOMPLETE=1 datalad --pdb -l 1 --help\r\nl\r\nl\r\n194  \t        # print(\"\", stream=debug_stream)\r\n195  \t        # for v in \"COMP_CWORD COMP_LINE COMP_POINT COMP_TYPE COMP_KEY _ARGCOMPLETE_COMP_WORDBREAKS COMP_WORDS\".split():\r\n196  \t        #     print(v, os.environ[v], stream=debug_stream)\r\n197  \t\r\n198  \t        ifs = os.environ.get(\"_ARGCOMPLETE_IFS\", \"\\013\")\r\n199  \t        if len(ifs) != 1:\r\n200  \t            debug(\"Invalid value for IFS, quitting [{v}]\".format(v=ifs))\r\n201  \t            exit_method(1)\r\n202  \t\r\n203  \t        comp_line = os.environ[\"COMP_LINE\"]\r\n204  \t        comp_point = int(os.environ[\"COMP_POINT\"])\r\n(Pdb) n\r\n> /home/yoh/proj/misc/argcomplete/argcomplete/__init__.py(189)__call__()\r\n-> output_stream = os.fdopen(8, \"wb\")\r\n(Pdb) \r\nOSError: [Errno 9] Bad file descriptor\r\n> /home/yoh/proj/misc/argcomplete/argcomplete/__init__.py(189)__call__()\r\n-> output_stream = os.fdopen(8, \"wb\")\r\n(Pdb) \r\n> /home/yoh/proj/misc/argcomplete/argcomplete/__init__.py(190)__call__()\r\n-> except:\r\n(Pdb) fg\r\n*** NameError: name 'fg' is not defined\r\n(Pdb) \r\nTraceback (most recent call last):\r\n  File \"/home/yoh/proj/misc/argcomplete/argcomplete/__init__.py\", line 189, in __call__\r\n    output_stream = os.fdopen(8, \"wb\")\r\n  File \"/usr/lib/python3.8/os.py\", line 1023, in fdopen\r\n    return io.open(fd, *args, **kwargs)\r\nOSError: [Errno 9] Bad file descriptor\r\n```\r\n\r\nin the shell I do get calls which do not explicitly create fd 8 failing:\r\n```shell\r\n$> python -c 'import os; os.fdopen(8)'     \r\nTraceback (most recent call last):\r\n  File \"<string>\", line 1, in <module>\r\n  File \"/usr/lib/python3.8/os.py\", line 1023, in fdopen\r\n    return io.open(fd, *args, **kwargs)\r\nOSError: [Errno 9] Bad file descriptor\r\n$> python -c 'import os; os.fdopen(8)' 8>&1\r\n$>\r\n```",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/kislyuk/argcomplete/issues/302",
        "repository_url": "https://api.github.com/repos/kislyuk/argcomplete",
        "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/302/labels{/name}",
        "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/302/comments",
        "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/302/events",
        "html_url": "https://github.com/kislyuk/argcomplete/pull/302",
        "id": 621146552,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NDIwMjUxODkx",
        "number": 302,
        "title": "Enable PowerShell in argcomplete",
        "user": {
            "login": "tibortakacs",
            "id": 11661709,
            "node_id": "MDQ6VXNlcjExNjYxNzA5",
            "avatar_url": "https://avatars.githubusercontent.com/u/11661709?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tibortakacs",
            "html_url": "https://github.com/tibortakacs",
            "followers_url": "https://api.github.com/users/tibortakacs/followers",
            "following_url": "https://api.github.com/users/tibortakacs/following{/other_user}",
            "gists_url": "https://api.github.com/users/tibortakacs/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tibortakacs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tibortakacs/subscriptions",
            "organizations_url": "https://api.github.com/users/tibortakacs/orgs",
            "repos_url": "https://api.github.com/users/tibortakacs/repos",
            "events_url": "https://api.github.com/users/tibortakacs/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tibortakacs/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 18,
        "created_at": "2020-05-19T17:09:39Z",
        "updated_at": "2020-05-28T08:10:18Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "pull_request": {
            "url": "https://api.github.com/repos/kislyuk/argcomplete/pulls/302",
            "html_url": "https://github.com/kislyuk/argcomplete/pull/302",
            "diff_url": "https://github.com/kislyuk/argcomplete/pull/302.diff",
            "patch_url": "https://github.com/kislyuk/argcomplete/pull/302.patch"
        },
        "body": "Currently, `argcomplete` does not support PowerShell (https://github.com/kislyuk/argcomplete/issues/166).\r\n\r\nHowever, it is possible to write PowerShell script to enable `argcomplete`:\r\nhttps://github.com/tibortakacs/powershell-argcomplete\r\n\r\nThis solution works well in PowerShell, however, it requires minor modification of the application which uses `argcomplete` (create special output stream, see at https://github.com/tibortakacs/powershell-argcomplete/blob/82c79a752dd0ebdeca5e7aa4e929f04253999363/mat.py#L92).\r\n\r\nThis is necessary because PowerShell does not support file descriptor '8'.\r\n\r\nThis PR would take a step forward, and enable `argcomplete` in PowerShell without any modification of the applications:\r\nhttps://github.com/tibortakacs/powershell-argcomplete/tree/poc_add_ostream_logic_to_argcomplete\r\n\r\nThis approach introduces a new environment variable to specify the output stream's file descriptor. The PowerShell script could just set the value to '2' (stdout) which stream is used to gather completion results.\r\n\r\nLooking forward to your opinion.",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/kislyuk/argcomplete/issues/282",
        "repository_url": "https://api.github.com/repos/kislyuk/argcomplete",
        "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/282/labels{/name}",
        "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/282/comments",
        "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/282/events",
        "html_url": "https://github.com/kislyuk/argcomplete/issues/282",
        "id": 541169878,
        "node_id": "MDU6SXNzdWU1NDExNjk4Nzg=",
        "number": 282,
        "title": "Speed up completion hook shellcode",
        "user": {
            "login": "kislyuk",
            "id": 862013,
            "node_id": "MDQ6VXNlcjg2MjAxMw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/862013?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kislyuk",
            "html_url": "https://github.com/kislyuk",
            "followers_url": "https://api.github.com/users/kislyuk/followers",
            "following_url": "https://api.github.com/users/kislyuk/following{/other_user}",
            "gists_url": "https://api.github.com/users/kislyuk/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kislyuk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kislyuk/subscriptions",
            "organizations_url": "https://api.github.com/users/kislyuk/orgs",
            "repos_url": "https://api.github.com/users/kislyuk/repos",
            "events_url": "https://api.github.com/users/kislyuk/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kislyuk/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2019-12-20T19:47:17Z",
        "updated_at": "2020-05-23T21:22:12Z",
        "closed_at": null,
        "author_association": "OWNER",
        "active_lock_reason": null,
        "body": "@evanunderscore interest\r\n\r\nIn the course of looking into #278, I've become concerned about the performance impact of `pkg_resources.iter_entry_points()` in https://github.com/kislyuk/argcomplete/blob/master/argcomplete/_check_console_script.py.\r\n\r\nI'd like us to profile the completion hook shellcode. We might want to use techniques developed by \r\nhttps://github.com/DropD/reentry to speed up entry point scanning, or look for other ways to speed up the shellcode.",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/kislyuk/argcomplete/issues/257",
        "repository_url": "https://api.github.com/repos/kislyuk/argcomplete",
        "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/257/labels{/name}",
        "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/257/comments",
        "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/257/events",
        "html_url": "https://github.com/kislyuk/argcomplete/pull/257",
        "id": 350051836,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MjA3OTk0NzIz",
        "number": 257,
        "title": "Use sys.executable for python in test subshells",
        "user": {
            "login": "kislyuk",
            "id": 862013,
            "node_id": "MDQ6VXNlcjg2MjAxMw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/862013?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kislyuk",
            "html_url": "https://github.com/kislyuk",
            "followers_url": "https://api.github.com/users/kislyuk/followers",
            "following_url": "https://api.github.com/users/kislyuk/following{/other_user}",
            "gists_url": "https://api.github.com/users/kislyuk/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kislyuk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kislyuk/subscriptions",
            "organizations_url": "https://api.github.com/users/kislyuk/orgs",
            "repos_url": "https://api.github.com/users/kislyuk/repos",
            "events_url": "https://api.github.com/users/kislyuk/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kislyuk/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2018-08-13T14:23:24Z",
        "updated_at": "2020-02-03T15:59:03Z",
        "closed_at": null,
        "author_association": "OWNER",
        "active_lock_reason": null,
        "pull_request": {
            "url": "https://api.github.com/repos/kislyuk/argcomplete/pulls/257",
            "html_url": "https://github.com/kislyuk/argcomplete/pull/257",
            "diff_url": "https://github.com/kislyuk/argcomplete/pull/257.diff",
            "patch_url": "https://github.com/kislyuk/argcomplete/pull/257.patch"
        },
        "body": "",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/kislyuk/argcomplete/issues/255",
        "repository_url": "https://api.github.com/repos/kislyuk/argcomplete",
        "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/255/labels{/name}",
        "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/255/comments",
        "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/255/events",
        "html_url": "https://github.com/kislyuk/argcomplete/issues/255",
        "id": 349814930,
        "node_id": "MDU6SXNzdWUzNDk4MTQ5MzA=",
        "number": 255,
        "title": "test.py relies on python",
        "user": {
            "login": "ignatenkobrain",
            "id": 2866862,
            "node_id": "MDQ6VXNlcjI4NjY4NjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2866862?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ignatenkobrain",
            "html_url": "https://github.com/ignatenkobrain",
            "followers_url": "https://api.github.com/users/ignatenkobrain/followers",
            "following_url": "https://api.github.com/users/ignatenkobrain/following{/other_user}",
            "gists_url": "https://api.github.com/users/ignatenkobrain/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ignatenkobrain/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ignatenkobrain/subscriptions",
            "organizations_url": "https://api.github.com/users/ignatenkobrain/orgs",
            "repos_url": "https://api.github.com/users/ignatenkobrain/repos",
            "events_url": "https://api.github.com/users/ignatenkobrain/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ignatenkobrain/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2018-08-12T14:00:19Z",
        "updated_at": "2019-04-14T03:09:17Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Please use sys.executable instead.",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/kislyuk/argcomplete/issues/252",
        "repository_url": "https://api.github.com/repos/kislyuk/argcomplete",
        "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/252/labels{/name}",
        "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/252/comments",
        "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/252/events",
        "html_url": "https://github.com/kislyuk/argcomplete/issues/252",
        "id": 315731816,
        "node_id": "MDU6SXNzdWUzMTU3MzE4MTY=",
        "number": 252,
        "title": "Public FilteredFilesCompleter",
        "user": {
            "login": "ghost",
            "id": 10137,
            "node_id": "MDQ6VXNlcjEwMTM3",
            "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ghost",
            "html_url": "https://github.com/ghost",
            "followers_url": "https://api.github.com/users/ghost/followers",
            "following_url": "https://api.github.com/users/ghost/following{/other_user}",
            "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
            "organizations_url": "https://api.github.com/users/ghost/orgs",
            "repos_url": "https://api.github.com/users/ghost/repos",
            "events_url": "https://api.github.com/users/ghost/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ghost/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2018-04-19T05:23:36Z",
        "updated_at": "2018-04-19T05:23:36Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Is there any reason for _FilteredFilesCompleter being a private class? It is exactly what I would need and it feels like a general purpose completer.\r\n",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/kislyuk/argcomplete/issues/240",
        "repository_url": "https://api.github.com/repos/kislyuk/argcomplete",
        "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/240/labels{/name}",
        "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/240/comments",
        "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/240/events",
        "html_url": "https://github.com/kislyuk/argcomplete/issues/240",
        "id": 278732649,
        "node_id": "MDU6SXNzdWUyNzg3MzI2NDk=",
        "number": 240,
        "title": "Handling of argparse.REMAINDER does not match argparse semantics",
        "user": {
            "login": "evanunderscore",
            "id": 13419218,
            "node_id": "MDQ6VXNlcjEzNDE5MjE4",
            "avatar_url": "https://avatars.githubusercontent.com/u/13419218?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/evanunderscore",
            "html_url": "https://github.com/evanunderscore",
            "followers_url": "https://api.github.com/users/evanunderscore/followers",
            "following_url": "https://api.github.com/users/evanunderscore/following{/other_user}",
            "gists_url": "https://api.github.com/users/evanunderscore/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/evanunderscore/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/evanunderscore/subscriptions",
            "organizations_url": "https://api.github.com/users/evanunderscore/orgs",
            "repos_url": "https://api.github.com/users/evanunderscore/repos",
            "events_url": "https://api.github.com/users/evanunderscore/events{/privacy}",
            "received_events_url": "https://api.github.com/users/evanunderscore/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2017-12-03T00:50:19Z",
        "updated_at": "2017-12-03T00:50:19Z",
        "closed_at": null,
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "Capturing https://github.com/kislyuk/argcomplete/issues/238#issuecomment-348672193 as a separate issue.\r\n",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/kislyuk/argcomplete/issues/232",
        "repository_url": "https://api.github.com/repos/kislyuk/argcomplete",
        "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/232/labels{/name}",
        "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/232/comments",
        "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/232/events",
        "html_url": "https://github.com/kislyuk/argcomplete/issues/232",
        "id": 260288099,
        "node_id": "MDU6SXNzdWUyNjAyODgwOTk=",
        "number": 232,
        "title": "In a REPL environment, patched parsers incorrectly assume subparsers are patched.",
        "user": {
            "login": "calc84maniac",
            "id": 384530,
            "node_id": "MDQ6VXNlcjM4NDUzMA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/384530?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/calc84maniac",
            "html_url": "https://github.com/calc84maniac",
            "followers_url": "https://api.github.com/users/calc84maniac/followers",
            "following_url": "https://api.github.com/users/calc84maniac/following{/other_user}",
            "gists_url": "https://api.github.com/users/calc84maniac/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/calc84maniac/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/calc84maniac/subscriptions",
            "organizations_url": "https://api.github.com/users/calc84maniac/orgs",
            "repos_url": "https://api.github.com/users/calc84maniac/repos",
            "events_url": "https://api.github.com/users/calc84maniac/events{/privacy}",
            "received_events_url": "https://api.github.com/users/calc84maniac/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2017-09-25T14:02:24Z",
        "updated_at": "2017-09-26T14:26:19Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I say a REPL environment, but this really applies to any environment where an ArgumentParser is used for both parsing and completion during a single run of the program.\r\n\r\nWhen parsing (not completing), newly encountered subparsers [are not patched](https://github.com/kislyuk/argcomplete/blob/82706cc1e88ea797c7da3398224c9fd988cb1d62/argcomplete/__init__.py#L296), but the parser that calls the subparser may have been patched by an earlier completion. This means that if a parsing error occurs in the subparser, the patched parser [attempts](https://github.com/kislyuk/argcomplete/blob/75bc04b7d457bb865453b2bcd767b68b5df936a8/argcomplete/my_argparse.py#L143) to combine the subparser's `_argcomplete_namespace` member (which doesn't exist) with the parent namespace, causing an uncaught AttributeError.\r\n\r\nAs a workaround I could create two different ArgumentParsers, one for parsing and one for completion, but that seems a bit messy.",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/kislyuk/argcomplete/issues/227",
        "repository_url": "https://api.github.com/repos/kislyuk/argcomplete",
        "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/227/labels{/name}",
        "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/227/comments",
        "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/227/events",
        "html_url": "https://github.com/kislyuk/argcomplete/issues/227",
        "id": 254791158,
        "node_id": "MDU6SXNzdWUyNTQ3OTExNTg=",
        "number": 227,
        "title": "Cache completion decisions in global completion script",
        "user": {
            "login": "evanunderscore",
            "id": 13419218,
            "node_id": "MDQ6VXNlcjEzNDE5MjE4",
            "avatar_url": "https://avatars.githubusercontent.com/u/13419218?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/evanunderscore",
            "html_url": "https://github.com/evanunderscore",
            "followers_url": "https://api.github.com/users/evanunderscore/followers",
            "following_url": "https://api.github.com/users/evanunderscore/following{/other_user}",
            "gists_url": "https://api.github.com/users/evanunderscore/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/evanunderscore/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/evanunderscore/subscriptions",
            "organizations_url": "https://api.github.com/users/evanunderscore/orgs",
            "repos_url": "https://api.github.com/users/evanunderscore/repos",
            "events_url": "https://api.github.com/users/evanunderscore/events{/privacy}",
            "received_events_url": "https://api.github.com/users/evanunderscore/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2017-09-02T05:34:46Z",
        "updated_at": "2017-09-02T05:34:46Z",
        "closed_at": null,
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "Any completion decision that requires starting a python interpreter an additional time to decide how to complete the script ends up being very slow. This could be mitigated by using the caching I described in #101.",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/kislyuk/argcomplete/issues/222",
        "repository_url": "https://api.github.com/repos/kislyuk/argcomplete",
        "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/222/labels{/name}",
        "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/222/comments",
        "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/222/events",
        "html_url": "https://github.com/kislyuk/argcomplete/issues/222",
        "id": 247959717,
        "node_id": "MDU6SXNzdWUyNDc5NTk3MTc=",
        "number": 222,
        "title": "Request: Support aliases in argcompletion",
        "user": {
            "login": "jonasstoetzel",
            "id": 23197408,
            "node_id": "MDQ6VXNlcjIzMTk3NDA4",
            "avatar_url": "https://avatars.githubusercontent.com/u/23197408?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jonasstoetzel",
            "html_url": "https://github.com/jonasstoetzel",
            "followers_url": "https://api.github.com/users/jonasstoetzel/followers",
            "following_url": "https://api.github.com/users/jonasstoetzel/following{/other_user}",
            "gists_url": "https://api.github.com/users/jonasstoetzel/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jonasstoetzel/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jonasstoetzel/subscriptions",
            "organizations_url": "https://api.github.com/users/jonasstoetzel/orgs",
            "repos_url": "https://api.github.com/users/jonasstoetzel/repos",
            "events_url": "https://api.github.com/users/jonasstoetzel/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jonasstoetzel/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2017-08-04T10:00:37Z",
        "updated_at": "2018-02-13T16:07:28Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hi,\r\n> For my-awesome-script, we currently don't do any work to make this work with aliases. If you need this, I'd suggest opening a new issue to request the feature.\r\n\r\nThere it is! :-)  \r\nI currently have a script at `/path/to/file` which takes two positional arguments `arg1` + `arg2`.\r\nThe script is usually called via `alias a=python3 /path/to/file arg1` and `arg2` should be completable. It works fine when I type it out, but it would be really nice if I could use argcomplete with my alias.\r\n\r\nThanks!",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/kislyuk/argcomplete/issues/221",
        "repository_url": "https://api.github.com/repos/kislyuk/argcomplete",
        "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/221/labels{/name}",
        "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/221/comments",
        "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/221/events",
        "html_url": "https://github.com/kislyuk/argcomplete/issues/221",
        "id": 247491803,
        "node_id": "MDU6SXNzdWUyNDc0OTE4MDM=",
        "number": 221,
        "title": "When there are multiple optional positional arguments, their completers are combined.",
        "user": {
            "login": "calc84maniac",
            "id": 384530,
            "node_id": "MDQ6VXNlcjM4NDUzMA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/384530?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/calc84maniac",
            "html_url": "https://github.com/calc84maniac",
            "followers_url": "https://api.github.com/users/calc84maniac/followers",
            "following_url": "https://api.github.com/users/calc84maniac/following{/other_user}",
            "gists_url": "https://api.github.com/users/calc84maniac/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/calc84maniac/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/calc84maniac/subscriptions",
            "organizations_url": "https://api.github.com/users/calc84maniac/orgs",
            "repos_url": "https://api.github.com/users/calc84maniac/repos",
            "events_url": "https://api.github.com/users/calc84maniac/events{/privacy}",
            "received_events_url": "https://api.github.com/users/calc84maniac/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2017-08-02T19:09:35Z",
        "updated_at": "2017-08-06T23:15:19Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "The title is fairly self-explanatory. If you add multiple positional arguments with `nargs='?'`, the completer for every unentered argument is called and combined, rather than just the first unentered one. As far as I can tell, this is not the behavior accepted by argparse (which always assigns optional arguments greedily in positional order). This is easiest to demonstrate by creating multiple arguments with different 'choices' lists.\r\n\r\nThis issue seems to be somewhat acknowledged by [this comment](https://github.com/kislyuk/argcomplete/blob/master/argcomplete/__init__.py#L387), but I don't see where the ambiguity comes into play thanks to the positional ordering. I'm dealing with a choices argument followed by a filename argument, and there's no case where the file completion should need to occur if the choice hasn't been entered yet.",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/kislyuk/argcomplete/issues/213",
        "repository_url": "https://api.github.com/repos/kislyuk/argcomplete",
        "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/213/labels{/name}",
        "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/213/comments",
        "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/213/events",
        "html_url": "https://github.com/kislyuk/argcomplete/issues/213",
        "id": 213554778,
        "node_id": "MDU6SXNzdWUyMTM1NTQ3Nzg=",
        "number": 213,
        "title": "register-python-argcomplete - exactly registered name",
        "user": {
            "login": "DerWeh",
            "id": 22542812,
            "node_id": "MDQ6VXNlcjIyNTQyODEy",
            "avatar_url": "https://avatars.githubusercontent.com/u/22542812?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/DerWeh",
            "html_url": "https://github.com/DerWeh",
            "followers_url": "https://api.github.com/users/DerWeh/followers",
            "following_url": "https://api.github.com/users/DerWeh/following{/other_user}",
            "gists_url": "https://api.github.com/users/DerWeh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/DerWeh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/DerWeh/subscriptions",
            "organizations_url": "https://api.github.com/users/DerWeh/orgs",
            "repos_url": "https://api.github.com/users/DerWeh/repos",
            "events_url": "https://api.github.com/users/DerWeh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/DerWeh/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 10,
        "created_at": "2017-03-11T19:53:06Z",
        "updated_at": "2017-06-04T16:45:45Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Your documentation says:\r\n\r\n> Shellcode (only necessary if global completion is not activated - see Global completion below), to be put in e.g. .bashrc:\r\n> \r\n> eval \"$(register-python-argcomplete my-awesome-script.py)\"\r\n> \r\n> Note that the script name is passed directly to complete, meaning it is only tab completed when invoked exactly as it was registered. The above line will not allow you to complete ./my-awesome-script.py, or /path/to/my-awesome-script.py.\r\n\r\nBut if I try it sadly is exactly the other way around. Arguments after `./my-awesome-script.py` and `/path/to/my-awesome-script.py` will be completed, after `my-awesome-script.py` however they won't.",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/kislyuk/argcomplete/issues/207",
        "repository_url": "https://api.github.com/repos/kislyuk/argcomplete",
        "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/207/labels{/name}",
        "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/207/comments",
        "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/207/events",
        "html_url": "https://github.com/kislyuk/argcomplete/issues/207",
        "id": 203778912,
        "node_id": "MDU6SXNzdWUyMDM3Nzg5MTI=",
        "number": 207,
        "title": "Global completion for python should default to bash-completion",
        "user": {
            "login": "evanunderscore",
            "id": 13419218,
            "node_id": "MDQ6VXNlcjEzNDE5MjE4",
            "avatar_url": "https://avatars.githubusercontent.com/u/13419218?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/evanunderscore",
            "html_url": "https://github.com/evanunderscore",
            "followers_url": "https://api.github.com/users/evanunderscore/followers",
            "following_url": "https://api.github.com/users/evanunderscore/following{/other_user}",
            "gists_url": "https://api.github.com/users/evanunderscore/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/evanunderscore/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/evanunderscore/subscriptions",
            "organizations_url": "https://api.github.com/users/evanunderscore/orgs",
            "repos_url": "https://api.github.com/users/evanunderscore/repos",
            "events_url": "https://api.github.com/users/evanunderscore/events{/privacy}",
            "received_events_url": "https://api.github.com/users/evanunderscore/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2017-01-28T01:37:43Z",
        "updated_at": "2017-01-28T01:37:43Z",
        "closed_at": null,
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "The global completion function currently does not fall back on `_completion_loader` when completing `python`, since if it were allowed to register its completion function, argcomplete wouldn't get a chance to complete it next time.",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/kislyuk/argcomplete/issues/141",
        "repository_url": "https://api.github.com/repos/kislyuk/argcomplete",
        "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/141/labels{/name}",
        "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/141/comments",
        "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/141/events",
        "html_url": "https://github.com/kislyuk/argcomplete/pull/141",
        "id": 168721111,
        "node_id": "MDExOlB1bGxSZXF1ZXN0Nzk2MjExMDU=",
        "number": 141,
        "title": "add native zsh support",
        "user": {
            "login": "haifengkao",
            "id": 4080524,
            "node_id": "MDQ6VXNlcjQwODA1MjQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4080524?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/haifengkao",
            "html_url": "https://github.com/haifengkao",
            "followers_url": "https://api.github.com/users/haifengkao/followers",
            "following_url": "https://api.github.com/users/haifengkao/following{/other_user}",
            "gists_url": "https://api.github.com/users/haifengkao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/haifengkao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/haifengkao/subscriptions",
            "organizations_url": "https://api.github.com/users/haifengkao/orgs",
            "repos_url": "https://api.github.com/users/haifengkao/repos",
            "events_url": "https://api.github.com/users/haifengkao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/haifengkao/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 11,
        "created_at": "2016-08-01T19:21:25Z",
        "updated_at": "2020-02-03T15:59:03Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "pull_request": {
            "url": "https://api.github.com/repos/kislyuk/argcomplete/pulls/141",
            "html_url": "https://github.com/kislyuk/argcomplete/pull/141",
            "diff_url": "https://github.com/kislyuk/argcomplete/pull/141.diff",
            "patch_url": "https://github.com/kislyuk/argcomplete/pull/141.patch"
        },
        "body": "The codes of `_python_argcomplete_zsh` are mostly copied from `_bash_complete` in `bashcompinit`.\nI don't really know how to do bash programming, so I made the pull request with copy-n-paste-programming and programming-by-coincidence techniques. I believe it will require a serious review.\n\nIt does\n- use the native zsh completion system, so `autoload bashcompinit` is not required anymore (https://github.com/kislyuk/argcomplete/issues/135)\n- preserve the completion order from the python scripts (zsh only https://github.com/kislyuk/argcomplete/issues/129)\n- allow arbitrary completion even the prefix doesn't match the user input (zsh only https://github.com/kislyuk/argcomplete/issues/139)\n",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/kislyuk/argcomplete/issues/140",
        "repository_url": "https://api.github.com/repos/kislyuk/argcomplete",
        "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/140/labels{/name}",
        "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/140/comments",
        "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/140/events",
        "html_url": "https://github.com/kislyuk/argcomplete/issues/140",
        "id": 168097055,
        "node_id": "MDU6SXNzdWUxNjgwOTcwNTU=",
        "number": 140,
        "title": "Support case-insensitive completion",
        "user": {
            "login": "evanunderscore",
            "id": 13419218,
            "node_id": "MDQ6VXNlcjEzNDE5MjE4",
            "avatar_url": "https://avatars.githubusercontent.com/u/13419218?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/evanunderscore",
            "html_url": "https://github.com/evanunderscore",
            "followers_url": "https://api.github.com/users/evanunderscore/followers",
            "following_url": "https://api.github.com/users/evanunderscore/following{/other_user}",
            "gists_url": "https://api.github.com/users/evanunderscore/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/evanunderscore/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/evanunderscore/subscriptions",
            "organizations_url": "https://api.github.com/users/evanunderscore/orgs",
            "repos_url": "https://api.github.com/users/evanunderscore/repos",
            "events_url": "https://api.github.com/users/evanunderscore/events{/privacy}",
            "received_events_url": "https://api.github.com/users/evanunderscore/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2016-07-28T13:35:51Z",
        "updated_at": "2016-07-28T13:35:51Z",
        "closed_at": null,
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "Continued from #139. My comment:\n\n> I feel like the choices completer (and probably the others too) should not filter their results and defer to the validator to do the filtering. As it stands, if I want to do something like case-insensitive completion, I have to override the choices completer because the results are already filtered before they get to the validator. Or am I misunderstanding the purpose of the validator?\n\n@kislyuk's response:\n\n> @evanunderscore, the choices completer is presented as an example. The validator was added to this architecture after I first designed it, so I'm treating it as a general purpose filtering step. One of its functions is to filter the completions by prefix. The completer may also do so, for example if filtering will reduce the amount of work done (like when requesting completions from a remote API). Case insensitive completion is not generally supported. If you want it supported, please open another issue. We'll need to update the docs, think about how to communicate case insensitivity to completers, and add a CaseInsensitiveValidator.\n\nIn the simple case, filtering completions in the completer itself is generally an unnecessary step and actually results in more work when the validator is run over already filtered results. `ChoicesCompleter` and `EnvironCompleter` could just return `self.choices` and `os.environ` respectively. This way, specifying `validator=lambda completion, prefix: completion.lower().startswith(prefix.lower())` is enough to make these case-insensitive.\n\n`FilesCompleter` and `DirectoriesCompleter` are a bit trickier and serve as good examples of where this isn't so straightforward. Also mentioned was cases where completions are being queried from a remote API.\n\nI don't really have a pressing need for this but I'm interested to see if other people want this or have ideas on how it could work.\n",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/kislyuk/argcomplete/issues/136",
        "repository_url": "https://api.github.com/repos/kislyuk/argcomplete",
        "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/136/labels{/name}",
        "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/136/comments",
        "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/136/events",
        "html_url": "https://github.com/kislyuk/argcomplete/issues/136",
        "id": 165337838,
        "node_id": "MDU6SXNzdWUxNjUzMzc4Mzg=",
        "number": 136,
        "title": "Caching choices for choices completer",
        "user": {
            "login": "sils",
            "id": 5716520,
            "node_id": "MDQ6VXNlcjU3MTY1MjA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5716520?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sils",
            "html_url": "https://github.com/sils",
            "followers_url": "https://api.github.com/users/sils/followers",
            "following_url": "https://api.github.com/users/sils/following{/other_user}",
            "gists_url": "https://api.github.com/users/sils/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sils/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sils/subscriptions",
            "organizations_url": "https://api.github.com/users/sils/orgs",
            "repos_url": "https://api.github.com/users/sils/repos",
            "events_url": "https://api.github.com/users/sils/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sils/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 22282233,
                "node_id": "MDU6TGFiZWwyMjI4MjIzMw==",
                "url": "https://api.github.com/repos/kislyuk/argcomplete/labels/patches%20welcome",
                "name": "patches welcome",
                "color": "02e10c",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2016-07-13T14:39:23Z",
        "updated_at": "2016-07-18T17:39:57Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hi,\n\nwe use argcomplete in coala (coala-analyzer.org) and getting possible values for one of our completers is actually something that takes about .5 seconds on decent systems. It would be nice if argcomplete would have a way to cache completions so that the experience of the user. Possibly you want the ability to mark a completion as not cached if it depends on others e.g.\n",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/kislyuk/argcomplete/issues/127",
        "repository_url": "https://api.github.com/repos/kislyuk/argcomplete",
        "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/127/labels{/name}",
        "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/127/comments",
        "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/127/events",
        "html_url": "https://github.com/kislyuk/argcomplete/issues/127",
        "id": 140526487,
        "node_id": "MDU6SXNzdWUxNDA1MjY0ODc=",
        "number": 127,
        "title": "Automatically run activate-global-python-argcomplete",
        "user": {
            "login": "sedrubal",
            "id": 5571650,
            "node_id": "MDQ6VXNlcjU1NzE2NTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5571650?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sedrubal",
            "html_url": "https://github.com/sedrubal",
            "followers_url": "https://api.github.com/users/sedrubal/followers",
            "following_url": "https://api.github.com/users/sedrubal/following{/other_user}",
            "gists_url": "https://api.github.com/users/sedrubal/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sedrubal/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sedrubal/subscriptions",
            "organizations_url": "https://api.github.com/users/sedrubal/orgs",
            "repos_url": "https://api.github.com/users/sedrubal/repos",
            "events_url": "https://api.github.com/users/sedrubal/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sedrubal/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2016-03-13T20:34:03Z",
        "updated_at": "2018-11-03T23:15:59Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "It's very nasty to manually run `activate-global-python-argcomplete`. Is it possible to run this automatically on installing the pypi package or the distro (apt, dnf) package?\n",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/kislyuk/argcomplete/issues/126",
        "repository_url": "https://api.github.com/repos/kislyuk/argcomplete",
        "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/126/labels{/name}",
        "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/126/comments",
        "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/126/events",
        "html_url": "https://github.com/kislyuk/argcomplete/issues/126",
        "id": 135220283,
        "node_id": "MDU6SXNzdWUxMzUyMjAyODM=",
        "number": 126,
        "title": "Support click",
        "user": {
            "login": "kislyuk",
            "id": 862013,
            "node_id": "MDQ6VXNlcjg2MjAxMw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/862013?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kislyuk",
            "html_url": "https://github.com/kislyuk",
            "followers_url": "https://api.github.com/users/kislyuk/followers",
            "following_url": "https://api.github.com/users/kislyuk/following{/other_user}",
            "gists_url": "https://api.github.com/users/kislyuk/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kislyuk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kislyuk/subscriptions",
            "organizations_url": "https://api.github.com/users/kislyuk/orgs",
            "repos_url": "https://api.github.com/users/kislyuk/repos",
            "events_url": "https://api.github.com/users/kislyuk/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kislyuk/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 19731489,
                "node_id": "MDU6TGFiZWwxOTczMTQ4OQ==",
                "url": "https://api.github.com/repos/kislyuk/argcomplete/labels/enhancement",
                "name": "enhancement",
                "color": "84b6eb",
                "default": true,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2016-02-21T15:46:33Z",
        "updated_at": "2018-06-02T17:55:34Z",
        "closed_at": null,
        "author_association": "OWNER",
        "active_lock_reason": null,
        "body": "Support http://click.pocoo.org/\n",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/kislyuk/argcomplete/issues/116",
        "repository_url": "https://api.github.com/repos/kislyuk/argcomplete",
        "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/116/labels{/name}",
        "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/116/comments",
        "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/116/events",
        "html_url": "https://github.com/kislyuk/argcomplete/issues/116",
        "id": 103548930,
        "node_id": "MDU6SXNzdWUxMDM1NDg5MzA=",
        "number": 116,
        "title": "Feature Request: Plumbum support",
        "user": {
            "login": "henryiii",
            "id": 4616906,
            "node_id": "MDQ6VXNlcjQ2MTY5MDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4616906?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/henryiii",
            "html_url": "https://github.com/henryiii",
            "followers_url": "https://api.github.com/users/henryiii/followers",
            "following_url": "https://api.github.com/users/henryiii/following{/other_user}",
            "gists_url": "https://api.github.com/users/henryiii/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/henryiii/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/henryiii/subscriptions",
            "organizations_url": "https://api.github.com/users/henryiii/orgs",
            "repos_url": "https://api.github.com/users/henryiii/repos",
            "events_url": "https://api.github.com/users/henryiii/events{/privacy}",
            "received_events_url": "https://api.github.com/users/henryiii/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2015-08-27T16:41:44Z",
        "updated_at": "2015-09-15T04:51:26Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "I'm looking at adding argcomplete support to Plumbum.cli (Someone might also look at Click at some point in the future, hopefully). It's really pretty simple to add directly to Plumbum, since there is no need for monkey patching. I just need a few things:\n- [ ] Can I have permission to use the same flag and file descriptors to connect as argcomlete? I don't want to have a new, separate global completer for each library.\n- [ ] Can I include a copy the global argcomplete script? I'm not sure about the licences, I think you can give permission to include it under plumbum's licence? This is optional, as simply listing \"argcomplete support\" for plumbum and \"plumbum support\" for argcomplete would probably work fine.\n- [ ] Do you have any recommendations, or would you like to help create this? The process of creating suggestions is the part that will need work.\n\nI have an early proof of concept mentioned here: tomerfiliba/plumbum#212, you can take a look, it supports `-` and `--` options.\n",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/kislyuk/argcomplete/issues/92",
        "repository_url": "https://api.github.com/repos/kislyuk/argcomplete",
        "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/92/labels{/name}",
        "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/92/comments",
        "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/92/events",
        "html_url": "https://github.com/kislyuk/argcomplete/issues/92",
        "id": 55949935,
        "node_id": "MDU6SXNzdWU1NTk0OTkzNQ==",
        "number": 92,
        "title": "Research printing completion help in bash",
        "user": {
            "login": "kislyuk",
            "id": 862013,
            "node_id": "MDQ6VXNlcjg2MjAxMw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/862013?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kislyuk",
            "html_url": "https://github.com/kislyuk",
            "followers_url": "https://api.github.com/users/kislyuk/followers",
            "following_url": "https://api.github.com/users/kislyuk/following{/other_user}",
            "gists_url": "https://api.github.com/users/kislyuk/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kislyuk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kislyuk/subscriptions",
            "organizations_url": "https://api.github.com/users/kislyuk/orgs",
            "repos_url": "https://api.github.com/users/kislyuk/repos",
            "events_url": "https://api.github.com/users/kislyuk/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kislyuk/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2015-01-29T20:10:01Z",
        "updated_at": "2017-01-14T06:43:31Z",
        "closed_at": null,
        "author_association": "OWNER",
        "active_lock_reason": null,
        "body": "zsh-like; can be treated alongside zsh support.\n\nSee #84, #10 \n",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/kislyuk/argcomplete/issues/85",
        "repository_url": "https://api.github.com/repos/kislyuk/argcomplete",
        "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/85/labels{/name}",
        "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/85/comments",
        "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/85/events",
        "html_url": "https://github.com/kislyuk/argcomplete/issues/85",
        "id": 44286440,
        "node_id": "MDU6SXNzdWU0NDI4NjQ0MA==",
        "number": 85,
        "title": "Static generation",
        "user": {
            "login": "wernight",
            "id": 145667,
            "node_id": "MDQ6VXNlcjE0NTY2Nw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/145667?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wernight",
            "html_url": "https://github.com/wernight",
            "followers_url": "https://api.github.com/users/wernight/followers",
            "following_url": "https://api.github.com/users/wernight/following{/other_user}",
            "gists_url": "https://api.github.com/users/wernight/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wernight/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wernight/subscriptions",
            "organizations_url": "https://api.github.com/users/wernight/orgs",
            "repos_url": "https://api.github.com/users/wernight/repos",
            "events_url": "https://api.github.com/users/wernight/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wernight/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 22282233,
                "node_id": "MDU6TGFiZWwyMjI4MjIzMw==",
                "url": "https://api.github.com/repos/kislyuk/argcomplete/labels/patches%20welcome",
                "name": "patches welcome",
                "color": "02e10c",
                "default": false,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2014-09-29T12:13:59Z",
        "updated_at": "2018-03-23T17:08:50Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I found myself wishing often to have a statically generated auto-complete, because:\n- It's faster to load (initial auto-complete in a terminal) than running python to generate a string each time\n- It means I don't have to ship argcomplete with the project\n- People don't have to install argcomplete in their path\n- Allows better ZSH support via `fpath=(my-app-zsh-completion-dir $fpath)` which is even faster than sourcing a file and cleaner\n\nAs a pseudo-woraround I do `$ register-python-argcomplete my-awesome-script.py >auto-complete-my-awesome-script.sh` which is shipped with the software but this doesn't have all the benefits above.\n\nThe generator could read my current script once and generate a file to source for Bash and a file to add to fpath for ZSH.\n",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/kislyuk/argcomplete/issues/83",
        "repository_url": "https://api.github.com/repos/kislyuk/argcomplete",
        "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/83/labels{/name}",
        "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/83/comments",
        "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/83/events",
        "html_url": "https://github.com/kislyuk/argcomplete/issues/83",
        "id": 37209342,
        "node_id": "MDU6SXNzdWUzNzIwOTM0Mg==",
        "number": 83,
        "title": "Full REPL support",
        "user": {
            "login": "kislyuk",
            "id": 862013,
            "node_id": "MDQ6VXNlcjg2MjAxMw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/862013?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kislyuk",
            "html_url": "https://github.com/kislyuk",
            "followers_url": "https://api.github.com/users/kislyuk/followers",
            "following_url": "https://api.github.com/users/kislyuk/following{/other_user}",
            "gists_url": "https://api.github.com/users/kislyuk/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kislyuk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kislyuk/subscriptions",
            "organizations_url": "https://api.github.com/users/kislyuk/orgs",
            "repos_url": "https://api.github.com/users/kislyuk/repos",
            "events_url": "https://api.github.com/users/kislyuk/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kislyuk/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2014-07-06T01:10:24Z",
        "updated_at": "2014-11-11T16:05:38Z",
        "closed_at": null,
        "author_association": "OWNER",
        "active_lock_reason": null,
        "body": "Enable full REPL support by defining a readline completer driven entry point.\n",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/kislyuk/argcomplete/issues/73",
        "repository_url": "https://api.github.com/repos/kislyuk/argcomplete",
        "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/73/labels{/name}",
        "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/73/comments",
        "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/73/events",
        "html_url": "https://github.com/kislyuk/argcomplete/issues/73",
        "id": 25592137,
        "node_id": "MDU6SXNzdWUyNTU5MjEzNw==",
        "number": 73,
        "title": "Some way to complete things with nargs > 1",
        "user": {
            "login": "asmeurer",
            "id": 71486,
            "node_id": "MDQ6VXNlcjcxNDg2",
            "avatar_url": "https://avatars.githubusercontent.com/u/71486?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/asmeurer",
            "html_url": "https://github.com/asmeurer",
            "followers_url": "https://api.github.com/users/asmeurer/followers",
            "following_url": "https://api.github.com/users/asmeurer/following{/other_user}",
            "gists_url": "https://api.github.com/users/asmeurer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/asmeurer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/asmeurer/subscriptions",
            "organizations_url": "https://api.github.com/users/asmeurer/orgs",
            "repos_url": "https://api.github.com/users/asmeurer/repos",
            "events_url": "https://api.github.com/users/asmeurer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/asmeurer/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2014-01-14T17:54:36Z",
        "updated_at": "2014-01-17T02:21:56Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "If you have nargs > 1 and you want to have different choices for each arg, you have to use a custom action (see http://stackoverflow.com/q/8624034/161801). It would be nice to have some way to still complete in that case, so that it doesn't complete the wrong thing for the wrong argument. \n",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/kislyuk/argcomplete/issues/65",
        "repository_url": "https://api.github.com/repos/kislyuk/argcomplete",
        "labels_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/65/labels{/name}",
        "comments_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/65/comments",
        "events_url": "https://api.github.com/repos/kislyuk/argcomplete/issues/65/events",
        "html_url": "https://github.com/kislyuk/argcomplete/issues/65",
        "id": 23867970,
        "node_id": "MDU6SXNzdWUyMzg2Nzk3MA==",
        "number": 65,
        "title": "No autocomplete when using sudo",
        "user": {
            "login": "markeganfuller",
            "id": 1557113,
            "node_id": "MDQ6VXNlcjE1NTcxMTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1557113?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/markeganfuller",
            "html_url": "https://github.com/markeganfuller",
            "followers_url": "https://api.github.com/users/markeganfuller/followers",
            "following_url": "https://api.github.com/users/markeganfuller/following{/other_user}",
            "gists_url": "https://api.github.com/users/markeganfuller/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/markeganfuller/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/markeganfuller/subscriptions",
            "organizations_url": "https://api.github.com/users/markeganfuller/orgs",
            "repos_url": "https://api.github.com/users/markeganfuller/repos",
            "events_url": "https://api.github.com/users/markeganfuller/events{/privacy}",
            "received_events_url": "https://api.github.com/users/markeganfuller/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2013-12-06T16:19:36Z",
        "updated_at": "2013-12-31T10:06:13Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "When using sudo I get no autocompletion despite getting autocompletion for other commands (eg. git).\nAutocompletion works when running directly as root.\n\nTested on Ubuntu 12.04.3 LTS\n\n```\n$ example.py <TAB>\n-h                                 --help\n\n$ sudo example.py <TAB>\n\n$ sudo git <TAB>\nadd                 bundle              credential-cache    format-patch        lg                  notes               request-pull        stash \nam                  checkout            credential-store    fsck                log                 pull                reset               status \nannotate            cherry              describe            gc                  lol                 push                revert              submodule \napply               cherry-pick         df                  get-tar-commit-id   lola                rebase              rm                  tag \narchive             ci                  diff                grep                ls                  reflog              shortlog            whatchanged \nbisect              clean               difftool            help                merge               relink              show                \nblame               clone               fetch               imap-send           mergetool           remote              show-branch         \nbr                  commit              filter-branch       init                mv                  repack              st                  \nbranch              config              flow                instaweb            name-rev            replace             stage \n\n# example.py <TAB>\n-h                                 --help\n```\n\nExample Code\n\n``` python\n#!/usr/bin/env python\n# PYTHON_ARGCOMPLETE_OK\nimport argparse\nimport argcomplete\n\nparser = argparse.ArgumentParser()\nargcomplete.autocomplete(parser)\nargs = vars(parser.parse_args())\n```\n",
        "performed_via_github_app": null
    }
]