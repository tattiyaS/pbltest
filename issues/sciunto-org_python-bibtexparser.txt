[
    {
        "url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/276",
        "repository_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser",
        "labels_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/276/labels{/name}",
        "comments_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/276/comments",
        "events_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/276/events",
        "html_url": "https://github.com/sciunto-org/python-bibtexparser/pull/276",
        "id": 787361804,
        "node_id": "MDExOlB1bGxSZXF1ZXN0NTU2MDg3MzIz",
        "number": 276,
        "title": "Fix #275.",
        "user": {
            "login": "omangin",
            "id": 1171989,
            "node_id": "MDQ6VXNlcjExNzE5ODk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1171989?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/omangin",
            "html_url": "https://github.com/omangin",
            "followers_url": "https://api.github.com/users/omangin/followers",
            "following_url": "https://api.github.com/users/omangin/following{/other_user}",
            "gists_url": "https://api.github.com/users/omangin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/omangin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/omangin/subscriptions",
            "organizations_url": "https://api.github.com/users/omangin/orgs",
            "repos_url": "https://api.github.com/users/omangin/repos",
            "events_url": "https://api.github.com/users/omangin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/omangin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2021-01-16T06:32:54Z",
        "updated_at": "2021-01-16T06:33:14Z",
        "closed_at": null,
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "pull_request": {
            "url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/pulls/276",
            "html_url": "https://github.com/sciunto-org/python-bibtexparser/pull/276",
            "diff_url": "https://github.com/sciunto-org/python-bibtexparser/pull/276.diff",
            "patch_url": "https://github.com/sciunto-org/python-bibtexparser/pull/276.patch"
        },
        "body": "The issue was caused by pyparsing not returning as named result an empty string. Hence, although these are correctly parsed, they cannot be accessed by names. The rule would apply for any part of the code accessing by name a parse result where the empty string is admissible: in such a case, the combination of `get` with a default of `\"\"` should be used instead of the direct access ot the named value.",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/275",
        "repository_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser",
        "labels_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/275/labels{/name}",
        "comments_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/275/comments",
        "events_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/275/events",
        "html_url": "https://github.com/sciunto-org/python-bibtexparser/issues/275",
        "id": 783773427,
        "node_id": "MDU6SXNzdWU3ODM3NzM0Mjc=",
        "number": 275,
        "title": "Parse error for empty @string definitions",
        "user": {
            "login": "dominique-unruh",
            "id": 9913676,
            "node_id": "MDQ6VXNlcjk5MTM2NzY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9913676?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dominique-unruh",
            "html_url": "https://github.com/dominique-unruh",
            "followers_url": "https://api.github.com/users/dominique-unruh/followers",
            "following_url": "https://api.github.com/users/dominique-unruh/following{/other_user}",
            "gists_url": "https://api.github.com/users/dominique-unruh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dominique-unruh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dominique-unruh/subscriptions",
            "organizations_url": "https://api.github.com/users/dominique-unruh/orgs",
            "repos_url": "https://api.github.com/users/dominique-unruh/repos",
            "events_url": "https://api.github.com/users/dominique-unruh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dominique-unruh/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 23945168,
                "node_id": "MDU6TGFiZWwyMzk0NTE2OA==",
                "url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/labels/bug",
                "name": "bug",
                "color": "fc2929",
                "default": true,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "omangin",
            "id": 1171989,
            "node_id": "MDQ6VXNlcjExNzE5ODk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1171989?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/omangin",
            "html_url": "https://github.com/omangin",
            "followers_url": "https://api.github.com/users/omangin/followers",
            "following_url": "https://api.github.com/users/omangin/following{/other_user}",
            "gists_url": "https://api.github.com/users/omangin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/omangin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/omangin/subscriptions",
            "organizations_url": "https://api.github.com/users/omangin/orgs",
            "repos_url": "https://api.github.com/users/omangin/repos",
            "events_url": "https://api.github.com/users/omangin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/omangin/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "omangin",
                "id": 1171989,
                "node_id": "MDQ6VXNlcjExNzE5ODk=",
                "avatar_url": "https://avatars.githubusercontent.com/u/1171989?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/omangin",
                "html_url": "https://github.com/omangin",
                "followers_url": "https://api.github.com/users/omangin/followers",
                "following_url": "https://api.github.com/users/omangin/following{/other_user}",
                "gists_url": "https://api.github.com/users/omangin/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/omangin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/omangin/subscriptions",
                "organizations_url": "https://api.github.com/users/omangin/orgs",
                "repos_url": "https://api.github.com/users/omangin/repos",
                "events_url": "https://api.github.com/users/omangin/events{/privacy}",
                "received_events_url": "https://api.github.com/users/omangin/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 2,
        "created_at": "2021-01-11T23:12:10Z",
        "updated_at": "2021-01-16T13:32:43Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "If `test.bib` contains:\r\n```\r\n@string{test = \"\"}\r\n```\r\nand we call \r\n```\r\nimport bibtexparser\r\nbibtexparser.load(open(\"test.bib\"))\r\n```\r\nwe get an exception (see below). The expected behavior would be to just define `test` as an empty string. (Bibtex accepts such entries.)\r\n\r\nAffected version: PyPI version from May 26, 2020 (1.2.0)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n```\r\n---------------------------------------------------------------------------\r\nKeyError                                  Traceback (most recent call last)\r\n<ipython-input-78-f9b4a9ef7457> in <module>\r\n      1 import bibtexparser\r\n----> 2 bibtexparser.load(open(\"test.bib\"))\r\n\r\n/usr/local/lib/python3.8/dist-packages/bibtexparser/__init__.py in load(bibtex_file, parser)\r\n     67     if parser is None:\r\n     68         parser = bparser.BibTexParser()\r\n---> 69     return parser.parse_file(bibtex_file)\r\n     70 \r\n     71 \r\n\r\n/usr/local/lib/python3.8/dist-packages/bibtexparser/bparser.py in parse_file(self, file, partial)\r\n    167         :rtype: BibDatabase\r\n    168         \"\"\"\r\n--> 169         return self.parse(file.read(), partial=partial)\r\n    170 \r\n    171     def _init_expressions(self):\r\n\r\n/usr/local/lib/python3.8/dist-packages/bibtexparser/bparser.py in parse(self, bibtex_str, partial)\r\n    145         bibtex_file_obj = self._bibtex_file_obj(bibtex_str)\r\n    146         try:\r\n--> 147             self._expr.parseFile(bibtex_file_obj)\r\n    148         except self._expr.ParseException as exc:\r\n    149             logger.error(\"Could not parse properly, starting at %s\", exc.line)\r\n\r\n/usr/local/lib/python3.8/dist-packages/bibtexparser/bibtexexpression.py in parseFile(self, file_obj)\r\n    276 \r\n    277     def parseFile(self, file_obj):\r\n--> 278         return self.main_expression.parseFile(file_obj, parseAll=True)\r\n\r\n/usr/local/lib/python3.8/dist-packages/pyparsing.py in parseFile(self, file_or_filename, parseAll)\r\n   2575                 file_contents = f.read()\r\n   2576         try:\r\n-> 2577             return self.parseString(file_contents, parseAll)\r\n   2578         except ParseBaseException as exc:\r\n   2579             if ParserElement.verbose_stacktrace:\r\n\r\n/usr/local/lib/python3.8/dist-packages/pyparsing.py in parseString(self, instring, parseAll)\r\n   1941             instring = instring.expandtabs()\r\n   1942         try:\r\n-> 1943             loc, tokens = self._parse(instring, 0)\r\n   1944             if parseAll:\r\n   1945                 loc = self.preParse(instring, loc)\r\n\r\n/usr/local/lib/python3.8/dist-packages/pyparsing.py in _parseNoCache(self, instring, loc, doActions, callPreParse)\r\n   1681             if self.mayIndexError or preloc >= len(instring):\r\n   1682                 try:\r\n-> 1683                     loc, tokens = self.parseImpl(instring, preloc, doActions)\r\n   1684                 except IndexError:\r\n   1685                     raise ParseException(instring, len(instring), self.errmsg, self)\r\n\r\n/usr/local/lib/python3.8/dist-packages/pyparsing.py in parseImpl(self, instring, loc, doActions)\r\n   4779     def parseImpl(self, instring, loc, doActions=True):\r\n   4780         try:\r\n-> 4781             return super(ZeroOrMore, self).parseImpl(instring, loc, doActions)\r\n   4782         except (ParseException, IndexError):\r\n   4783             return loc, []\r\n\r\n/usr/local/lib/python3.8/dist-packages/pyparsing.py in parseImpl(self, instring, loc, doActions)\r\n   4695         if check_ender:\r\n   4696             try_not_ender(instring, loc)\r\n-> 4697         loc, tokens = self_expr_parse(instring, loc, doActions, callPreParse=False)\r\n   4698         try:\r\n   4699             hasIgnoreExprs = (not not self.ignoreExprs)\r\n\r\n/usr/local/lib/python3.8/dist-packages/pyparsing.py in _parseNoCache(self, instring, loc, doActions, callPreParse)\r\n   1681             if self.mayIndexError or preloc >= len(instring):\r\n   1682                 try:\r\n-> 1683                     loc, tokens = self.parseImpl(instring, preloc, doActions)\r\n   1684                 except IndexError:\r\n   1685                     raise ParseException(instring, len(instring), self.errmsg, self)\r\n\r\n/usr/local/lib/python3.8/dist-packages/pyparsing.py in parseImpl(self, instring, loc, doActions)\r\n   4252         for e in self.exprs:\r\n   4253             try:\r\n-> 4254                 ret = e._parse(instring, loc, doActions)\r\n   4255                 return ret\r\n   4256             except ParseException as err:\r\n\r\n/usr/local/lib/python3.8/dist-packages/pyparsing.py in _parseNoCache(self, instring, loc, doActions, callPreParse)\r\n   1714                 for fn in self.parseAction:\r\n   1715                     try:\r\n-> 1716                         tokens = fn(instring, tokensStart, retTokens)\r\n   1717                     except IndexError as parse_action_exc:\r\n   1718                         exc = ParseException(\"exception raised in parse action\")\r\n\r\n/usr/local/lib/python3.8/dist-packages/pyparsing.py in wrapper(*args)\r\n   1314         while 1:\r\n   1315             try:\r\n-> 1316                 ret = func(*args[limit[0]:])\r\n   1317                 foundArity[0] = True\r\n   1318                 return ret\r\n\r\n/usr/local/lib/python3.8/dist-packages/bibtexparser/bparser.py in <lambda>(s, l, t)\r\n    199         self._expr.string_def.addParseAction(\r\n    200             lambda s, l, t: self._add_string(t['StringName'].name,\r\n--> 201                                              t['StringValue'])\r\n    202             )\r\n    203 \r\n\r\n/usr/local/lib/python3.8/dist-packages/pyparsing.py in __getitem__(self, i)\r\n    596         else:\r\n    597             if i not in self.__accumNames:\r\n--> 598                 return self.__tokdict[i][-1][0]\r\n    599             else:\r\n    600                 return ParseResults([v[0] for v in self.__tokdict[i]])\r\n\r\nKeyError: 'StringValue'\r\n```",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/274",
        "repository_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser",
        "labels_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/274/labels{/name}",
        "comments_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/274/comments",
        "events_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/274/events",
        "html_url": "https://github.com/sciunto-org/python-bibtexparser/issues/274",
        "id": 782580849,
        "node_id": "MDU6SXNzdWU3ODI1ODA4NDk=",
        "number": 274,
        "title": "Errors in unicode conversion",
        "user": {
            "login": "rbawden",
            "id": 6254922,
            "node_id": "MDQ6VXNlcjYyNTQ5MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6254922?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rbawden",
            "html_url": "https://github.com/rbawden",
            "followers_url": "https://api.github.com/users/rbawden/followers",
            "following_url": "https://api.github.com/users/rbawden/following{/other_user}",
            "gists_url": "https://api.github.com/users/rbawden/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rbawden/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rbawden/subscriptions",
            "organizations_url": "https://api.github.com/users/rbawden/orgs",
            "repos_url": "https://api.github.com/users/rbawden/repos",
            "events_url": "https://api.github.com/users/rbawden/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rbawden/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2021-01-09T10:42:04Z",
        "updated_at": "2021-01-09T10:42:04Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I have come across some problems in the conversion to unicode. I have been using the following code to parse a raw bibtex string (hal_bibtex) using BibTexParser, and although some of the more common escaped characters are correctly converted, others seem to contain some errors:\r\n\r\n```\r\nfrom bibtexparser.bparser import BibTexParser\r\nfrom bibtexparser.customization import convert_to_unicode\r\n\r\nparser = BibTexParser()\r\nparser.customization = convert_to_unicode\r\ninfo = bibtexparser.loads(hal_bibtex, parser=parser)\r\n```\r\n\r\nFor example, I tried it out on the following bibtex file : https://hal.inria.fr/hal-01682188v1/bibtex, which contains a large number of accented characters. The result contains at least the following errors:\r\n\r\nBibtex:\r\n> ... Katar{\\'i}na ... Gr{\\=u}z{\\=i}tis ... Jel{\\'i}nek ... Ljube{\\v s}i{\\'c} ... Mart{\\'i}nez Alonso ... Ne{\\v s}pore-B{\\=e}rzkalne ... Samard{\\v z}i{\\'c} ... Saul{\\=i}te, ...\r\n\r\nOnce converted to unicode:\r\n> ... Katar\\\u0144a ... and Gr\u016bz\\\u0304tis ... and Jel\\'\u00e9k ... and Ljube\u0161i\\'c\u0143ikola ... Mart\\'in \u0301Alonso, ... Ne\u0161pore-B\\=r\u0304zkalne ... Samard\u017ei\\'c ... Saul\\=i\u0113, ...\r\n\r\nExpected output:\r\n> ... Katar\u00edna ... and Gr\u016bz\u012btis ... and Jel\u00ednek ... and Ljube\u0161i\u0107 Nikola ... Mart\u00ednez Alonso, ... Ne\u0161pore\u2010b\u0113rzkalne  ... Samard\u017ei\u0107 ... Saul\u012bte, ...\r\n\r\nThanks in advance for your help!\r\n",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/273",
        "repository_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser",
        "labels_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/273/labels{/name}",
        "comments_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/273/comments",
        "events_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/273/events",
        "html_url": "https://github.com/sciunto-org/python-bibtexparser/issues/273",
        "id": 764078012,
        "node_id": "MDU6SXNzdWU3NjQwNzgwMTI=",
        "number": 273,
        "title": "doc bug",
        "user": {
            "login": "notuntoward",
            "id": 3851891,
            "node_id": "MDQ6VXNlcjM4NTE4OTE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3851891?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/notuntoward",
            "html_url": "https://github.com/notuntoward",
            "followers_url": "https://api.github.com/users/notuntoward/followers",
            "following_url": "https://api.github.com/users/notuntoward/following{/other_user}",
            "gists_url": "https://api.github.com/users/notuntoward/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/notuntoward/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/notuntoward/subscriptions",
            "organizations_url": "https://api.github.com/users/notuntoward/orgs",
            "repos_url": "https://api.github.com/users/notuntoward/repos",
            "events_url": "https://api.github.com/users/notuntoward/events{/privacy}",
            "received_events_url": "https://api.github.com/users/notuntoward/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-12-12T17:23:39Z",
        "updated_at": "2020-12-12T17:23:39Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "One of the examples in the [documentation](https://bibtexparser.readthedocs.io/en/master/tutorial.html) doesn't run.  The example is:\r\n\r\n> from bibtexparser.bparser import BibTexParser\r\n> from bibtexparser.bibdatabase import as_text\r\n> \r\n> \r\n> bibtex = \"\"\"@STRING{ jean = \"Jean\"}\r\n> \r\n> @ARTICLE{Cesar2013,\r\n>   author = jean # { C\u00e9sar},\r\n>   title = {An amazing title},\r\n>   year = {2013},\r\n>   month = jan,\r\n>   volume = {12},\r\n>   pages = {12--23},\r\n>   journal = {Nice Journal},\r\n> }\r\n> \"\"\"\r\n> \r\n> bp = BibTexParser(interpolate_strings=False)\r\n> bib_database = bp.parse(bibtex)\r\n> bib_database.entries[0]\r\n> as_text(bd.entries[0]['author'])\r\n\r\nThe last line should be:\r\n\r\n> as_text(bib_database.entries[0]['author'])",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/272",
        "repository_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser",
        "labels_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/272/labels{/name}",
        "comments_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/272/comments",
        "events_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/272/events",
        "html_url": "https://github.com/sciunto-org/python-bibtexparser/issues/272",
        "id": 740981182,
        "node_id": "MDU6SXNzdWU3NDA5ODExODI=",
        "number": 272,
        "title": "Failing in converting strings to unicode",
        "user": {
            "login": "Rmano",
            "id": 6414907,
            "node_id": "MDQ6VXNlcjY0MTQ5MDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6414907?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Rmano",
            "html_url": "https://github.com/Rmano",
            "followers_url": "https://api.github.com/users/Rmano/followers",
            "following_url": "https://api.github.com/users/Rmano/following{/other_user}",
            "gists_url": "https://api.github.com/users/Rmano/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Rmano/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Rmano/subscriptions",
            "organizations_url": "https://api.github.com/users/Rmano/orgs",
            "repos_url": "https://api.github.com/users/Rmano/repos",
            "events_url": "https://api.github.com/users/Rmano/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Rmano/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-11-11T18:31:52Z",
        "updated_at": "2020-11-11T18:53:09Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Suppose you have this bibtex file (call it `fail.bib`):\r\n\r\n```bibtex\r\n@article{a,\r\n  author = {One Two and Three{\\'\\i}abc-Four{\\'\\i}def},\r\n}\r\n```\r\n\r\nThe example program: \r\n```python\r\n#! /usr/bin/python3\r\n#\r\nimport bibtexparser\r\nfrom bibtexparser.bparser import BibTexParser\r\nfrom bibtexparser.customization import convert_to_unicode\r\nbf=open(\"fail.bib\")\r\nbib_database = bibtexparser.bparser.BibTexParser(common_strings=True,\r\n                                                 customization=convert_to_unicode\r\n                                                ).parse_file(bf)\r\nbf.close()\r\nprint(bib_database.entries)\r\n```\r\n\r\nproduces the following output:\r\n\r\n```\r\n{'author': 'One Two and Three\u0131\u0301abc-Four\\\\d\u0301ef', 'ENTRYTYPE': 'article', 'ID': 'a'}]\r\n```\r\n\r\nwhich is evidently wrong. It seems that `\\i` is converted to `\u0131` (dotless i) too early, and then `\\'\u0131` creates havoc.\r\n\r\nI am not sure what the solution could be, because I do not follow the code very well --- quite too complex for my skill level, I fear. \r\n \r\n\r\n",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/265",
        "repository_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser",
        "labels_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/265/labels{/name}",
        "comments_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/265/comments",
        "events_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/265/events",
        "html_url": "https://github.com/sciunto-org/python-bibtexparser/issues/265",
        "id": 672199993,
        "node_id": "MDU6SXNzdWU2NzIxOTk5OTM=",
        "number": 265,
        "title": "Do not assume that case in Title= field is correct",
        "user": {
            "login": "simsong",
            "id": 1594284,
            "node_id": "MDQ6VXNlcjE1OTQyODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1594284?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/simsong",
            "html_url": "https://github.com/simsong",
            "followers_url": "https://api.github.com/users/simsong/followers",
            "following_url": "https://api.github.com/users/simsong/following{/other_user}",
            "gists_url": "https://api.github.com/users/simsong/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/simsong/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/simsong/subscriptions",
            "organizations_url": "https://api.github.com/users/simsong/orgs",
            "repos_url": "https://api.github.com/users/simsong/repos",
            "events_url": "https://api.github.com/users/simsong/events{/privacy}",
            "received_events_url": "https://api.github.com/users/simsong/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-08-03T16:35:18Z",
        "updated_at": "2020-08-03T16:35:18Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "Currently bibtexparser assumes that the letter case of the `title=` field is correct. It then escapes the case when it writes out the file, forcing it to be correct, and breaking bib styles that do not use title case for titles!\r\n\r\nThat is, this input:\r\n```\r\n@book{bug,\r\n title=\"Once Upon a Time.\",\r\n author=\"Dr. Evil\",\r\n year=2000\r\n}\r\n```\r\n\r\nBecomes this output:\r\n\r\n```\r\n@book{bug,\r\n author = {Dr. Evil},\r\n title = {{O}nce {U}pon a {T}ime.},\r\n year = {2000}\r\n}\r\n```\r\n\r\nHere is a demo program:\r\n\r\n```\r\nimport sys\r\nimport io\r\nimport bibtexparser\r\nfrom bibtexparser.bparser import BibTexParser\r\nfrom bibtexparser.customization import homogenize_latex_encoding\r\n\r\nINPUT = \"\"\"\r\n@book{bug,\r\n title=\"Once Upon a Time.\",\r\n author=\"Dr. Evil\",\r\n year=2000\r\n}\r\n\"\"\"\r\n\r\nif __name__==\"__main__\":\r\n    parser = BibTexParser()\r\n    parser.customization = homogenize_latex_encoding\r\n    bib_database = bibtexparser.load( io.StringIO(INPUT), parser=parser)\r\n\r\n    print(\"INPUT:\")\r\n    print(INPUT)\r\n    print(\"OUTPUT:\")\r\n    bibtexparser.dump(bib_database, sys.stdout)\r\n```\r\n\r\nRequested resolution:\r\n- [ ] bibtexparser should not default to preserving case through escaping.\r\n- [ ] bibtexparser should detect escapes, though, and preserve them. \r\n\r\n\r\n",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/264",
        "repository_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser",
        "labels_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/264/labels{/name}",
        "comments_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/264/comments",
        "events_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/264/events",
        "html_url": "https://github.com/sciunto-org/python-bibtexparser/issues/264",
        "id": 672197836,
        "node_id": "MDU6SXNzdWU2NzIxOTc4MzY=",
        "number": 264,
        "title": "bibtextparser does not properly handle escaped dollar signs in input file",
        "user": {
            "login": "simsong",
            "id": 1594284,
            "node_id": "MDQ6VXNlcjE1OTQyODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1594284?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/simsong",
            "html_url": "https://github.com/simsong",
            "followers_url": "https://api.github.com/users/simsong/followers",
            "following_url": "https://api.github.com/users/simsong/following{/other_user}",
            "gists_url": "https://api.github.com/users/simsong/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/simsong/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/simsong/subscriptions",
            "organizations_url": "https://api.github.com/users/simsong/orgs",
            "repos_url": "https://api.github.com/users/simsong/repos",
            "events_url": "https://api.github.com/users/simsong/events{/privacy}",
            "received_events_url": "https://api.github.com/users/simsong/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-08-03T16:31:17Z",
        "updated_at": "2020-08-03T16:31:17Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "When it reads this record:\r\n```\r\n@book{bug1,\r\n title=\"Demonstrate a bug. A \\$1 billion!\",\r\n author=\"Dr. Evil\",\r\n year=2000\r\n}\r\n```\r\n\r\nbibtexparser writes it this way:\r\n```\r\n@book{bug1,\r\n author = {Dr. Evil},\r\n title = {{D}emonstrate a bug. {A} \\textbackslash \\textdollar 1 billion!},\r\n year = {2000}\r\n}\r\n```\r\n\r\nThis breaks the file!\r\n\r\nHere is my demo program:\r\n```\r\nimport sys\r\nimport io\r\nimport bibtexparser\r\nfrom bibtexparser.bparser import BibTexParser\r\nfrom bibtexparser.customization import homogenize_latex_encoding\r\n\r\nBUG1 = \"\"\"\r\n@book{bug1,\r\n title=\"Demonstrate a bug. A \\$1 billion!\",\r\n author=\"Dr. Evil\",\r\n year=2000\r\n}\r\n\"\"\"\r\n\r\nif __name__==\"__main__\":\r\n    bugfile = io.StringIO(BUG1)\r\n    parser = BibTexParser()\r\n    parser.customization = homogenize_latex_encoding\r\n    bib_database = bibtexparser.load(bugfile, parser=parser)\r\n\r\n    print(\"INPUT:\")\r\n    print(BUG1)\r\n    print(\"OUTPUT:\")\r\n    bibtexparser.dump(bib_database, sys.stdout)\r\n```",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/263",
        "repository_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser",
        "labels_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/263/labels{/name}",
        "comments_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/263/comments",
        "events_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/263/events",
        "html_url": "https://github.com/sciunto-org/python-bibtexparser/issues/263",
        "id": 655840126,
        "node_id": "MDU6SXNzdWU2NTU4NDAxMjY=",
        "number": 263,
        "title": "bibtexparser rejects unquoted month fields",
        "user": {
            "login": "zingale",
            "id": 7817509,
            "node_id": "MDQ6VXNlcjc4MTc1MDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7817509?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zingale",
            "html_url": "https://github.com/zingale",
            "followers_url": "https://api.github.com/users/zingale/followers",
            "following_url": "https://api.github.com/users/zingale/following{/other_user}",
            "gists_url": "https://api.github.com/users/zingale/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zingale/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zingale/subscriptions",
            "organizations_url": "https://api.github.com/users/zingale/orgs",
            "repos_url": "https://api.github.com/users/zingale/repos",
            "events_url": "https://api.github.com/users/zingale/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zingale/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2020-07-13T13:11:55Z",
        "updated_at": "2020-11-17T20:14:51Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "If you have a month without quotes or brackets, like those returned by the NASA ADS system, then bibtexparser complains ```bibtexparser.bibdatabase.UndefinedString: 'jul'```\r\n\r\nThe NASA ADS people say that this is allowed, pointing to this:\r\n\r\nhttps://www.bibtex.com/f/month-field/\r\n\r\nCan bibtexparser be updated to allow months in the form:\r\n```\r\nmonth = jul,\r\n```\r\n?",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/261",
        "repository_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser",
        "labels_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/261/labels{/name}",
        "comments_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/261/comments",
        "events_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/261/events",
        "html_url": "https://github.com/sciunto-org/python-bibtexparser/issues/261",
        "id": 628903807,
        "node_id": "MDU6SXNzdWU2Mjg5MDM4MDc=",
        "number": 261,
        "title": "Replace unitest by pytest",
        "user": {
            "login": "sciunto",
            "id": 335370,
            "node_id": "MDQ6VXNlcjMzNTM3MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/335370?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sciunto",
            "html_url": "https://github.com/sciunto",
            "followers_url": "https://api.github.com/users/sciunto/followers",
            "following_url": "https://api.github.com/users/sciunto/following{/other_user}",
            "gists_url": "https://api.github.com/users/sciunto/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sciunto/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sciunto/subscriptions",
            "organizations_url": "https://api.github.com/users/sciunto/orgs",
            "repos_url": "https://api.github.com/users/sciunto/repos",
            "events_url": "https://api.github.com/users/sciunto/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sciunto/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-06-02T05:07:10Z",
        "updated_at": "2020-06-02T05:07:19Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/260",
        "repository_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser",
        "labels_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/260/labels{/name}",
        "comments_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/260/comments",
        "events_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/260/events",
        "html_url": "https://github.com/sciunto-org/python-bibtexparser/issues/260",
        "id": 628903711,
        "node_id": "MDU6SXNzdWU2Mjg5MDM3MTE=",
        "number": 260,
        "title": "Remove future dependence",
        "user": {
            "login": "sciunto",
            "id": 335370,
            "node_id": "MDQ6VXNlcjMzNTM3MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/335370?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sciunto",
            "html_url": "https://github.com/sciunto",
            "followers_url": "https://api.github.com/users/sciunto/followers",
            "following_url": "https://api.github.com/users/sciunto/following{/other_user}",
            "gists_url": "https://api.github.com/users/sciunto/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sciunto/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sciunto/subscriptions",
            "organizations_url": "https://api.github.com/users/sciunto/orgs",
            "repos_url": "https://api.github.com/users/sciunto/repos",
            "events_url": "https://api.github.com/users/sciunto/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sciunto/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-06-02T05:06:55Z",
        "updated_at": "2020-06-02T05:06:55Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/256",
        "repository_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser",
        "labels_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/256/labels{/name}",
        "comments_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/256/comments",
        "events_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/256/events",
        "html_url": "https://github.com/sciunto-org/python-bibtexparser/issues/256",
        "id": 590485195,
        "node_id": "MDU6SXNzdWU1OTA0ODUxOTU=",
        "number": 256,
        "title": "strings interpolated despite interpolate_strings = None",
        "user": {
            "login": "mifads",
            "id": 22075144,
            "node_id": "MDQ6VXNlcjIyMDc1MTQ0",
            "avatar_url": "https://avatars.githubusercontent.com/u/22075144?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mifads",
            "html_url": "https://github.com/mifads",
            "followers_url": "https://api.github.com/users/mifads/followers",
            "following_url": "https://api.github.com/users/mifads/following{/other_user}",
            "gists_url": "https://api.github.com/users/mifads/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mifads/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mifads/subscriptions",
            "organizations_url": "https://api.github.com/users/mifads/orgs",
            "repos_url": "https://api.github.com/users/mifads/repos",
            "events_url": "https://api.github.com/users/mifads/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mifads/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2020-03-30T18:04:39Z",
        "updated_at": "2020-05-24T13:26:54Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "In my bibtex file I have most journals abbreviated, e.g. acp instead of \"Atmos. Chem. Physics\", and these are defined at the top of my bibtex file:\r\n```\r\n@STRING{acp = {Atmos. Chem. Physics}}\r\n```\r\nI'd like to preserve the abbreviated version when using writer, but I see that they are lost as soon as I use bibtexparser. I currently try:\r\n```\r\nparser = BibTexParser()\r\nparser.ignore_nonstandard_types= False # ?\r\nparser.common_strings = True\r\nparser.interpolate_strings = None\r\n\r\nwith open('References.bib',encoding='utf-8') as bfile:\r\n   bb=bibtexparser.load(bfile, parser)\r\n   testa = bb.entries_dict['Smith:2016']\r\n```\r\nAt this stage, testa['journal'] has 'Atmos. Chem. Physics'. Can I change this to keep 'acp'?\r\n\r\nThanks (from a bibtexparser newbie - just discovered it today. Looks great!)",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/253",
        "repository_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser",
        "labels_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/253/labels{/name}",
        "comments_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/253/comments",
        "events_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/253/events",
        "html_url": "https://github.com/sciunto-org/python-bibtexparser/pull/253",
        "id": 572228442,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzgwOTcwNzIx",
        "number": 253,
        "title": "Moved the metadata into setup.cfg",
        "user": {
            "login": "KOLANICH",
            "id": 240344,
            "node_id": "MDQ6VXNlcjI0MDM0NA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/240344?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/KOLANICH",
            "html_url": "https://github.com/KOLANICH",
            "followers_url": "https://api.github.com/users/KOLANICH/followers",
            "following_url": "https://api.github.com/users/KOLANICH/following{/other_user}",
            "gists_url": "https://api.github.com/users/KOLANICH/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/KOLANICH/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/KOLANICH/subscriptions",
            "organizations_url": "https://api.github.com/users/KOLANICH/orgs",
            "repos_url": "https://api.github.com/users/KOLANICH/repos",
            "events_url": "https://api.github.com/users/KOLANICH/events{/privacy}",
            "received_events_url": "https://api.github.com/users/KOLANICH/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-02-27T17:13:13Z",
        "updated_at": "2020-02-27T17:13:13Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "pull_request": {
            "url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/pulls/253",
            "html_url": "https://github.com/sciunto-org/python-bibtexparser/pull/253",
            "diff_url": "https://github.com/sciunto-org/python-bibtexparser/pull/253.diff",
            "patch_url": "https://github.com/sciunto-org/python-bibtexparser/pull/253.patch"
        },
        "body": "",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/252",
        "repository_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser",
        "labels_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/252/labels{/name}",
        "comments_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/252/comments",
        "events_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/252/events",
        "html_url": "https://github.com/sciunto-org/python-bibtexparser/issues/252",
        "id": 570818414,
        "node_id": "MDU6SXNzdWU1NzA4MTg0MTQ=",
        "number": 252,
        "title": "duplicates in display_order create duplicate entries",
        "user": {
            "login": "jakob-kellner",
            "id": 35851141,
            "node_id": "MDQ6VXNlcjM1ODUxMTQx",
            "avatar_url": "https://avatars.githubusercontent.com/u/35851141?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jakob-kellner",
            "html_url": "https://github.com/jakob-kellner",
            "followers_url": "https://api.github.com/users/jakob-kellner/followers",
            "following_url": "https://api.github.com/users/jakob-kellner/following{/other_user}",
            "gists_url": "https://api.github.com/users/jakob-kellner/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jakob-kellner/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jakob-kellner/subscriptions",
            "organizations_url": "https://api.github.com/users/jakob-kellner/orgs",
            "repos_url": "https://api.github.com/users/jakob-kellner/repos",
            "events_url": "https://api.github.com/users/jakob-kellner/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jakob-kellner/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2020-02-25T20:39:57Z",
        "updated_at": "2020-02-27T08:04:45Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "bibtexparser 1.1.0.\r\n\r\nNot a big problem, but confused me for a while:\r\n\r\nIf the list assigned to `writer.display_order` contains a key more than once,\r\nthen the according line in the bibentry will also be created more than once.\r\nE.g.:\r\n```python3\r\nimport bibtexparser\r\nbib_dict = {'ID': 'a', 'ENTRYTYPE': 'misc', 'title': 'b', 'year': '1'}\r\nmy_db = bibtexparser.bibdatabase.BibDatabase()                               \r\nmy_db.entries = [bib_dict]\r\nwriter = bibtexparser.bwriter.BibTexWriter()                                           \r\nwriter.display_order = ['title', 'dummy', 'title'] \r\nprint( bibtexparser.dumps(my_db, writer)) \r\n```\r\nresults in\r\n```\r\n@misc{a,\r\n title = {b},\r\n title = {b},\r\n year = {1}\r\n}\r\n```\r\n\r\nI do not even claim that this is a bug, but maybe a short comment in the documentation could be added.",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/250",
        "repository_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser",
        "labels_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/250/labels{/name}",
        "comments_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/250/comments",
        "events_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/250/events",
        "html_url": "https://github.com/sciunto-org/python-bibtexparser/pull/250",
        "id": 560589896,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzcxNTUzMjAw",
        "number": 250,
        "title": "Select fields for export with BibTexWriter class",
        "user": {
            "login": "andrejberg",
            "id": 13434878,
            "node_id": "MDQ6VXNlcjEzNDM0ODc4",
            "avatar_url": "https://avatars.githubusercontent.com/u/13434878?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/andrejberg",
            "html_url": "https://github.com/andrejberg",
            "followers_url": "https://api.github.com/users/andrejberg/followers",
            "following_url": "https://api.github.com/users/andrejberg/following{/other_user}",
            "gists_url": "https://api.github.com/users/andrejberg/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/andrejberg/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/andrejberg/subscriptions",
            "organizations_url": "https://api.github.com/users/andrejberg/orgs",
            "repos_url": "https://api.github.com/users/andrejberg/repos",
            "events_url": "https://api.github.com/users/andrejberg/events{/privacy}",
            "received_events_url": "https://api.github.com/users/andrejberg/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2020-02-05T19:46:33Z",
        "updated_at": "2020-02-05T19:53:11Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "pull_request": {
            "url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/pulls/250",
            "html_url": "https://github.com/sciunto-org/python-bibtexparser/pull/250",
            "diff_url": "https://github.com/sciunto-org/python-bibtexparser/pull/250.diff",
            "patch_url": "https://github.com/sciunto-org/python-bibtexparser/pull/250.patch"
        },
        "body": "Now a list can be given of fields. Only those fields are returned in BibTexWriter is used to generate a string. This is not exactly what was asked in issue #195 but it should do the job.\r\n\r\n ",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/249",
        "repository_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser",
        "labels_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/249/labels{/name}",
        "comments_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/249/comments",
        "events_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/249/events",
        "html_url": "https://github.com/sciunto-org/python-bibtexparser/issues/249",
        "id": 551989832,
        "node_id": "MDU6SXNzdWU1NTE5ODk4MzI=",
        "number": 249,
        "title": "Error while reading bib file",
        "user": {
            "login": "kirk86",
            "id": 2902390,
            "node_id": "MDQ6VXNlcjI5MDIzOTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2902390?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kirk86",
            "html_url": "https://github.com/kirk86",
            "followers_url": "https://api.github.com/users/kirk86/followers",
            "following_url": "https://api.github.com/users/kirk86/following{/other_user}",
            "gists_url": "https://api.github.com/users/kirk86/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kirk86/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kirk86/subscriptions",
            "organizations_url": "https://api.github.com/users/kirk86/orgs",
            "repos_url": "https://api.github.com/users/kirk86/repos",
            "events_url": "https://api.github.com/users/kirk86/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kirk86/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2020-01-19T21:38:29Z",
        "updated_at": "2020-01-19T21:39:06Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "This error was produced using bibcure which internally uses bibtexparse [here](https://github.com/bibcure/bibcure/issues/21).\r\nIn the file `bibtexexpression.py, line 10` there as function `splitlines()` operating on supposedly string `s` but after debugging `s` is neither a sting nor has a `splitlines` method.\r\n\r\n`s` seems to be a ParseResults class\r\n```\r\n-> lines = s.splitlines()\r\n(Pdb) dir(s)\r\n['_ParseResults__lookup', '__add__', '__bool__', '__class__', '__contains__', '__delattr__', '__delitem__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattr__', '__getattribute__', '__getitem__', '__getnewargs__', '__getstate__', '__gt__', '__hash__', '__iadd__', '__init__', '__init_subclass__', '__iter__', '__le__', '__len__', '__lt__', '__module__', '__ne__', '__new__', '__nonzero__', '__radd__', '__reduce__', '__reduce_ex__', '__repr__', '__reversed__', '__setattr__', '__setitem__', '__setstate__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_asStringList', '_iteritems', '_iterkeys', '_itervalues', 'append', 'asDict', 'asList', 'asXML', 'clear', 'copy', 'dump', 'extend', 'from_dict', 'get', 'getName', 'haskeys', 'insert', 'items', 'keys', 'pop', 'pprint', 'values']\r\n\r\n```",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/248",
        "repository_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser",
        "labels_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/248/labels{/name}",
        "comments_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/248/comments",
        "events_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/248/events",
        "html_url": "https://github.com/sciunto-org/python-bibtexparser/issues/248",
        "id": 548466273,
        "node_id": "MDU6SXNzdWU1NDg0NjYyNzM=",
        "number": 248,
        "title": "month name unenclosed by braces is fine for BibTeX but results in \"undefinedString\" error ",
        "user": {
            "login": "cpbl",
            "id": 3696165,
            "node_id": "MDQ6VXNlcjM2OTYxNjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3696165?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cpbl",
            "html_url": "https://github.com/cpbl",
            "followers_url": "https://api.github.com/users/cpbl/followers",
            "following_url": "https://api.github.com/users/cpbl/following{/other_user}",
            "gists_url": "https://api.github.com/users/cpbl/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cpbl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cpbl/subscriptions",
            "organizations_url": "https://api.github.com/users/cpbl/orgs",
            "repos_url": "https://api.github.com/users/cpbl/repos",
            "events_url": "https://api.github.com/users/cpbl/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cpbl/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2020-01-11T18:53:59Z",
        "updated_at": "2020-04-03T16:47:07Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "The following fails with `\"UndefinedString\": 'jul'`:\r\n\r\n```\r\n\r\nimport bibtexparser\r\n\r\nss=\"\"\"\r\n@inproceedings{tmp,\r\n\ttitle = {Comparison of the accuracy of {OpenStreetMap} for {Ireland} with {Google} {Maps} and {Bing} {Maps}},\r\n\tauthor = {Ciepluch, Blalej and Jacob, Ricky and Mooney, Peter and Winstanley, Adam},\r\n\tmonth = jul,\r\n\tyear = {2010},\r\n}\r\n\"\"\"\r\n\r\nwith open('test.foo', 'w') as bibfile:\r\n    bibfile.write(ss)\r\n\r\n\r\nwith open('test.foo') as bibtex_file:\r\n    bib_database = bibtexparser.load(bibtex_file)\r\n\r\nprint(bib_database.entries)\r\n\r\n```",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/247",
        "repository_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser",
        "labels_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/247/labels{/name}",
        "comments_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/247/comments",
        "events_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/247/events",
        "html_url": "https://github.com/sciunto-org/python-bibtexparser/issues/247",
        "id": 539419392,
        "node_id": "MDU6SXNzdWU1Mzk0MTkzOTI=",
        "number": 247,
        "title": "problem with parser.ignore_nonstandard_types=False",
        "user": {
            "login": "mingtaoli",
            "id": 7374696,
            "node_id": "MDQ6VXNlcjczNzQ2OTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7374696?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mingtaoli",
            "html_url": "https://github.com/mingtaoli",
            "followers_url": "https://api.github.com/users/mingtaoli/followers",
            "following_url": "https://api.github.com/users/mingtaoli/following{/other_user}",
            "gists_url": "https://api.github.com/users/mingtaoli/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mingtaoli/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mingtaoli/subscriptions",
            "organizations_url": "https://api.github.com/users/mingtaoli/orgs",
            "repos_url": "https://api.github.com/users/mingtaoli/repos",
            "events_url": "https://api.github.com/users/mingtaoli/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mingtaoli/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-12-18T02:48:15Z",
        "updated_at": "2019-12-18T03:00:25Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I have two bibtex file.  If I load these two bib files with parser.ignore_nonstandard_types=False, then the late entries will be wrong. If I don't set parser.ignore_nonstandard_types = False, everything is ok.\r\n```\r\nimport bibtexparser\r\n\r\nfrom bibtexparser.bparser import BibTexParser\r\n\r\nparser = BibTexParser(common_strings=False)\r\nparser.ignore_nonstandard_types = False\r\n\r\nwith open('a.bib', encoding='utf8') as filea:\r\n    a_database = bibtexparser.load(filea, parser)\r\n\r\nprint(len(a_database.entries))\r\n\r\nwith open('b.bib', encoding='utf8') as fileb:\r\n    b_database = bibtexparser.load(fileb, parser)\r\nprint(len(b_database.entries))\r\n```\r\n\r\na.bib--------------------\r\n```\r\n@article{FuMetalhalideperovskite2019,\r\n    author = {Yongping Fu and Haiming Zhu and Jie Chen and Matthew P. Hautzinger and X.-Y. Zhu and Song Jin},\r\n    doi = {10.1038/s41578-019-0080-9},\r\n    journal = {Nature Reviews Materials},\r\n    month = {feb},\r\n    number = {3},\r\n    pages = {169-188},\r\n    publisher = {Springer Science and Business Media {LLC}},\r\n    title = {Metal halide perovskite nanostructures for optoelectronic applications and the study of physical properties},\r\n    url = {https://www.nature.com/articles/s41578-019-0080-9},\r\n    volume = {4},\r\n    year = {2019}\r\n}\r\n```\r\n\r\nb.bib--------------------\r\n```\r\n@article{FuMetalhalideperovskite2019,\r\n    author = {Yongping Fu and Haiming Zhu and Jie Chen and Matthew P. Hautzinger and X.-Y. Zhu and Song Jin},\r\n    doi = {10.1038/s41578-019-0080-9},\r\n    journal = {Nature Reviews Materials},\r\n    month = {feb},\r\n    number = {3},\r\n    pages = {169-188},\r\n    publisher = {Springer Science and Business Media {LLC}},\r\n    title = {Metal halide perovskite nanostructures for optoelectronic applications and the study of physical properties},\r\n    url = {https://www.nature.com/articles/s41578-019-0080-9},\r\n    volume = {4},\r\n    year = {2019}\r\n}\r\n\r\n@article{SunEnablingSiliconSolar2014,\r\n    author = {Ke Sun and Shaohua Shen and Yongqi Liang and Paul E. Burrows and Samuel S. Mao and Deli Wang},\r\n    doi = {10.1021/cr300459q},\r\n    journal = {Chemical Reviews},\r\n    month = {aug},\r\n    number = {17},\r\n    pages = {8662-8719},\r\n    publisher = {American Chemical Society ({ACS})},\r\n    title = {Enabling Silicon for Solar-Fuel Production},\r\n    url = {http://pubs.acs.org/doi/10.1021/cr300459q},\r\n    volume = {114},\r\n    year = {2014}\r\n}\r\n\r\n@article{LiuPhotocatalytichydrogenproduction2016,\r\n    author = {Maochang Liu and Yubin Chen and Jinzhan Su and Jinwen Shi and Xixi Wang and Liejin Guo},\r\n    doi = {10.1038/nenergy.2016.151},\r\n    impactfactor = {54.000},\r\n    journal = {Nature Energy},\r\n    month = {sep},\r\n    number = {11},\r\n    pages = {16151},\r\n    publisher = {Springer Science and Business Media {LLC}},\r\n    title = {Photocatalytic hydrogen production using twinned nanocrystals and an unanchored {NiSx} co-catalyst},\r\n    url = {http://www.nature.com/articles/nenergy2016151},\r\n    volume = {1},\r\n    year = {2016}\r\n}\r\n```",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/246",
        "repository_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser",
        "labels_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/246/labels{/name}",
        "comments_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/246/comments",
        "events_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/246/events",
        "html_url": "https://github.com/sciunto-org/python-bibtexparser/issues/246",
        "id": 504088409,
        "node_id": "MDU6SXNzdWU1MDQwODg0MDk=",
        "number": 246,
        "title": "Dump BibDatabase with Unicode strings to string with LaTeX accents",
        "user": {
            "login": "alancleary",
            "id": 836063,
            "node_id": "MDQ6VXNlcjgzNjA2Mw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/836063?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alancleary",
            "html_url": "https://github.com/alancleary",
            "followers_url": "https://api.github.com/users/alancleary/followers",
            "following_url": "https://api.github.com/users/alancleary/following{/other_user}",
            "gists_url": "https://api.github.com/users/alancleary/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alancleary/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alancleary/subscriptions",
            "organizations_url": "https://api.github.com/users/alancleary/orgs",
            "repos_url": "https://api.github.com/users/alancleary/repos",
            "events_url": "https://api.github.com/users/alancleary/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alancleary/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2019-10-08T14:42:56Z",
        "updated_at": "2019-11-05T16:45:23Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "This is a cross post from [Stack Overflow](https://stackoverflow.com/questions/58208565/bibtexparser-dump-bibdatabase-with-unicode-strings-to-string-with-latex-encodin).\r\n\r\nI can us BibtexParser to parse a BibTeX file with special characters encoded as LaTeX into a Unicode BibDatabase as follows\r\n\r\n```python\r\nimport bibtexparser\r\nfrom bibtexparser.bparser import BibTexParser\r\nfrom bibtexparser.customization import convert_to_unicode\r\n\r\nwith open('bibtex.bib') as bibtex_file:\r\n    parser = BibTexParser()\r\n    parser.customization = convert_to_unicode\r\n    bib_database = bibtexparser.load(bibtex_file, parser=parser)\r\n```\r\n\r\nBut what if I have a Unicode BibDatabase like `bib_database` that I want to write to a string where the Unicode characters have been converted to their LaTeX encodings?\r\n\r\nI see I can dump the database to a string as follows\r\n\r\n```python\r\nbibtex_str = bibtexparser.dumps(bib_database)\r\n```\r\n\r\nbut the characters in `bibtex_str` are still Unicode. dumps [has an optional `writer` parameter](https://bibtexparser.readthedocs.io/en/v1.1.0/bibtexparser.html#bibtexparser.dumps), but the documentation doesn't discuss if/how this can be used to control the special character encoding of the output string.\r\n\r\nAny help would be much appreciated!",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/244",
        "repository_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser",
        "labels_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/244/labels{/name}",
        "comments_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/244/comments",
        "events_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/244/events",
        "html_url": "https://github.com/sciunto-org/python-bibtexparser/pull/244",
        "id": 491665862,
        "node_id": "MDExOlB1bGxSZXF1ZXN0MzE1OTg5MjU5",
        "number": 244,
        "title": "Add ordering by ascending/descending to btexwriter",
        "user": {
            "login": "runderwood",
            "id": 8513,
            "node_id": "MDQ6VXNlcjg1MTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8513?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/runderwood",
            "html_url": "https://github.com/runderwood",
            "followers_url": "https://api.github.com/users/runderwood/followers",
            "following_url": "https://api.github.com/users/runderwood/following{/other_user}",
            "gists_url": "https://api.github.com/users/runderwood/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/runderwood/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/runderwood/subscriptions",
            "organizations_url": "https://api.github.com/users/runderwood/orgs",
            "repos_url": "https://api.github.com/users/runderwood/repos",
            "events_url": "https://api.github.com/users/runderwood/events{/privacy}",
            "received_events_url": "https://api.github.com/users/runderwood/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2019-09-10T13:15:31Z",
        "updated_at": "2019-10-23T13:52:12Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "pull_request": {
            "url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/pulls/244",
            "html_url": "https://github.com/sciunto-org/python-bibtexparser/pull/244",
            "diff_url": "https://github.com/sciunto-org/python-bibtexparser/pull/244.diff",
            "patch_url": "https://github.com/sciunto-org/python-bibtexparser/pull/244.patch"
        },
        "body": "Re: #243: order by multiple keys in various directions\r\n\r\nAlso: add unittest2 to tox deps",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/243",
        "repository_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser",
        "labels_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/243/labels{/name}",
        "comments_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/243/comments",
        "events_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/243/events",
        "html_url": "https://github.com/sciunto-org/python-bibtexparser/issues/243",
        "id": 491461344,
        "node_id": "MDU6SXNzdWU0OTE0NjEzNDQ=",
        "number": 243,
        "title": "BibTexWriter().order_entries_by should support reverse ordering.",
        "user": {
            "login": "skyduy",
            "id": 7315313,
            "node_id": "MDQ6VXNlcjczMTUzMTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7315313?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skyduy",
            "html_url": "https://github.com/skyduy",
            "followers_url": "https://api.github.com/users/skyduy/followers",
            "following_url": "https://api.github.com/users/skyduy/following{/other_user}",
            "gists_url": "https://api.github.com/users/skyduy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skyduy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skyduy/subscriptions",
            "organizations_url": "https://api.github.com/users/skyduy/orgs",
            "repos_url": "https://api.github.com/users/skyduy/repos",
            "events_url": "https://api.github.com/users/skyduy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skyduy/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-09-10T05:40:33Z",
        "updated_at": "2019-09-10T05:40:33Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "`order_entried_by` should support reverse order like:\r\n```python\r\n    writer = BibTexWriter()\r\n    writer.order_entries_by = ('-year')\r\n```",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/242",
        "repository_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser",
        "labels_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/242/labels{/name}",
        "comments_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/242/comments",
        "events_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/242/events",
        "html_url": "https://github.com/sciunto-org/python-bibtexparser/issues/242",
        "id": 471169205,
        "node_id": "MDU6SXNzdWU0NzExNjkyMDU=",
        "number": 242,
        "title": "Warnings with pyparsing 2.4.1",
        "user": {
            "login": "tdegeus",
            "id": 7030445,
            "node_id": "MDQ6VXNlcjcwMzA0NDU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7030445?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tdegeus",
            "html_url": "https://github.com/tdegeus",
            "followers_url": "https://api.github.com/users/tdegeus/followers",
            "following_url": "https://api.github.com/users/tdegeus/following{/other_user}",
            "gists_url": "https://api.github.com/users/tdegeus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tdegeus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tdegeus/subscriptions",
            "organizations_url": "https://api.github.com/users/tdegeus/orgs",
            "repos_url": "https://api.github.com/users/tdegeus/repos",
            "events_url": "https://api.github.com/users/tdegeus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tdegeus/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-07-22T16:15:03Z",
        "updated_at": "2019-07-29T07:36:00Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "With pyparsing 2.4.1 I am getting the following warnings:\r\n\r\n```none\r\n/usr/local/lib/python3.7/site-packages/bibtexparser/bibtexexpression.py:126: UserWarning: warn_ungrouped_named_tokens_in_collection: setting results name 'BracedValue' on And expression collides with '_original_end' on contained expression\r\n  )('BracedValue')\r\n/usr/local/lib/python3.7/site-packages/bibtexparser/bibtexexpression.py:137: UserWarning: warn_ungrouped_named_tokens_in_collection: setting results name 'QuotedValue' on And expression collides with '_original_end' on contained expression\r\n  )('QuotedValue')\r\n/usr/local/lib/python3.7/site-packages/pyparsing.py:2401: UserWarning: warn_ungrouped_named_tokens_in_collection: setting results name 'Value' on MatchFirst expression collides with 'Integer' on contained expression\r\n  return self._setResultsName(name)\r\n/usr/local/lib/python3.7/site-packages/pyparsing.py:2401: UserWarning: warn_ungrouped_named_tokens_in_collection: setting results name 'Value' on MatchFirst expression collides with 'StringExpression' on contained expression\r\n  return self._setResultsName(name)\r\n/usr/local/lib/python3.7/site-packages/bibtexparser/bibtexexpression.py:196: UserWarning: warn_ungrouped_named_tokens_in_collection: setting results name 'Entry' on And expression collides with 'EntryType' on contained expression\r\n  )('Entry')\r\n/usr/local/lib/python3.7/site-packages/bibtexparser/bibtexexpression.py:223: UserWarning: warn_ungrouped_named_tokens_in_collection: setting results name 'ImplicitComment' on And expression collides with '_original_end' on contained expression\r\n  asString=True)('ImplicitComment')\r\n```\r\n\r\nNote:\r\n\r\n* Python 3.7.4 (Homebrew)\r\n* macOS Mojave (10.14.5)\r\n\r\nThe last working version of pyparsing is 2.4.0",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/241",
        "repository_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser",
        "labels_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/241/labels{/name}",
        "comments_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/241/comments",
        "events_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/241/events",
        "html_url": "https://github.com/sciunto-org/python-bibtexparser/issues/241",
        "id": 470579334,
        "node_id": "MDU6SXNzdWU0NzA1NzkzMzQ=",
        "number": 241,
        "title": "Error on empty file",
        "user": {
            "login": "juanmeleiro",
            "id": 18314896,
            "node_id": "MDQ6VXNlcjE4MzE0ODk2",
            "avatar_url": "https://avatars.githubusercontent.com/u/18314896?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/juanmeleiro",
            "html_url": "https://github.com/juanmeleiro",
            "followers_url": "https://api.github.com/users/juanmeleiro/followers",
            "following_url": "https://api.github.com/users/juanmeleiro/following{/other_user}",
            "gists_url": "https://api.github.com/users/juanmeleiro/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/juanmeleiro/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/juanmeleiro/subscriptions",
            "organizations_url": "https://api.github.com/users/juanmeleiro/orgs",
            "repos_url": "https://api.github.com/users/juanmeleiro/repos",
            "events_url": "https://api.github.com/users/juanmeleiro/events{/privacy}",
            "received_events_url": "https://api.github.com/users/juanmeleiro/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-07-19T21:58:16Z",
        "updated_at": "2019-07-19T21:58:16Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "There's an `IndexError: string index out of range` when trying to parse an empty file. I couldn't find a formal grammar for bibtex, so I can't tell if it's a bug. Intuitively, though, I think an empty file should yield an empty library, and not an error.\r\n\r\nFunily enough (though not very surprisingly), there's no error for a file containing a single space, or a single newline.\r\n\r\n* * *\r\n\r\nThe file `test.py` has contents\r\n\r\n```python\r\nimport bibtexparser\r\n\r\nwith open(input('Path to empty file: '), 'r') as f:\r\n    data = bibtexparser.load(f)\r\n```\r\n\r\nAnd then\r\n\r\n```bash\r\n$ touch test.bib\r\n$ python3 test.py\r\nPath to empty file: test\r\nTraceback (most recent call last):\r\n  File \"bibtexparsertest.py\", line 4, in <module>\r\n    data = bibtexparser.load(f)\r\n  File \"/home/juanmeleiro/.local/lib/python3.6/site-packages/bibtexparser/__init__.py\", line 71, in load\r\n    return parser.parse_file(bibtex_file)\r\n  File \"/home/juanmeleiro/.local/lib/python3.6/site-packages/bibtexparser/bparser.py\", line 177, in parse_file\r\n    return self.parse(file.read(), partial=partial)\r\n  File \"/home/juanmeleiro/.local/lib/python3.6/site-packages/bibtexparser/bparser.py\", line 153, in parse\r\n    bibtex_file_obj = self._bibtex_file_obj(bibtex_str)\r\n  File \"/home/juanmeleiro/.local/lib/python3.6/site-packages/bibtexparser/bparser.py\", line 225, in _bibtex_file_obj\r\n    if bibtex_str[0] == byte:\r\nIndexError: string index out of range\r\n```\r\n\r\nHowever,\r\n\r\n```bash\r\n$ printf ' ' > test\r\n$ python3 test.py\r\nPath to empty file: test\r\n$\r\n```\r\n\r\nI don't know if empty files should be supported, but I think it's worth mentioning. Also, note that I only do not write a patch myself because I don't know how to write unit tests.",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/237",
        "repository_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser",
        "labels_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/237/labels{/name}",
        "comments_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/237/comments",
        "events_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/237/events",
        "html_url": "https://github.com/sciunto-org/python-bibtexparser/issues/237",
        "id": 419128980,
        "node_id": "MDU6SXNzdWU0MTkxMjg5ODA=",
        "number": 237,
        "title": "raise Exception on parsing duplicate key",
        "user": {
            "login": "chrisjsewell",
            "id": 2997570,
            "node_id": "MDQ6VXNlcjI5OTc1NzA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2997570?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chrisjsewell",
            "html_url": "https://github.com/chrisjsewell",
            "followers_url": "https://api.github.com/users/chrisjsewell/followers",
            "following_url": "https://api.github.com/users/chrisjsewell/following{/other_user}",
            "gists_url": "https://api.github.com/users/chrisjsewell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chrisjsewell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chrisjsewell/subscriptions",
            "organizations_url": "https://api.github.com/users/chrisjsewell/orgs",
            "repos_url": "https://api.github.com/users/chrisjsewell/repos",
            "events_url": "https://api.github.com/users/chrisjsewell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chrisjsewell/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 23945170,
                "node_id": "MDU6TGFiZWwyMzk0NTE3MA==",
                "url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/labels/enhancement",
                "name": "enhancement",
                "color": "84b6eb",
                "default": true,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2019-03-09T23:58:50Z",
        "updated_at": "2019-03-12T07:03:53Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I can't see an option to make this happen?\r\nAt present an entry is silently overwritten by a preceding entry with the same key.",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/236",
        "repository_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser",
        "labels_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/236/labels{/name}",
        "comments_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/236/comments",
        "events_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/236/events",
        "html_url": "https://github.com/sciunto-org/python-bibtexparser/issues/236",
        "id": 417512981,
        "node_id": "MDU6SXNzdWU0MTc1MTI5ODE=",
        "number": 236,
        "title": "Exception caused by using both doi and convert_to_unicode customizations",
        "user": {
            "login": "jkkummerfeld",
            "id": 1298052,
            "node_id": "MDQ6VXNlcjEyOTgwNTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1298052?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jkkummerfeld",
            "html_url": "https://github.com/jkkummerfeld",
            "followers_url": "https://api.github.com/users/jkkummerfeld/followers",
            "following_url": "https://api.github.com/users/jkkummerfeld/following{/other_user}",
            "gists_url": "https://api.github.com/users/jkkummerfeld/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jkkummerfeld/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jkkummerfeld/subscriptions",
            "organizations_url": "https://api.github.com/users/jkkummerfeld/orgs",
            "repos_url": "https://api.github.com/users/jkkummerfeld/repos",
            "events_url": "https://api.github.com/users/jkkummerfeld/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jkkummerfeld/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 23945168,
                "node_id": "MDU6TGFiZWwyMzk0NTE2OA==",
                "url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/labels/bug",
                "name": "bug",
                "color": "fc2929",
                "default": true,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2019-03-05T21:37:44Z",
        "updated_at": "2019-03-07T02:57:11Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I get a crash when I run the following code:\r\n\r\n```\r\nimport io\r\n\r\nimport bibtexparser\r\nfrom bibtexparser.bparser import BibTexParser\r\nfrom bibtexparser.customization import *\r\n\r\nexample = \"\"\"\r\n@Article{key,\r\n  doi = {0000},\r\n}\r\n\"\"\"\r\n\r\ndef customizations(record):\r\n    record = doi(record)\r\n    record = convert_to_unicode(record)\r\n    return record\r\n\r\nparser = BibTexParser()\r\nparser.customization = customizations\r\nbib_data = bibtexparser.load(io.StringIO(example), parser=parser)\r\n```\r\n\r\nThe error is:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"./bug.py\", line 24, in <module>\r\n    bib_data = bibtexparser.load(io.StringIO(example), parser=parser)\r\n  File \"/usr/local/lib/python3.7/site-packages/bibtexparser/__init__.py\", line 71, in load\r\n    return parser.parse_file(bibtex_file)\r\n  File \"/usr/local/lib/python3.7/site-packages/bibtexparser/bparser.py\", line 177, in parse_file\r\n    return self.parse(file.read(), partial=partial)\r\n  File \"/usr/local/lib/python3.7/site-packages/bibtexparser/bparser.py\", line 155, in parse\r\n    self._expr.parseFile(bibtex_file_obj)\r\n  File \"/usr/local/lib/python3.7/site-packages/bibtexparser/bibtexexpression.py\", line 286, in parseFile\r\n    return self.main_expression.parseFile(file_obj, parseAll=True)\r\n  File \"/usr/local/lib/python3.7/site-packages/pyparsing.py\", line 2362, in parseFile\r\n    return self.parseString(file_contents, parseAll)\r\n  File \"/usr/local/lib/python3.7/site-packages/pyparsing.py\", line 1804, in parseString\r\n    loc, tokens = self._parse( instring, 0 )\r\n  File \"/usr/local/lib/python3.7/site-packages/pyparsing.py\", line 1548, in _parseNoCache\r\n    loc,tokens = self.parseImpl( instring, preloc, doActions )\r\n  File \"/usr/local/lib/python3.7/site-packages/pyparsing.py\", line 4361, in parseImpl\r\n    return super(ZeroOrMore, self).parseImpl(instring, loc, doActions)\r\n  File \"/usr/local/lib/python3.7/site-packages/pyparsing.py\", line 4291, in parseImpl\r\n    loc, tokens = self_expr_parse( instring, loc, doActions, callPreParse=False )\r\n  File \"/usr/local/lib/python3.7/site-packages/pyparsing.py\", line 1548, in _parseNoCache\r\n    loc,tokens = self.parseImpl( instring, preloc, doActions )\r\n  File \"/usr/local/lib/python3.7/site-packages/pyparsing.py\", line 3871, in parseImpl\r\n    ret = e._parse( instring, loc, doActions )\r\n  File \"/usr/local/lib/python3.7/site-packages/pyparsing.py\", line 1581, in _parseNoCache\r\n    tokens = fn( instring, tokensStart, retTokens )\r\n  File \"/usr/local/lib/python3.7/site-packages/pyparsing.py\", line 1203, in wrapper\r\n    ret = func(*args[limit[0]:])\r\n  File \"/usr/local/lib/python3.7/site-packages/bibtexparser/bparser.py\", line 204, in <lambda>\r\n    t.get('EntryType'), t.get('Key'), t.get('Fields'))\r\n  File \"/usr/local/lib/python3.7/site-packages/bibtexparser/bparser.py\", line 299, in _add_entry\r\n    d = self.customization(d)\r\n  File \"./bug.py\", line 19, in customizations\r\n    record = convert_to_unicode(record)\r\n  File \"/usr/local/lib/python3.7/site-packages/bibtexparser/customization.py\", line 501, in convert_to_unicode\r\n    latex_to_unicode(x) for x in record[val]\r\n  File \"/usr/local/lib/python3.7/site-packages/bibtexparser/customization.py\", line 501, in <listcomp>\r\n    latex_to_unicode(x) for x in record[val]\r\n  File \"/usr/local/lib/python3.7/site-packages/bibtexparser/latexenc.py\", line 72, in latex_to_unicode\r\n    string = string.replace(\"{\", \"\").replace(\"}\", \"\")\r\nAttributeError: 'dict' object has no attribute 'replace'\r\n```\r\n\r\nThis does not happen if either of the customizations is removed.\r\n\r\nIt looks like a bug in the doi customization because printing the string passed into latex_to_unicode gives the dictionary `{'url': '0000', 'anchor': 'doi'}`.\r\n\r\nI am running on OS X 10.14.3 with Python 3.7.2. Thanks!",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/235",
        "repository_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser",
        "labels_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/235/labels{/name}",
        "comments_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/235/comments",
        "events_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/235/events",
        "html_url": "https://github.com/sciunto-org/python-bibtexparser/issues/235",
        "id": 412940950,
        "node_id": "MDU6SXNzdWU0MTI5NDA5NTA=",
        "number": 235,
        "title": "Improve performance on large files",
        "user": {
            "login": "khaeru",
            "id": 1634164,
            "node_id": "MDQ6VXNlcjE2MzQxNjQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1634164?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/khaeru",
            "html_url": "https://github.com/khaeru",
            "followers_url": "https://api.github.com/users/khaeru/followers",
            "following_url": "https://api.github.com/users/khaeru/following{/other_user}",
            "gists_url": "https://api.github.com/users/khaeru/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/khaeru/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/khaeru/subscriptions",
            "organizations_url": "https://api.github.com/users/khaeru/orgs",
            "repos_url": "https://api.github.com/users/khaeru/repos",
            "events_url": "https://api.github.com/users/khaeru/events{/privacy}",
            "received_events_url": "https://api.github.com/users/khaeru/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 23945170,
                "node_id": "MDU6TGFiZWwyMzk0NTE3MA==",
                "url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/labels/enhancement",
                "name": "enhancement",
                "color": "84b6eb",
                "default": true,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2019-02-21T14:05:44Z",
        "updated_at": "2019-02-24T06:44:56Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I have a database of about 1000 entries / 10k lines, and a bibtexparser-based command line tool that I use to manipulate it. Some of these manipulations only touch a single entry, e.g. opening a file listed in a `localfile` key.\r\n\r\nI found that the automatic parsing of all entries led to a noticeable, annoying delay (~1 second) in my tool. So I implemented a lazy-loading version of `bibtexparser.bibdatabase.BibDatabase` (code follows).\r\n\r\nI'm not proposing this code specifically, as it doubtless misses some corner cases. But the more general issue is: random access of entries from large BibTeX databases should not require the CPU/memory overhead of parsing every entry.\r\n\r\nhttps://github.com/khaeru/bib/blob/bd9698d3737f0abb650f97df4a101a3d876045f1/bib/util.py#L64-L169",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/230",
        "repository_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser",
        "labels_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/230/labels{/name}",
        "comments_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/230/comments",
        "events_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/230/events",
        "html_url": "https://github.com/sciunto-org/python-bibtexparser/issues/230",
        "id": 401071300,
        "node_id": "MDU6SXNzdWU0MDEwNzEzMDA=",
        "number": 230,
        "title": "Wrong formatting leads entries to be silently ignored",
        "user": {
            "login": "tomleung1996",
            "id": 11535152,
            "node_id": "MDQ6VXNlcjExNTM1MTUy",
            "avatar_url": "https://avatars.githubusercontent.com/u/11535152?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tomleung1996",
            "html_url": "https://github.com/tomleung1996",
            "followers_url": "https://api.github.com/users/tomleung1996/followers",
            "following_url": "https://api.github.com/users/tomleung1996/following{/other_user}",
            "gists_url": "https://api.github.com/users/tomleung1996/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tomleung1996/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tomleung1996/subscriptions",
            "organizations_url": "https://api.github.com/users/tomleung1996/orgs",
            "repos_url": "https://api.github.com/users/tomleung1996/repos",
            "events_url": "https://api.github.com/users/tomleung1996/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tomleung1996/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 23945168,
                "node_id": "MDU6TGFiZWwyMzk0NTE2OA==",
                "url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/labels/bug",
                "name": "bug",
                "color": "fc2929",
                "default": true,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2019-01-20T07:37:05Z",
        "updated_at": "2019-01-31T06:30:18Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hi,\r\nI found that some entries are missing when I load bibtex file using `bibtexparser.load`.\r\nMy data is exported from Web of Science Core Collections, and should contains 500 entries per file,\r\nbut only 498 or 499 entries were parsed.\r\nAnd I don't know why, can you help me?\r\n\r\nMy code is shown below:\r\n<pre>\r\nimport bibtexparser\r\nimport re\r\n\r\nbibtex_filename = r'C:\\Users\\Tom\\PycharmProjects\\wos_crawler\\output\\advanced_query\\2019-01-20-12.43.24\\2001-2500.bib'\r\nwith open(bibtex_filename, 'r', encoding='utf-8') as bibtex_file:\r\n    bib_db = bibtexparser.load(bibtex_file)\r\n\r\nfor i in bib_db.entries:\r\n    print(i['unique-id'])\r\n\r\n# with open(bibtex_filename, 'r', encoding='utf-8') as file:\r\n#    pattern = re.compile(r'Unique-ID = {{(.+)}}')\r\n#    result = pattern.findall(file.read())\r\n \r\n# for i in result:\r\n#    print('{'+i+'}')</pre>\r\n\r\nAnd my sample file is attached here. I found that \"ISI:000435037500001\" article is missing.\r\n[2001-2500.zip](https://github.com/sciunto-org/python-bibtexparser/files/2776355/2001-2500.zip)\r\n",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/229",
        "repository_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser",
        "labels_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/229/labels{/name}",
        "comments_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/229/comments",
        "events_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/229/events",
        "html_url": "https://github.com/sciunto-org/python-bibtexparser/issues/229",
        "id": 400591961,
        "node_id": "MDU6SXNzdWU0MDA1OTE5NjE=",
        "number": 229,
        "title": "Editor customization not consistent with author",
        "user": {
            "login": "omangin",
            "id": 1171989,
            "node_id": "MDQ6VXNlcjExNzE5ODk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1171989?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/omangin",
            "html_url": "https://github.com/omangin",
            "followers_url": "https://api.github.com/users/omangin/followers",
            "following_url": "https://api.github.com/users/omangin/following{/other_user}",
            "gists_url": "https://api.github.com/users/omangin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/omangin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/omangin/subscriptions",
            "organizations_url": "https://api.github.com/users/omangin/orgs",
            "repos_url": "https://api.github.com/users/omangin/repos",
            "events_url": "https://api.github.com/users/omangin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/omangin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2019-01-18T06:38:50Z",
        "updated_at": "2019-01-18T06:38:50Z",
        "closed_at": null,
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "The editor customization (https://github.com/sciunto-org/python-bibtexparser/blob/master/bibtexparser/customization.py#L355) is not consistent with the author one which is confusing. Are there some reason for this or has it just not been updated with the author one?",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/228",
        "repository_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser",
        "labels_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/228/labels{/name}",
        "comments_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/228/comments",
        "events_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/228/events",
        "html_url": "https://github.com/sciunto-org/python-bibtexparser/issues/228",
        "id": 400332851,
        "node_id": "MDU6SXNzdWU0MDAzMzI4NTE=",
        "number": 228,
        "title": "Update release note to use twine to upload on pypi",
        "user": {
            "login": "sciunto",
            "id": 335370,
            "node_id": "MDQ6VXNlcjMzNTM3MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/335370?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sciunto",
            "html_url": "https://github.com/sciunto",
            "followers_url": "https://api.github.com/users/sciunto/followers",
            "following_url": "https://api.github.com/users/sciunto/following{/other_user}",
            "gists_url": "https://api.github.com/users/sciunto/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sciunto/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sciunto/subscriptions",
            "organizations_url": "https://api.github.com/users/sciunto/orgs",
            "repos_url": "https://api.github.com/users/sciunto/repos",
            "events_url": "https://api.github.com/users/sciunto/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sciunto/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2019-01-17T15:35:43Z",
        "updated_at": "2019-02-03T10:40:46Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "Uploading via this command is deprecated, use twine to upload instead",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/224",
        "repository_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser",
        "labels_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/224/labels{/name}",
        "comments_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/224/comments",
        "events_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/224/events",
        "html_url": "https://github.com/sciunto-org/python-bibtexparser/issues/224",
        "id": 367522093,
        "node_id": "MDU6SXNzdWUzNjc1MjIwOTM=",
        "number": 224,
        "title": "Confusing option setting for the parser",
        "user": {
            "login": "omangin",
            "id": 1171989,
            "node_id": "MDQ6VXNlcjExNzE5ODk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1171989?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/omangin",
            "html_url": "https://github.com/omangin",
            "followers_url": "https://api.github.com/users/omangin/followers",
            "following_url": "https://api.github.com/users/omangin/following{/other_user}",
            "gists_url": "https://api.github.com/users/omangin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/omangin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/omangin/subscriptions",
            "organizations_url": "https://api.github.com/users/omangin/orgs",
            "repos_url": "https://api.github.com/users/omangin/repos",
            "events_url": "https://api.github.com/users/omangin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/omangin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 23945170,
                "node_id": "MDU6TGFiZWwyMzk0NTE3MA==",
                "url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/labels/enhancement",
                "name": "enhancement",
                "color": "84b6eb",
                "default": true,
                "description": null
            },
            {
                "id": 23945172,
                "node_id": "MDU6TGFiZWwyMzk0NTE3Mg==",
                "url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/labels/question",
                "name": "question",
                "color": "cc317c",
                "default": true,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2018-10-07T05:09:43Z",
        "updated_at": "2018-12-04T07:55:54Z",
        "closed_at": null,
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "Some options have to be set when the parser object is created like `common_strings` because they are treated in the `__init__`, others can be changed until the parsing occurs by doing some `parser.option = new_value`.\r\n\r\nThis behavior is confusing and should be improved to convey more clearly what the parser object does and retain. It is not clear which approach to this is best: loading default strings could be delayed to just before parsing, or setting options directly could be deprecated.\r\n\r\nSee also #222.",
        "performed_via_github_app": null
    },
    {
        "url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/211",
        "repository_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser",
        "labels_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/211/labels{/name}",
        "comments_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/211/comments",
        "events_url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/issues/211/events",
        "html_url": "https://github.com/sciunto-org/python-bibtexparser/issues/211",
        "id": 347785148,
        "node_id": "MDU6SXNzdWUzNDc3ODUxNDg=",
        "number": 211,
        "title": "Not throwing exception on error?",
        "user": {
            "login": "benureau",
            "id": 2088743,
            "node_id": "MDQ6VXNlcjIwODg3NDM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2088743?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/benureau",
            "html_url": "https://github.com/benureau",
            "followers_url": "https://api.github.com/users/benureau/followers",
            "following_url": "https://api.github.com/users/benureau/following{/other_user}",
            "gists_url": "https://api.github.com/users/benureau/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/benureau/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/benureau/subscriptions",
            "organizations_url": "https://api.github.com/users/benureau/orgs",
            "repos_url": "https://api.github.com/users/benureau/repos",
            "events_url": "https://api.github.com/users/benureau/events{/privacy}",
            "received_events_url": "https://api.github.com/users/benureau/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 23945172,
                "node_id": "MDU6TGFiZWwyMzk0NTE3Mg==",
                "url": "https://api.github.com/repos/sciunto-org/python-bibtexparser/labels/question",
                "name": "question",
                "color": "cc317c",
                "default": true,
                "description": null
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2018-08-06T05:40:36Z",
        "updated_at": "2018-08-20T14:35:19Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "Hi, I have noticed that the current master does not throw PyParsing error anymore on some incorrect input: for instance,\r\n```\r\nfrom bibtexparser.bparser import BibTexParser\r\n\r\nbtp = BibTexParser()\r\n\r\nprint(btp.parse('@misc{I am not a correct bibtex{{}', partial=False).get_entry_dict())\r\n```\r\njust returns the empty dict right now. Is that normal? What do I have to do to get a parsing error that can give feedback on what went wrong?\r\n\r\nOh, the `BibTexParser(bibstring)` behavior is not documented (or announced deprecated), and does not accept the `partial` argument: it probably should. One way or the other, this just seems confusing right now.\r\n",
        "performed_via_github_app": null
    }
]